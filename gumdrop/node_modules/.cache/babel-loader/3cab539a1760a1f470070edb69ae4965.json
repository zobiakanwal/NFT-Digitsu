{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\");\n\nvar _objectSpread = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\objectSpread2.js\").default;\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.onChangeAccount = void 0;\n\nvar utils_1 = require(\"../../utils\");\n\nvar onChangeAccount = function onChangeAccount(process, setter) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(info) {\n      var pubkey, account;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pubkey = (0, utils_1.pubkeyToString)(info.accountId);\n              account = info.accountInfo;\n              _context.next = 4;\n              return process({\n                pubkey: pubkey,\n                account: _objectSpread(_objectSpread({}, account), {}, {\n                  // to make sure these accounts get processed by processAuctions, processVaultData, etc\n                  owner: account.owner.toBase58()\n                })\n              }, setter);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexports.onChangeAccount = onChangeAccount;","map":{"version":3,"sources":["../../../../src/contexts/meta/onChangeAccount.ts"],"names":[],"mappings":";;;;;;;;;;;;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAGO,IAAM,eAAe,GAC1B,SADW,eACX,CACE,OADF,EAEE,MAFF;AAAA;AAAA,wEAIA,iBAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ,cAAA,MADR,GACiB,CAAA,GAAA,OAAA,CAAA,cAAA,EAAe,IAAI,CAAC,SAApB,CADjB;AAEQ,cAAA,OAFR,GAEkB,IAAI,CAAC,WAFvB;AAAA;AAAA,qBAIQ,OAAO,CACX;AACE,gBAAA,MAAM,EAAN,MADF;AAEE,gBAAA,OAAO,kCACF,OADE;AAEL;AACA,kBAAA,KAAK,EAAE,OAAO,CAAC,KAAR,CAAc,QAAd;AAHF;AAFT,eADW,EASX,MATW,CAJf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJA;;AAAA;AAAA;AAAA;AAAA;AAAA,CADK;;AAAM,OAAA,CAAA,eAAA,GAAe,eAAf","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.onChangeAccount = void 0;\r\nconst utils_1 = require(\"../../utils\");\r\nconst onChangeAccount = (process, setter) => async (info) => {\r\n    const pubkey = (0, utils_1.pubkeyToString)(info.accountId);\r\n    const account = info.accountInfo;\r\n    await process({\r\n        pubkey,\r\n        account: {\r\n            ...account,\r\n            // to make sure these accounts get processed by processAuctions, processVaultData, etc\r\n            owner: account.owner.toBase58(),\r\n        },\r\n    }, setter);\r\n};\r\nexports.onChangeAccount = onChangeAccount;\r\n//# sourceMappingURL=onChangeAccount.js.map"]},"metadata":{},"sourceType":"script"}