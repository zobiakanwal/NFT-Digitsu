{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nvar CONTENT_LENGTH_HEADER = \"content-length\";\nexport function contentLengthMiddleware(bodyLengthChecker) {\n  var _this = this;\n\n  return function (next) {\n    return function (args) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var request, body, headers, length;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          request = args.request;\n\n          if (HttpRequest.isInstance(request)) {\n            body = request.body, headers = request.headers;\n\n            if (body && Object.keys(headers).map(function (str) {\n              return str.toLowerCase();\n            }).indexOf(CONTENT_LENGTH_HEADER) === -1) {\n              length = bodyLengthChecker(body);\n\n              if (length !== undefined) {\n                request.headers = __assign(__assign({}, request.headers), (_a = {}, _a[CONTENT_LENGTH_HEADER] = String(length), _a));\n              }\n            }\n          }\n\n          return [2, next(__assign(__assign({}, args), {\n            request: request\n          }))];\n        });\n      });\n    };\n  };\n}\nexport var contentLengthMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n  name: \"contentLengthMiddleware\",\n  override: true\n};\nexport var getContentLengthPlugin = function getContentLengthPlugin(options) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/AHSAN PC/Desktop/digitsu/gamp/js/node_modules/@aws-sdk/middleware-content-length/dist-es/index.js"],"names":["__assign","__awaiter","__generator","HttpRequest","CONTENT_LENGTH_HEADER","contentLengthMiddleware","bodyLengthChecker","_this","next","args","request","body","headers","length","_a","_b","isInstance","Object","keys","map","str","toLowerCase","indexOf","undefined","String","contentLengthMiddlewareOptions","step","tags","name","override","getContentLengthPlugin","options","applyToStack","clientStack","add"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,IAAIC,qBAAqB,GAAG,gBAA5B;AACA,OAAO,SAASC,uBAAT,CAAiCC,iBAAjC,EAAoD;AACvD,MAAIC,KAAK,GAAG,IAAZ;;AACA,SAAO,UAAUC,IAAV,EAAgB;AACnB,WAAO,UAAUC,IAAV,EAAgB;AAAE,aAAOR,SAAS,CAACM,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;AACzE,YAAIG,OAAJ,EAAaC,IAAb,EAAmBC,OAAnB,EAA4BC,MAA5B;;AACA,YAAIC,EAAJ;;AACA,eAAOZ,WAAW,CAAC,IAAD,EAAO,UAAUa,EAAV,EAAc;AACnCL,UAAAA,OAAO,GAAGD,IAAI,CAACC,OAAf;;AACA,cAAIP,WAAW,CAACa,UAAZ,CAAuBN,OAAvB,CAAJ,EAAqC;AACjCC,YAAAA,IAAI,GAAGD,OAAO,CAACC,IAAf,EAAqBC,OAAO,GAAGF,OAAO,CAACE,OAAvC;;AACA,gBAAID,IAAI,IACJM,MAAM,CAACC,IAAP,CAAYN,OAAZ,EACKO,GADL,CACS,UAAUC,GAAV,EAAe;AAAE,qBAAOA,GAAG,CAACC,WAAJ,EAAP;AAA2B,aADrD,EAEKC,OAFL,CAEalB,qBAFb,MAEwC,CAAC,CAH7C,EAGgD;AAC5CS,cAAAA,MAAM,GAAGP,iBAAiB,CAACK,IAAD,CAA1B;;AACA,kBAAIE,MAAM,KAAKU,SAAf,EAA0B;AACtBb,gBAAAA,OAAO,CAACE,OAAR,GAAkBZ,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKU,OAAO,CAACE,OAAb,CAAT,GAAiCE,EAAE,GAAG,EAAL,EAASA,EAAE,CAACV,qBAAD,CAAF,GAA4BoB,MAAM,CAACX,MAAD,CAA3C,EAAqDC,EAAtF,EAA1B;AACH;AACJ;AACJ;;AACD,iBAAO,CAAC,CAAD,EAAIN,IAAI,CAACR,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKS,IAAL,CAAT,EAAqB;AAAEC,YAAAA,OAAO,EAAEA;AAAX,WAArB,CAAT,CAAR,CAAP;AACH,SAfiB,CAAlB;AAgBH,OAnBwC,CAAhB;AAmBpB,KAnBL;AAoBH,GArBD;AAsBH;AACD,OAAO,IAAIe,8BAA8B,GAAG;AACxCC,EAAAA,IAAI,EAAE,OADkC;AAExCC,EAAAA,IAAI,EAAE,CAAC,oBAAD,EAAuB,gBAAvB,CAFkC;AAGxCC,EAAAA,IAAI,EAAE,yBAHkC;AAIxCC,EAAAA,QAAQ,EAAE;AAJ8B,CAArC;AAMP,OAAO,IAAIC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAUC,OAAV,EAAmB;AAAE,SAAQ;AAC7DC,IAAAA,YAAY,EAAE,sBAAUC,WAAV,EAAuB;AACjCA,MAAAA,WAAW,CAACC,GAAZ,CAAgB7B,uBAAuB,CAAC0B,OAAO,CAACzB,iBAAT,CAAvC,EAAoEmB,8BAApE;AACH;AAH4D,GAAR;AAIpD,CAJE","sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nvar CONTENT_LENGTH_HEADER = \"content-length\";\nexport function contentLengthMiddleware(bodyLengthChecker) {\n    var _this = this;\n    return function (next) {\n        return function (args) { return __awaiter(_this, void 0, void 0, function () {\n            var request, body, headers, length;\n            var _a;\n            return __generator(this, function (_b) {\n                request = args.request;\n                if (HttpRequest.isInstance(request)) {\n                    body = request.body, headers = request.headers;\n                    if (body &&\n                        Object.keys(headers)\n                            .map(function (str) { return str.toLowerCase(); })\n                            .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                        length = bodyLengthChecker(body);\n                        if (length !== undefined) {\n                            request.headers = __assign(__assign({}, request.headers), (_a = {}, _a[CONTENT_LENGTH_HEADER] = String(length), _a));\n                        }\n                    }\n                }\n                return [2, next(__assign(__assign({}, args), { request: request }))];\n            });\n        }); };\n    };\n}\nexport var contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nexport var getContentLengthPlugin = function (options) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    },\n}); };\n"]},"metadata":{},"sourceType":"module"}