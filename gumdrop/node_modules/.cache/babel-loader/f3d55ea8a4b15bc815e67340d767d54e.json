{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getEndpointFromRegion } from \"./utils/getEndpointFromRegion\";\nimport { normalizeBoolean } from \"./utils/normalizeBoolean\";\nimport { normalizeEndpoint } from \"./utils/normalizeEndpoint\";\nexport var resolveEndpointsConfig = function resolveEndpointsConfig(input) {\n  var _a;\n\n  var useDualstackEndpoint = normalizeBoolean(input.useDualstackEndpoint);\n  var endpoint = input.endpoint,\n      useFipsEndpoint = input.useFipsEndpoint;\n  return __assign(__assign({}, input), {\n    tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true,\n    endpoint: endpoint ? normalizeEndpoint(__assign(__assign({}, input), {\n      endpoint: endpoint\n    })) : function () {\n      return getEndpointFromRegion(__assign(__assign({}, input), {\n        useDualstackEndpoint: useDualstackEndpoint,\n        useFipsEndpoint: useFipsEndpoint\n      }));\n    },\n    isCustomEndpoint: endpoint ? true : false,\n    useDualstackEndpoint: useDualstackEndpoint\n  });\n};","map":{"version":3,"sources":["C:/Users/AHSAN PC/Desktop/digitsu/gamp/js/node_modules/@aws-sdk/config-resolver/dist-es/endpointsConfig/resolveEndpointsConfig.js"],"names":["__assign","getEndpointFromRegion","normalizeBoolean","normalizeEndpoint","resolveEndpointsConfig","input","_a","useDualstackEndpoint","endpoint","useFipsEndpoint","tls","isCustomEndpoint"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,OAAO,IAAIC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAUC,KAAV,EAAiB;AACjD,MAAIC,EAAJ;;AACA,MAAIC,oBAAoB,GAAGL,gBAAgB,CAACG,KAAK,CAACE,oBAAP,CAA3C;AACA,MAAIC,QAAQ,GAAGH,KAAK,CAACG,QAArB;AAAA,MAA+BC,eAAe,GAAGJ,KAAK,CAACI,eAAvD;AACA,SAAOT,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKK,KAAL,CAAT,EAAsB;AAAEK,IAAAA,GAAG,EAAE,CAACJ,EAAE,GAAGD,KAAK,CAACK,GAAZ,MAAqB,IAArB,IAA6BJ,EAAE,KAAK,KAAK,CAAzC,GAA6CA,EAA7C,GAAkD,IAAzD;AAA+DE,IAAAA,QAAQ,EAAEA,QAAQ,GAC5GL,iBAAiB,CAACH,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKK,KAAL,CAAT,EAAsB;AAAEG,MAAAA,QAAQ,EAAEA;AAAZ,KAAtB,CAAT,CAD2F,GAE5G,YAAY;AAAE,aAAOP,qBAAqB,CAACD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKK,KAAL,CAAT,EAAsB;AAAEE,QAAAA,oBAAoB,EAAEA,oBAAxB;AAA8CE,QAAAA,eAAe,EAAEA;AAA/D,OAAtB,CAAT,CAA5B;AAAgJ,KAFnI;AAEqIE,IAAAA,gBAAgB,EAAEH,QAAQ,GAAG,IAAH,GAAU,KAFzK;AAEgLD,IAAAA,oBAAoB,EAAEA;AAFtM,GAAtB,CAAf;AAGH,CAPM","sourcesContent":["import { __assign } from \"tslib\";\nimport { getEndpointFromRegion } from \"./utils/getEndpointFromRegion\";\nimport { normalizeBoolean } from \"./utils/normalizeBoolean\";\nimport { normalizeEndpoint } from \"./utils/normalizeEndpoint\";\nexport var resolveEndpointsConfig = function (input) {\n    var _a;\n    var useDualstackEndpoint = normalizeBoolean(input.useDualstackEndpoint);\n    var endpoint = input.endpoint, useFipsEndpoint = input.useFipsEndpoint;\n    return __assign(__assign({}, input), { tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true, endpoint: endpoint\n            ? normalizeEndpoint(__assign(__assign({}, input), { endpoint: endpoint }))\n            : function () { return getEndpointFromRegion(__assign(__assign({}, input), { useDualstackEndpoint: useDualstackEndpoint, useFipsEndpoint: useFipsEndpoint })); }, isCustomEndpoint: endpoint ? true : false, useDualstackEndpoint: useDualstackEndpoint });\n};\n"]},"metadata":{},"sourceType":"module"}