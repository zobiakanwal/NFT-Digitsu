{"ast":null,"code":"import { __values } from \"tslib\";\nimport { escapeUri } from \"@aws-sdk/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport var getCanonicalQuery = function getCanonicalQuery(_a) {\n  var e_1, _b;\n\n  var _c = _a.query,\n      query = _c === void 0 ? {} : _c;\n  var keys = [];\n  var serialized = {};\n\n  var _loop_1 = function _loop_1(key) {\n    if (key.toLowerCase() === SIGNATURE_HEADER) {\n      return \"continue\";\n    }\n\n    keys.push(key);\n    var value = query[key];\n\n    if (typeof value === \"string\") {\n      serialized[key] = escapeUri(key) + \"=\" + escapeUri(value);\n    } else if (Array.isArray(value)) {\n      serialized[key] = value.slice(0).sort().reduce(function (encoded, value) {\n        return encoded.concat([escapeUri(key) + \"=\" + escapeUri(value)]);\n      }, []).join(\"&\");\n    }\n  };\n\n  try {\n    for (var _d = __values(Object.keys(query).sort()), _e = _d.next(); !_e.done; _e = _d.next()) {\n      var key = _e.value;\n\n      _loop_1(key);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return keys.map(function (key) {\n    return serialized[key];\n  }).filter(function (serialized) {\n    return serialized;\n  }).join(\"&\");\n};","map":{"version":3,"sources":["C:/Users/AHSAN PC/Desktop/digitsu/gamp/js/node_modules/@aws-sdk/signature-v4/dist-es/getCanonicalQuery.js"],"names":["__values","escapeUri","SIGNATURE_HEADER","getCanonicalQuery","_a","e_1","_b","_c","query","keys","serialized","_loop_1","key","toLowerCase","push","value","Array","isArray","slice","sort","reduce","encoded","concat","join","_d","Object","_e","next","done","e_1_1","error","return","call","map","filter"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,OAAO,IAAIC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUC,EAAV,EAAc;AACzC,MAAIC,GAAJ,EAASC,EAAT;;AACA,MAAIC,EAAE,GAAGH,EAAE,CAACI,KAAZ;AAAA,MAAmBA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAAhD;AACA,MAAIE,IAAI,GAAG,EAAX;AACA,MAAIC,UAAU,GAAG,EAAjB;;AACA,MAAIC,OAAO,GAAG,SAAVA,OAAU,CAAUC,GAAV,EAAe;AACzB,QAAIA,GAAG,CAACC,WAAJ,OAAsBX,gBAA1B,EAA4C;AACxC,aAAO,UAAP;AACH;;AACDO,IAAAA,IAAI,CAACK,IAAL,CAAUF,GAAV;AACA,QAAIG,KAAK,GAAGP,KAAK,CAACI,GAAD,CAAjB;;AACA,QAAI,OAAOG,KAAP,KAAiB,QAArB,EAA+B;AAC3BL,MAAAA,UAAU,CAACE,GAAD,CAAV,GAAkBX,SAAS,CAACW,GAAD,CAAT,GAAiB,GAAjB,GAAuBX,SAAS,CAACc,KAAD,CAAlD;AACH,KAFD,MAGK,IAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AAC3BL,MAAAA,UAAU,CAACE,GAAD,CAAV,GAAkBG,KAAK,CAClBG,KADa,CACP,CADO,EAEbC,IAFa,GAGbC,MAHa,CAGN,UAAUC,OAAV,EAAmBN,KAAnB,EAA0B;AAAE,eAAOM,OAAO,CAACC,MAAR,CAAe,CAACrB,SAAS,CAACW,GAAD,CAAT,GAAiB,GAAjB,GAAuBX,SAAS,CAACc,KAAD,CAAjC,CAAf,CAAP;AAAmE,OAHzF,EAG2F,EAH3F,EAIbQ,IAJa,CAIR,GAJQ,CAAlB;AAKH;AACJ,GAhBD;;AAiBA,MAAI;AACA,SAAK,IAAIC,EAAE,GAAGxB,QAAQ,CAACyB,MAAM,CAAChB,IAAP,CAAYD,KAAZ,EAAmBW,IAAnB,EAAD,CAAjB,EAA8CO,EAAE,GAAGF,EAAE,CAACG,IAAH,EAAxD,EAAmE,CAACD,EAAE,CAACE,IAAvE,EAA6EF,EAAE,GAAGF,EAAE,CAACG,IAAH,EAAlF,EAA6F;AACzF,UAAIf,GAAG,GAAGc,EAAE,CAACX,KAAb;;AACAJ,MAAAA,OAAO,CAACC,GAAD,CAAP;AACH;AACJ,GALD,CAMA,OAAOiB,KAAP,EAAc;AAAExB,IAAAA,GAAG,GAAG;AAAEyB,MAAAA,KAAK,EAAED;AAAT,KAAN;AAAyB,GANzC,SAOQ;AACJ,QAAI;AACA,UAAIH,EAAE,IAAI,CAACA,EAAE,CAACE,IAAV,KAAmBtB,EAAE,GAAGkB,EAAE,CAACO,MAA3B,CAAJ,EAAwCzB,EAAE,CAAC0B,IAAH,CAAQR,EAAR;AAC3C,KAFD,SAGQ;AAAE,UAAInB,GAAJ,EAAS,MAAMA,GAAG,CAACyB,KAAV;AAAkB;AACxC;;AACD,SAAOrB,IAAI,CACNwB,GADE,CACE,UAAUrB,GAAV,EAAe;AAAE,WAAOF,UAAU,CAACE,GAAD,CAAjB;AAAyB,GAD5C,EAEFsB,MAFE,CAEK,UAAUxB,UAAV,EAAsB;AAAE,WAAOA,UAAP;AAAoB,GAFjD,EAGFa,IAHE,CAGG,GAHH,CAAP;AAIH,CAvCM","sourcesContent":["import { __values } from \"tslib\";\nimport { escapeUri } from \"@aws-sdk/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport var getCanonicalQuery = function (_a) {\n    var e_1, _b;\n    var _c = _a.query, query = _c === void 0 ? {} : _c;\n    var keys = [];\n    var serialized = {};\n    var _loop_1 = function (key) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            return \"continue\";\n        }\n        keys.push(key);\n        var value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = escapeUri(key) + \"=\" + escapeUri(value);\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce(function (encoded, value) { return encoded.concat([escapeUri(key) + \"=\" + escapeUri(value)]); }, [])\n                .join(\"&\");\n        }\n    };\n    try {\n        for (var _d = __values(Object.keys(query).sort()), _e = _d.next(); !_e.done; _e = _d.next()) {\n            var key = _e.value;\n            _loop_1(key);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return keys\n        .map(function (key) { return serialized[key]; })\n        .filter(function (serialized) { return serialized; })\n        .join(\"&\");\n};\n"]},"metadata":{},"sourceType":"module"}