{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.processMetaData = void 0;\n\nvar isValidHttpUrl_1 = require(\"../../utils/isValidHttpUrl\");\n\nvar actions_1 = require(\"../../actions\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar processMetaData = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref, setter) {\n    var account, pubkey, metadata, parsedAccount, edition, _parsedAccount, masterEdition, _parsedAccount2, _parsedAccount3;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            account = _ref.account, pubkey = _ref.pubkey;\n\n            if (isMetadataAccount(account)) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 3:\n            _context.prev = 3;\n\n            if (!isMetadataV1Account(account)) {\n              _context.next = 12;\n              break;\n            }\n\n            metadata = (0, actions_1.decodeMetadata)(account.data);\n\n            if (!(0, isValidHttpUrl_1.isValidHttpUrl)(metadata.data.uri)) {\n              _context.next = 12;\n              break;\n            }\n\n            parsedAccount = {\n              pubkey: pubkey,\n              account: account,\n              info: metadata\n            };\n            _context.next = 10;\n            return setter('metadataByMint', metadata.mint, parsedAccount);\n\n          case 10:\n            _context.next = 12;\n            return setter('metadataByMetadata', pubkey, parsedAccount);\n\n          case 12:\n            if (isEditionV1Account(account)) {\n              edition = (0, actions_1.decodeEdition)(account.data);\n              _parsedAccount = {\n                pubkey: pubkey,\n                account: account,\n                info: edition\n              };\n              setter('editions', pubkey, _parsedAccount);\n            }\n\n            if (isMasterEditionAccount(account)) {\n              masterEdition = (0, actions_1.decodeMasterEdition)(account.data);\n\n              if (isMasterEditionV1(masterEdition)) {\n                _parsedAccount2 = {\n                  pubkey: pubkey,\n                  account: account,\n                  info: masterEdition\n                };\n                setter('masterEditions', pubkey, _parsedAccount2);\n                setter('masterEditionsByPrintingMint', masterEdition.printingMint, _parsedAccount2);\n                setter('masterEditionsByOneTimeAuthMint', masterEdition.oneTimePrintingAuthorizationMint, _parsedAccount2);\n              } else {\n                _parsedAccount3 = {\n                  pubkey: pubkey,\n                  account: account,\n                  info: masterEdition\n                };\n                setter('masterEditions', pubkey, _parsedAccount3);\n              }\n            }\n\n            _context.next = 18;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](3);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 16]]);\n  }));\n\n  return function processMetaData(_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.processMetaData = processMetaData;\n\nvar isMetadataAccount = function isMetadataAccount(account) {\n  return account && (0, utils_1.pubkeyToString)(account.owner) === utils_1.METADATA_PROGRAM_ID;\n};\n\nvar isMetadataV1Account = function isMetadataV1Account(account) {\n  return account.data[0] === actions_1.MetadataKey.MetadataV1;\n};\n\nvar isEditionV1Account = function isEditionV1Account(account) {\n  return account.data[0] === actions_1.MetadataKey.EditionV1;\n};\n\nvar isMasterEditionAccount = function isMasterEditionAccount(account) {\n  return account.data[0] === actions_1.MetadataKey.MasterEditionV1 || account.data[0] === actions_1.MetadataKey.MasterEditionV2;\n};\n\nvar isMasterEditionV1 = function isMasterEditionV1(me) {\n  return me.key === actions_1.MetadataKey.MasterEditionV1;\n};","map":{"version":3,"sources":["../../../../src/contexts/meta/processMetaData.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.processMetaData = void 0;\r\nconst isValidHttpUrl_1 = require(\"../../utils/isValidHttpUrl\");\r\nconst actions_1 = require(\"../../actions\");\r\nconst utils_1 = require(\"../../utils\");\r\nconst processMetaData = async ({ account, pubkey }, setter) => {\r\n    if (!isMetadataAccount(account))\r\n        return;\r\n    try {\r\n        if (isMetadataV1Account(account)) {\r\n            const metadata = (0, actions_1.decodeMetadata)(account.data);\r\n            if ((0, isValidHttpUrl_1.isValidHttpUrl)(metadata.data.uri)) {\r\n                const parsedAccount = {\r\n                    pubkey,\r\n                    account,\r\n                    info: metadata,\r\n                };\r\n                await setter('metadataByMint', metadata.mint, parsedAccount);\r\n                await setter('metadataByMetadata', pubkey, parsedAccount);\r\n            }\r\n        }\r\n        if (isEditionV1Account(account)) {\r\n            const edition = (0, actions_1.decodeEdition)(account.data);\r\n            const parsedAccount = {\r\n                pubkey,\r\n                account,\r\n                info: edition,\r\n            };\r\n            setter('editions', pubkey, parsedAccount);\r\n        }\r\n        if (isMasterEditionAccount(account)) {\r\n            const masterEdition = (0, actions_1.decodeMasterEdition)(account.data);\r\n            if (isMasterEditionV1(masterEdition)) {\r\n                const parsedAccount = {\r\n                    pubkey,\r\n                    account,\r\n                    info: masterEdition,\r\n                };\r\n                setter('masterEditions', pubkey, parsedAccount);\r\n                setter('masterEditionsByPrintingMint', masterEdition.printingMint, parsedAccount);\r\n                setter('masterEditionsByOneTimeAuthMint', masterEdition.oneTimePrintingAuthorizationMint, parsedAccount);\r\n            }\r\n            else {\r\n                const parsedAccount = {\r\n                    pubkey,\r\n                    account,\r\n                    info: masterEdition,\r\n                };\r\n                setter('masterEditions', pubkey, parsedAccount);\r\n            }\r\n        }\r\n    }\r\n    catch {\r\n        // ignore errors\r\n        // add type as first byte for easier deserialization\r\n    }\r\n};\r\nexports.processMetaData = processMetaData;\r\nconst isMetadataAccount = (account) => account && (0, utils_1.pubkeyToString)(account.owner) === utils_1.METADATA_PROGRAM_ID;\r\nconst isMetadataV1Account = (account) => account.data[0] === actions_1.MetadataKey.MetadataV1;\r\nconst isEditionV1Account = (account) => account.data[0] === actions_1.MetadataKey.EditionV1;\r\nconst isMasterEditionAccount = (account) => account.data[0] === actions_1.MetadataKey.MasterEditionV1 ||\r\n    account.data[0] === actions_1.MetadataKey.MasterEditionV2;\r\nconst isMasterEditionV1 = (me) => {\r\n    return me.key === actions_1.MetadataKey.MasterEditionV1;\r\n};\r\n//# sourceMappingURL=processMetaData.js.map"]},"metadata":{},"sourceType":"script"}