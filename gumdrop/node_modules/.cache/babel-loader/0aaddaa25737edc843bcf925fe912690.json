{"ast":null,"code":"import { LedgerWalletAdapter } from '@solana/wallet-adapter-ledger';\nimport { MathWalletWalletAdapter } from '@solana/wallet-adapter-mathwallet';\nimport { PhantomWalletAdapter } from '@solana/wallet-adapter-phantom';\nimport { SlopeWalletAdapter } from '@solana/wallet-adapter-slope';\nimport { SolflareWalletAdapter } from '@solana/wallet-adapter-solflare';\nimport { SolletWalletAdapter } from '@solana/wallet-adapter-sollet';\nimport { SolongWalletAdapter } from '@solana/wallet-adapter-solong';\nimport { TorusWalletAdapter } from '@solana/wallet-adapter-torus';\nexport var WalletName;\n\n(function (WalletName) {\n  WalletName[\"Ledger\"] = \"Ledger\";\n  WalletName[\"MathWallet\"] = \"MathWallet\";\n  WalletName[\"Phantom\"] = \"Phantom\";\n  WalletName[\"Slope\"] = \"Slope\";\n  WalletName[\"Solflare\"] = \"Solflare\";\n  WalletName[\"SolflareWeb\"] = \"Solflare (Web)\";\n  WalletName[\"Sollet\"] = \"Sollet\";\n  WalletName[\"Solong\"] = \"Solong\";\n  WalletName[\"Torus\"] = \"Torus\";\n})(WalletName || (WalletName = {}));\n\nexport var ICONS_URL = 'https://raw.githubusercontent.com/solana-labs/wallet-adapter/master/packages/wallets/icons';\nexport var getLedgerWallet = function getLedgerWallet(config) {\n  return {\n    name: WalletName.Ledger,\n    url: 'https://www.ledger.com',\n    icon: \"\".concat(ICONS_URL, \"/ledger.svg\"),\n    adapter: function adapter() {\n      return new LedgerWalletAdapter(config);\n    }\n  };\n};\nexport var getMathWallet = function getMathWallet(config) {\n  return {\n    name: WalletName.MathWallet,\n    url: 'https://mathwallet.org',\n    icon: \"\".concat(ICONS_URL, \"/mathwallet.svg\"),\n    adapter: function adapter() {\n      return new MathWalletWalletAdapter(config);\n    }\n  };\n};\nexport var getPhantomWallet = function getPhantomWallet(config) {\n  return {\n    name: WalletName.Phantom,\n    url: 'https://www.phantom.app',\n    icon: \"\".concat(ICONS_URL, \"/phantom.svg\"),\n    adapter: function adapter() {\n      return new PhantomWalletAdapter(config);\n    }\n  };\n};\nexport var getSlopeWallet = function getSlopeWallet(config) {\n  return {\n    name: WalletName.Slope,\n    url: 'https://slope.finance',\n    icon: \"\".concat(ICONS_URL, \"/slope.svg\"),\n    adapter: function adapter() {\n      return new SlopeWalletAdapter(config);\n    }\n  };\n};\nexport var getSolflareWallet = function getSolflareWallet(config) {\n  return {\n    name: WalletName.Solflare,\n    url: 'https://solflare.com',\n    icon: \"\".concat(ICONS_URL, \"/solflare.svg\"),\n    adapter: function adapter() {\n      return new SolflareWalletAdapter(config);\n    }\n  };\n};\nexport var getSolflareWebWallet = function getSolflareWebWallet(config) {\n  return {\n    name: WalletName.SolflareWeb,\n    url: 'https://solflare.com',\n    icon: \"\".concat(ICONS_URL, \"/solflare.svg\"),\n    adapter: function adapter() {\n      return new SolletWalletAdapter(Object.assign(Object.assign({}, config), {\n        provider: (config === null || config === void 0 ? void 0 : config.provider) || 'https://solflare.com/access-wallet'\n      }));\n    }\n  };\n};\nexport var getSolletWallet = function getSolletWallet(config) {\n  return {\n    name: WalletName.Sollet,\n    url: 'https://www.sollet.io',\n    icon: \"\".concat(ICONS_URL, \"/sollet.svg\"),\n    adapter: function adapter() {\n      return new SolletWalletAdapter(config);\n    }\n  };\n};\nexport var getSolongWallet = function getSolongWallet(config) {\n  return {\n    name: WalletName.Solong,\n    url: 'https://solongwallet.com',\n    icon: \"\".concat(ICONS_URL, \"/solong.png\"),\n    adapter: function adapter() {\n      return new SolongWalletAdapter(config);\n    }\n  };\n};\nexport var getTorusWallet = function getTorusWallet(config) {\n  return {\n    name: WalletName.Torus,\n    url: 'https://tor.us',\n    icon: \"\".concat(ICONS_URL, \"/torus.svg\"),\n    adapter: function adapter() {\n      return new TorusWalletAdapter(config);\n    }\n  };\n};","map":{"version":3,"sources":["../src/wallets.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { LedgerWalletAdapter } from '@solana/wallet-adapter-ledger';\nimport { MathWalletWalletAdapter } from '@solana/wallet-adapter-mathwallet';\nimport { PhantomWalletAdapter } from '@solana/wallet-adapter-phantom';\nimport { SlopeWalletAdapter } from '@solana/wallet-adapter-slope';\nimport { SolflareWalletAdapter } from '@solana/wallet-adapter-solflare';\nimport { SolletWalletAdapter } from '@solana/wallet-adapter-sollet';\nimport { SolongWalletAdapter } from '@solana/wallet-adapter-solong';\nimport { TorusWalletAdapter } from '@solana/wallet-adapter-torus';\nexport var WalletName;\n(function (WalletName) {\n    WalletName[\"Ledger\"] = \"Ledger\";\n    WalletName[\"MathWallet\"] = \"MathWallet\";\n    WalletName[\"Phantom\"] = \"Phantom\";\n    WalletName[\"Slope\"] = \"Slope\";\n    WalletName[\"Solflare\"] = \"Solflare\";\n    WalletName[\"SolflareWeb\"] = \"Solflare (Web)\";\n    WalletName[\"Sollet\"] = \"Sollet\";\n    WalletName[\"Solong\"] = \"Solong\";\n    WalletName[\"Torus\"] = \"Torus\";\n})(WalletName || (WalletName = {}));\nexport const ICONS_URL = 'https://raw.githubusercontent.com/solana-labs/wallet-adapter/master/packages/wallets/icons';\nexport const getLedgerWallet = (config) => ({\n    name: WalletName.Ledger,\n    url: 'https://www.ledger.com',\n    icon: `${ICONS_URL}/ledger.svg`,\n    adapter: () => new LedgerWalletAdapter(config),\n});\nexport const getMathWallet = (config) => ({\n    name: WalletName.MathWallet,\n    url: 'https://mathwallet.org',\n    icon: `${ICONS_URL}/mathwallet.svg`,\n    adapter: () => new MathWalletWalletAdapter(config),\n});\nexport const getPhantomWallet = (config) => ({\n    name: WalletName.Phantom,\n    url: 'https://www.phantom.app',\n    icon: `${ICONS_URL}/phantom.svg`,\n    adapter: () => new PhantomWalletAdapter(config),\n});\nexport const getSlopeWallet = (config) => ({\n    name: WalletName.Slope,\n    url: 'https://slope.finance',\n    icon: `${ICONS_URL}/slope.svg`,\n    adapter: () => new SlopeWalletAdapter(config),\n});\nexport const getSolflareWallet = (config) => ({\n    name: WalletName.Solflare,\n    url: 'https://solflare.com',\n    icon: `${ICONS_URL}/solflare.svg`,\n    adapter: () => new SolflareWalletAdapter(config),\n});\nexport const getSolflareWebWallet = (config) => ({\n    name: WalletName.SolflareWeb,\n    url: 'https://solflare.com',\n    icon: `${ICONS_URL}/solflare.svg`,\n    adapter: () => new SolletWalletAdapter(Object.assign(Object.assign({}, config), { provider: (config === null || config === void 0 ? void 0 : config.provider) || 'https://solflare.com/access-wallet' })),\n});\nexport const getSolletWallet = (config) => ({\n    name: WalletName.Sollet,\n    url: 'https://www.sollet.io',\n    icon: `${ICONS_URL}/sollet.svg`,\n    adapter: () => new SolletWalletAdapter(config),\n});\nexport const getSolongWallet = (config) => ({\n    name: WalletName.Solong,\n    url: 'https://solongwallet.com',\n    icon: `${ICONS_URL}/solong.png`,\n    adapter: () => new SolongWalletAdapter(config),\n});\nexport const getTorusWallet = (config) => ({\n    name: WalletName.Torus,\n    url: 'https://tor.us',\n    icon: `${ICONS_URL}/torus.svg`,\n    adapter: () => new TorusWalletAdapter(config),\n});\n//# sourceMappingURL=wallets.js.map"]},"metadata":{},"sourceType":"module"}