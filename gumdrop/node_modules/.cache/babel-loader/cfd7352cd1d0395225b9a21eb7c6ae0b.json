{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cleanUp = void 0;\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar borsh_1 = require(\"borsh\");\n\nvar utils_1 = require(\"../../../utils\");\n\nvar packs_1 = require(\"../../../actions/packs\");\n\nvar find_1 = require(\"../find\");\n\nfunction cleanUp(_x) {\n  return _cleanUp.apply(this, arguments);\n}\n\nfunction _cleanUp() {\n  _cleanUp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(packSetKey) {\n    var PROGRAM_IDS, value, store, packConfig, data, keys;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            PROGRAM_IDS = (0, utils_1.programIds)();\n            value = new packs_1.CleanUpArgs();\n            store = PROGRAM_IDS.store;\n\n            if (store) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error('Store not initialized');\n\n          case 5:\n            _context.next = 7;\n            return (0, find_1.findPackConfigProgramAddress)(packSetKey);\n\n          case 7:\n            packConfig = _context.sent;\n            data = Buffer.from((0, borsh_1.serialize)(packs_1.PACKS_SCHEMA, value));\n            keys = [// pack_set\n            {\n              pubkey: (0, utils_1.toPublicKey)(packSetKey),\n              isSigner: false,\n              isWritable: true\n            }, // pack_config\n            {\n              pubkey: (0, utils_1.toPublicKey)(packConfig),\n              isSigner: false,\n              isWritable: true\n            }];\n            return _context.abrupt(\"return\", new web3_js_1.TransactionInstruction({\n              keys: keys,\n              programId: (0, utils_1.toPublicKey)(PROGRAM_IDS.pack_create),\n              data: data\n            }));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _cleanUp.apply(this, arguments);\n}\n\nexports.cleanUp = cleanUp;","map":{"version":3,"sources":["../../../../../src/models/packs/instructions/cleanUp.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,IAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;SAEsB,O;;;;;sEAAf,iBACL,UADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAGC,YAAA,WAHD,GAGe,CAAA,GAAA,OAAA,CAAA,UAAA,GAHf;AAKC,YAAA,KALD,GAKS,IAAI,OAAA,CAAA,WAAJ,EALT;AAOC,YAAA,KAPD,GAOS,WAAW,CAAC,KAPrB;;AAAA,gBAQA,KARA;AAAA;AAAA;AAAA;;AAAA,kBASG,IAAI,KAAJ,CAAU,uBAAV,CATH;;AAAA;AAAA;AAAA,mBAYoB,CAAA,GAAA,MAAA,CAAA,4BAAA,EAA6B,UAA7B,CAZpB;;AAAA;AAYC,YAAA,UAZD;AAcC,YAAA,IAdD,GAcQ,MAAM,CAAC,IAAP,CAAY,CAAA,GAAA,OAAA,CAAA,SAAA,EAAU,OAAA,CAAA,YAAV,EAAwB,KAAxB,CAAZ,CAdR;AAeC,YAAA,IAfD,GAeQ,CACX;AACA;AACE,cAAA,MAAM,EAAE,CAAA,GAAA,OAAA,CAAA,WAAA,EAAY,UAAZ,CADV;AAEE,cAAA,QAAQ,EAAE,KAFZ;AAGE,cAAA,UAAU,EAAE;AAHd,aAFW,EAOX;AACA;AACE,cAAA,MAAM,EAAE,CAAA,GAAA,OAAA,CAAA,WAAA,EAAY,UAAZ,CADV;AAEE,cAAA,QAAQ,EAAE,KAFZ;AAGE,cAAA,UAAU,EAAE;AAHd,aARW,CAfR;AAAA,6CA8BE,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AAChC,cAAA,IAAI,EAAJ,IADgC;AAEhC,cAAA,SAAS,EAAE,CAAA,GAAA,OAAA,CAAA,WAAA,EAAY,WAAW,CAAC,WAAxB,CAFqB;AAGhC,cAAA,IAAI,EAAJ;AAHgC,aAA3B,CA9BF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAAP,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.cleanUp = void 0;\r\nconst web3_js_1 = require(\"@solana/web3.js\");\r\nconst borsh_1 = require(\"borsh\");\r\nconst utils_1 = require(\"../../../utils\");\r\nconst packs_1 = require(\"../../../actions/packs\");\r\nconst find_1 = require(\"../find\");\r\nasync function cleanUp(packSetKey) {\r\n    const PROGRAM_IDS = (0, utils_1.programIds)();\r\n    const value = new packs_1.CleanUpArgs();\r\n    const store = PROGRAM_IDS.store;\r\n    if (!store) {\r\n        throw new Error('Store not initialized');\r\n    }\r\n    const packConfig = await (0, find_1.findPackConfigProgramAddress)(packSetKey);\r\n    const data = Buffer.from((0, borsh_1.serialize)(packs_1.PACKS_SCHEMA, value));\r\n    const keys = [\r\n        // pack_set\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(packSetKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        // pack_config\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(packConfig),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n    ];\r\n    return new web3_js_1.TransactionInstruction({\r\n        keys,\r\n        programId: (0, utils_1.toPublicKey)(PROGRAM_IDS.pack_create),\r\n        data,\r\n    });\r\n}\r\nexports.cleanUp = cleanUp;\r\n//# sourceMappingURL=cleanUp.js.map"]},"metadata":{},"sourceType":"script"}