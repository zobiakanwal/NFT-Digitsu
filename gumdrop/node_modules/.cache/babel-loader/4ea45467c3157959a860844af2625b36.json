{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addCardToPack = void 0;\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar borsh_1 = require(\"borsh\");\n\nvar __1 = require(\"../../..\");\n\nvar utils_1 = require(\"../../../utils\");\n\nvar packs_1 = require(\"../../../actions/packs\");\n\nvar find_1 = require(\"../find\");\n\nfunction addCardToPack(_x) {\n  return _addCardToPack.apply(this, arguments);\n}\n\nfunction _addCardToPack() {\n  _addCardToPack = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var maxSupply, weight, index, packSetKey, authority, mint, tokenAccount, toAccount, PROGRAM_IDS, value, store, masterMetadataKey, masterEdition, programAuthority, packCard, packConfig, sourceKey, data, keys;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            maxSupply = _ref.maxSupply, weight = _ref.weight, index = _ref.index, packSetKey = _ref.packSetKey, authority = _ref.authority, mint = _ref.mint, tokenAccount = _ref.tokenAccount, toAccount = _ref.toAccount;\n            PROGRAM_IDS = (0, utils_1.programIds)();\n            value = new packs_1.AddCardToPackArgs({\n              maxSupply: maxSupply,\n              weight: weight,\n              index: index\n            });\n            store = PROGRAM_IDS.store;\n\n            if (store) {\n              _context.next = 6;\n              break;\n            }\n\n            throw new Error('Store not initialized');\n\n          case 6:\n            _context.next = 8;\n            return (0, __1.getMetadata)(mint);\n\n          case 8:\n            masterMetadataKey = _context.sent;\n            _context.next = 11;\n            return (0, __1.getEdition)(mint);\n\n          case 11:\n            masterEdition = _context.sent;\n            _context.next = 14;\n            return (0, find_1.getProgramAuthority)();\n\n          case 14:\n            programAuthority = _context.sent;\n            _context.next = 17;\n            return (0, find_1.findPackCardProgramAddress)(packSetKey, index);\n\n          case 17:\n            packCard = _context.sent;\n            _context.next = 20;\n            return (0, find_1.findPackConfigProgramAddress)(packSetKey);\n\n          case 20:\n            packConfig = _context.sent;\n            sourceKey = tokenAccount.pubkey;\n            data = Buffer.from((0, borsh_1.serialize)(packs_1.PACKS_SCHEMA, value));\n            keys = [// pack_set\n            {\n              pubkey: (0, utils_1.toPublicKey)(packSetKey),\n              isSigner: false,\n              isWritable: true\n            }, // pack_config\n            {\n              pubkey: (0, utils_1.toPublicKey)(packConfig),\n              isSigner: false,\n              isWritable: true\n            }, // pack_card\n            {\n              pubkey: (0, utils_1.toPublicKey)(packCard),\n              isSigner: false,\n              isWritable: true\n            }, // signer authority\n            {\n              pubkey: (0, utils_1.toPublicKey)(authority),\n              isSigner: true,\n              isWritable: false\n            }, // master_edition\n            {\n              pubkey: (0, utils_1.toPublicKey)(masterEdition),\n              isSigner: false,\n              isWritable: false\n            }, // master_metadata\n            {\n              pubkey: (0, utils_1.toPublicKey)(masterMetadataKey),\n              isSigner: false,\n              isWritable: false\n            }, // mint\n            {\n              pubkey: (0, utils_1.toPublicKey)(mint),\n              isSigner: false,\n              isWritable: false\n            }, // source\n            {\n              pubkey: (0, utils_1.toPublicKey)(sourceKey),\n              isSigner: false,\n              isWritable: true\n            }, // token_account\n            {\n              pubkey: (0, utils_1.toPublicKey)(toAccount.publicKey),\n              isSigner: false,\n              isWritable: true\n            }, // program_authority\n            {\n              pubkey: (0, utils_1.toPublicKey)(programAuthority),\n              isSigner: false,\n              isWritable: false\n            }, // store\n            {\n              pubkey: (0, utils_1.toPublicKey)(store),\n              isSigner: false,\n              isWritable: false\n            }, // rent\n            {\n              pubkey: (0, utils_1.toPublicKey)(web3_js_1.SYSVAR_RENT_PUBKEY),\n              isSigner: false,\n              isWritable: false\n            }, // system_program\n            {\n              pubkey: web3_js_1.SystemProgram.programId,\n              isSigner: false,\n              isWritable: false\n            }, // spl_token program\n            {\n              pubkey: (0, utils_1.programIds)().token,\n              isSigner: false,\n              isWritable: false\n            }];\n            return _context.abrupt(\"return\", new web3_js_1.TransactionInstruction({\n              keys: keys,\n              programId: (0, utils_1.toPublicKey)(PROGRAM_IDS.pack_create),\n              data: data\n            }));\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _addCardToPack.apply(this, arguments);\n}\n\nexports.addCardToPack = addCardToPack;","map":{"version":3,"sources":["../../../../../src/models/packs/instructions/addCardToPack.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.addCardToPack = void 0;\r\nconst web3_js_1 = require(\"@solana/web3.js\");\r\nconst borsh_1 = require(\"borsh\");\r\nconst __1 = require(\"../../..\");\r\nconst utils_1 = require(\"../../../utils\");\r\nconst packs_1 = require(\"../../../actions/packs\");\r\nconst find_1 = require(\"../find\");\r\nasync function addCardToPack({ maxSupply, weight, index, packSetKey, authority, mint, tokenAccount, toAccount, }) {\r\n    const PROGRAM_IDS = (0, utils_1.programIds)();\r\n    const value = new packs_1.AddCardToPackArgs({\r\n        maxSupply,\r\n        weight,\r\n        index,\r\n    });\r\n    const store = PROGRAM_IDS.store;\r\n    if (!store) {\r\n        throw new Error('Store not initialized');\r\n    }\r\n    const masterMetadataKey = await (0, __1.getMetadata)(mint);\r\n    const masterEdition = await (0, __1.getEdition)(mint);\r\n    const programAuthority = await (0, find_1.getProgramAuthority)();\r\n    const packCard = await (0, find_1.findPackCardProgramAddress)(packSetKey, index);\r\n    const packConfig = await (0, find_1.findPackConfigProgramAddress)(packSetKey);\r\n    const { pubkey: sourceKey } = tokenAccount;\r\n    const data = Buffer.from((0, borsh_1.serialize)(packs_1.PACKS_SCHEMA, value));\r\n    const keys = [\r\n        // pack_set\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(packSetKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        // pack_config\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(packConfig),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        // pack_card\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(packCard),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        // signer authority\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(authority),\r\n            isSigner: true,\r\n            isWritable: false,\r\n        },\r\n        // master_edition\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(masterEdition),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        // master_metadata\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(masterMetadataKey),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        // mint\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(mint),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        // source\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(sourceKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        // token_account\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(toAccount.publicKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        // program_authority\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(programAuthority),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        // store\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(store),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        // rent\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(web3_js_1.SYSVAR_RENT_PUBKEY),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        // system_program\r\n        {\r\n            pubkey: web3_js_1.SystemProgram.programId,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        // spl_token program\r\n        {\r\n            pubkey: (0, utils_1.programIds)().token,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n    ];\r\n    return new web3_js_1.TransactionInstruction({\r\n        keys,\r\n        programId: (0, utils_1.toPublicKey)(PROGRAM_IDS.pack_create),\r\n        data,\r\n    });\r\n}\r\nexports.addCardToPack = addCardToPack;\r\n//# sourceMappingURL=addCardToPack.js.map"]},"metadata":{},"sourceType":"script"}