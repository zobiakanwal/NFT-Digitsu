{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _inherits from \"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { EventEmitter, WalletAdapterNetwork, WalletConnectionError, WalletDisconnectedError, WalletDisconnectionError, WalletError, WalletNotConnectedError, WalletSignatureError, WalletWindowBlockedError, WalletWindowClosedError } from '@solana/wallet-adapter-base';\nexport var SolletWalletAdapter = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(SolletWalletAdapter, _EventEmitter);\n\n  var _super = _createSuper(SolletWalletAdapter);\n\n  function SolletWalletAdapter(config) {\n    var _this;\n\n    _classCallCheck(this, SolletWalletAdapter);\n\n    _this = _super.call(this);\n\n    _this._disconnected = function () {\n      var wallet = _this._wallet;\n\n      if (wallet) {\n        wallet.off('disconnect', _this._disconnected);\n        _this._wallet = null;\n\n        _this.emit('error', new WalletDisconnectedError());\n\n        _this.emit('disconnect');\n      }\n    };\n\n    _this._provider = (config === null || config === void 0 ? void 0 : config.provider) || 'https://www.sollet.io';\n    _this._network = (config === null || config === void 0 ? void 0 : config.network) || WalletAdapterNetwork.Mainnet;\n    _this._connecting = false;\n    _this._wallet = null;\n    return _this;\n  }\n\n  _createClass(SolletWalletAdapter, [{\n    key: \"publicKey\",\n    get: function get() {\n      var _a;\n\n      return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.publicKey) || null;\n    }\n  }, {\n    key: \"ready\",\n    get: function get() {\n      // @FIXME\n      return true;\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this._connecting;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      var _a;\n\n      return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.connected);\n    }\n  }, {\n    key: \"autoApprove\",\n    get: function get() {\n      var _a;\n\n      return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.autoApprove);\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var wallet, interval;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(this.connected || this.connecting)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this._connecting = true;\n                _context.prev = 4;\n                wallet = new Wallet(this._provider, this._network); // HACK: sol-wallet-adapter doesn't reject or emit an event if the popup is closed or blocked\n\n                _context.next = 8;\n                return new Promise(function (resolve, reject) {\n                  wallet.connect().then(resolve, reject);\n\n                  if (typeof _this2._provider === 'string') {\n                    var count = 0;\n                    interval = setInterval(function () {\n                      var popup = wallet._popup;\n\n                      if (popup) {\n                        if (popup.closed) reject(new WalletWindowClosedError());\n                      } else {\n                        if (count > 50) reject(new WalletWindowBlockedError());\n                      }\n\n                      count++;\n                    }, 100);\n                  }\n                });\n\n              case 8:\n                _context.next = 15;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](4);\n\n                if (!(_context.t0 instanceof WalletError)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                throw _context.t0;\n\n              case 14:\n                throw new WalletConnectionError(_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.message, _context.t0);\n\n              case 15:\n                _context.prev = 15;\n                if (interval) clearInterval(interval);\n                return _context.finish(15);\n\n              case 18:\n                wallet.on('disconnect', this._disconnected);\n                this._wallet = wallet;\n                this.emit('connect');\n                _context.next = 27;\n                break;\n\n              case 23:\n                _context.prev = 23;\n                _context.t1 = _context[\"catch\"](0);\n                this.emit('error', _context.t1);\n                throw _context.t1;\n\n              case 27:\n                _context.prev = 27;\n                this._connecting = false;\n                return _context.finish(27);\n\n              case 30:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 23, 27, 30], [4, 10, 15, 18]]);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var wallet;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                wallet = this._wallet;\n\n                if (!wallet) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                wallet.off('disconnect', this._disconnected);\n                this._wallet = null;\n                _context2.prev = 4;\n                _context2.next = 7;\n                return wallet.disconnect();\n\n              case 7:\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](4);\n                this.emit('error', new WalletDisconnectionError(_context2.t0.message, _context2.t0));\n\n              case 12:\n                this.emit('disconnect');\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[4, 9]]);\n      }));\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var wallet;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                wallet = this._wallet;\n\n                if (wallet) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                throw new WalletNotConnectedError();\n\n              case 4:\n                _context3.prev = 4;\n                return _context3.abrupt(\"return\", wallet.signTransaction(transaction));\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](4);\n                throw new WalletSignatureError(_context3.t0 === null || _context3.t0 === void 0 ? void 0 : _context3.t0.message, _context3.t0);\n\n              case 11:\n                _context3.next = 17;\n                break;\n\n              case 13:\n                _context3.prev = 13;\n                _context3.t1 = _context3[\"catch\"](0);\n                this.emit('error', _context3.t1);\n                throw _context3.t1;\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 13], [4, 8]]);\n      }));\n    }\n  }, {\n    key: \"signAllTransactions\",\n    value: function signAllTransactions(transactions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var wallet;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                wallet = this._wallet;\n\n                if (wallet) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                throw new WalletNotConnectedError();\n\n              case 4:\n                _context4.prev = 4;\n                return _context4.abrupt(\"return\", wallet.signAllTransactions(transactions));\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](4);\n                throw new WalletSignatureError(_context4.t0 === null || _context4.t0 === void 0 ? void 0 : _context4.t0.message, _context4.t0);\n\n              case 11:\n                _context4.next = 17;\n                break;\n\n              case 13:\n                _context4.prev = 13;\n                _context4.t1 = _context4[\"catch\"](0);\n                this.emit('error', _context4.t1);\n                throw _context4.t1;\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 13], [4, 8]]);\n      }));\n    }\n  }]);\n\n  return SolletWalletAdapter;\n}(EventEmitter);","map":{"version":3,"sources":["../src/adapter.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Wallet from '@project-serum/sol-wallet-adapter';\nimport { EventEmitter, WalletAdapterNetwork, WalletConnectionError, WalletDisconnectedError, WalletDisconnectionError, WalletError, WalletNotConnectedError, WalletSignatureError, WalletWindowBlockedError, WalletWindowClosedError, } from '@solana/wallet-adapter-base';\nexport class SolletWalletAdapter extends EventEmitter {\n    constructor(config) {\n        super();\n        this._disconnected = () => {\n            const wallet = this._wallet;\n            if (wallet) {\n                wallet.off('disconnect', this._disconnected);\n                this._wallet = null;\n                this.emit('error', new WalletDisconnectedError());\n                this.emit('disconnect');\n            }\n        };\n        this._provider = (config === null || config === void 0 ? void 0 : config.provider) || 'https://www.sollet.io';\n        this._network = (config === null || config === void 0 ? void 0 : config.network) || WalletAdapterNetwork.Mainnet;\n        this._connecting = false;\n        this._wallet = null;\n    }\n    get publicKey() {\n        var _a;\n        return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.publicKey) || null;\n    }\n    get ready() {\n        // @FIXME\n        return true;\n    }\n    get connecting() {\n        return this._connecting;\n    }\n    get connected() {\n        var _a;\n        return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.connected);\n    }\n    get autoApprove() {\n        var _a;\n        return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.autoApprove);\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.connected || this.connecting)\n                    return;\n                this._connecting = true;\n                let wallet;\n                let interval;\n                try {\n                    wallet = new Wallet(this._provider, this._network);\n                    // HACK: sol-wallet-adapter doesn't reject or emit an event if the popup is closed or blocked\n                    yield new Promise((resolve, reject) => {\n                        wallet.connect().then(resolve, reject);\n                        if (typeof this._provider === 'string') {\n                            let count = 0;\n                            interval = setInterval(() => {\n                                const popup = wallet._popup;\n                                if (popup) {\n                                    if (popup.closed)\n                                        reject(new WalletWindowClosedError());\n                                }\n                                else {\n                                    if (count > 50)\n                                        reject(new WalletWindowBlockedError());\n                                }\n                                count++;\n                            }, 100);\n                        }\n                    });\n                }\n                catch (error) {\n                    if (error instanceof WalletError)\n                        throw error;\n                    throw new WalletConnectionError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n                finally {\n                    if (interval)\n                        clearInterval(interval);\n                }\n                wallet.on('disconnect', this._disconnected);\n                this._wallet = wallet;\n                this.emit('connect');\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n            finally {\n                this._connecting = false;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallet = this._wallet;\n            if (wallet) {\n                wallet.off('disconnect', this._disconnected);\n                this._wallet = null;\n                try {\n                    yield wallet.disconnect();\n                }\n                catch (error) {\n                    this.emit('error', new WalletDisconnectionError(error.message, error));\n                }\n                this.emit('disconnect');\n            }\n        });\n    }\n    signTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                if (!wallet)\n                    throw new WalletNotConnectedError();\n                try {\n                    return wallet.signTransaction(transaction);\n                }\n                catch (error) {\n                    throw new WalletSignatureError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n    signAllTransactions(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const wallet = this._wallet;\n                if (!wallet)\n                    throw new WalletNotConnectedError();\n                try {\n                    return wallet.signAllTransactions(transactions);\n                }\n                catch (error) {\n                    throw new WalletSignatureError(error === null || error === void 0 ? void 0 : error.message, error);\n                }\n            }\n            catch (error) {\n                this.emit('error', error);\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=adapter.js.map"]},"metadata":{},"sourceType":"module"}