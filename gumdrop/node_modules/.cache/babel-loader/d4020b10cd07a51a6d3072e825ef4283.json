{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initPackSet = void 0;\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar borsh_1 = require(\"borsh\");\n\nvar metaplex_1 = require(\"../../metaplex\");\n\nvar utils_1 = require(\"../../../utils\");\n\nvar __1 = require(\"../../..\");\n\nfunction initPackSet(_x) {\n  return _initPackSet.apply(this, arguments);\n}\n\nfunction _initPackSet() {\n  _initPackSet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var name, description, uri, mutable, distributionType, allowedAmountToRedeem, redeemStartDate, redeemEndDate, packSetKey, authority, PROGRAM_IDS, value, store, whitelistedCreator, data, keys;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            name = _ref.name, description = _ref.description, uri = _ref.uri, mutable = _ref.mutable, distributionType = _ref.distributionType, allowedAmountToRedeem = _ref.allowedAmountToRedeem, redeemStartDate = _ref.redeemStartDate, redeemEndDate = _ref.redeemEndDate, packSetKey = _ref.packSetKey, authority = _ref.authority;\n            PROGRAM_IDS = (0, utils_1.programIds)();\n            value = new __1.InitPackSetArgs({\n              name: name,\n              description: description,\n              uri: uri,\n              mutable: mutable,\n              distributionType: distributionType,\n              allowedAmountToRedeem: allowedAmountToRedeem,\n              redeemStartDate: redeemStartDate,\n              redeemEndDate: redeemEndDate\n            });\n            store = PROGRAM_IDS.store;\n\n            if (store) {\n              _context.next = 6;\n              break;\n            }\n\n            throw new Error('Store not initialized');\n\n          case 6:\n            _context.next = 8;\n            return (0, metaplex_1.getWhitelistedCreator)(authority);\n\n          case 8:\n            whitelistedCreator = _context.sent;\n            data = Buffer.from((0, borsh_1.serialize)(__1.PACKS_SCHEMA, value));\n            keys = [{\n              pubkey: (0, utils_1.toPublicKey)(packSetKey),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(authority),\n              isSigner: true,\n              isWritable: false\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(store),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: PROGRAM_IDS.oracle,\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(web3_js_1.SYSVAR_RENT_PUBKEY),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(web3_js_1.SYSVAR_CLOCK_PUBKEY),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(whitelistedCreator),\n              isSigner: false,\n              isWritable: false\n            }];\n            return _context.abrupt(\"return\", new web3_js_1.TransactionInstruction({\n              keys: keys,\n              programId: (0, utils_1.toPublicKey)(PROGRAM_IDS.pack_create),\n              data: data\n            }));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _initPackSet.apply(this, arguments);\n}\n\nexports.initPackSet = initPackSet;","map":{"version":3,"sources":["../../../../../src/models/packs/instructions/initPackSet.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,IAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAMA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,UAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAEA,IAAA,GAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;SAOsB,W;;;;;0EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,YAAA,IADK,QACL,IADK,EAEL,WAFK,QAEL,WAFK,EAGL,GAHK,QAGL,GAHK,EAIL,OAJK,QAIL,OAJK,EAKL,gBALK,QAKL,gBALK,EAML,qBANK,QAML,qBANK,EAOL,eAPK,QAOL,eAPK,EAQL,aARK,QAQL,aARK,EASL,UATK,QASL,UATK,EAUL,SAVK,QAUL,SAVK;AAYC,YAAA,WAZD,GAYe,CAAA,GAAA,OAAA,CAAA,UAAA,GAZf;AAcC,YAAA,KAdD,GAcS,IAAI,GAAA,CAAA,eAAJ,CAAoB;AAChC,cAAA,IAAI,EAAJ,IADgC;AAEhC,cAAA,WAAW,EAAX,WAFgC;AAGhC,cAAA,GAAG,EAAH,GAHgC;AAIhC,cAAA,OAAO,EAAP,OAJgC;AAKhC,cAAA,gBAAgB,EAAhB,gBALgC;AAMhC,cAAA,qBAAqB,EAArB,qBANgC;AAOhC,cAAA,eAAe,EAAf,eAPgC;AAQhC,cAAA,aAAa,EAAb;AARgC,aAApB,CAdT;AAyBC,YAAA,KAzBD,GAyBS,WAAW,CAAC,KAzBrB;;AAAA,gBA0BA,KA1BA;AAAA;AAAA;AAAA;;AAAA,kBA2BG,IAAI,KAAJ,CAAU,uBAAV,CA3BH;;AAAA;AAAA;AAAA,mBA8B4B,CAAA,GAAA,UAAA,CAAA,qBAAA,EAAsB,SAAtB,CA9B5B;;AAAA;AA8BC,YAAA,kBA9BD;AAgCC,YAAA,IAhCD,GAgCQ,MAAM,CAAC,IAAP,CAAY,CAAA,GAAA,OAAA,CAAA,SAAA,EAAU,GAAA,CAAA,YAAV,EAAwB,KAAxB,CAAZ,CAhCR;AAiCC,YAAA,IAjCD,GAiCQ,CACX;AACE,cAAA,MAAM,EAAE,CAAA,GAAA,OAAA,CAAA,WAAA,EAAY,UAAZ,CADV;AAEE,cAAA,QAAQ,EAAE,KAFZ;AAGE,cAAA,UAAU,EAAE;AAHd,aADW,EAMX;AACE,cAAA,MAAM,EAAE,CAAA,GAAA,OAAA,CAAA,WAAA,EAAY,SAAZ,CADV;AAEE,cAAA,QAAQ,EAAE,IAFZ;AAGE,cAAA,UAAU,EAAE;AAHd,aANW,EAWX;AACE,cAAA,MAAM,EAAE,CAAA,GAAA,OAAA,CAAA,WAAA,EAAY,KAAZ,CADV;AAEE,cAAA,QAAQ,EAAE,KAFZ;AAGE,cAAA,UAAU,EAAE;AAHd,aAXW,EAgBX;AACE,cAAA,MAAM,EAAE,WAAW,CAAC,MADtB;AAEE,cAAA,QAAQ,EAAE,KAFZ;AAGE,cAAA,UAAU,EAAE;AAHd,aAhBW,EAqBX;AACE,cAAA,MAAM,EAAE,CAAA,GAAA,OAAA,CAAA,WAAA,EAAY,SAAA,CAAA,kBAAZ,CADV;AAEE,cAAA,QAAQ,EAAE,KAFZ;AAGE,cAAA,UAAU,EAAE;AAHd,aArBW,EA0BX;AACE,cAAA,MAAM,EAAE,CAAA,GAAA,OAAA,CAAA,WAAA,EAAY,SAAA,CAAA,mBAAZ,CADV;AAEE,cAAA,QAAQ,EAAE,KAFZ;AAGE,cAAA,UAAU,EAAE;AAHd,aA1BW,EA+BX;AACE,cAAA,MAAM,EAAE,CAAA,GAAA,OAAA,CAAA,WAAA,EAAY,kBAAZ,CADV;AAEE,cAAA,QAAQ,EAAE,KAFZ;AAGE,cAAA,UAAU,EAAE;AAHd,aA/BW,CAjCR;AAAA,6CAuEE,IAAI,SAAA,CAAA,sBAAJ,CAA2B;AAChC,cAAA,IAAI,EAAJ,IADgC;AAEhC,cAAA,SAAS,EAAE,CAAA,GAAA,OAAA,CAAA,WAAA,EAAY,WAAW,CAAC,WAAxB,CAFqB;AAGhC,cAAA,IAAI,EAAJ;AAHgC,aAA3B,CAvEF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAAP,OAAA,CAAA,WAAA,GAAA,WAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPackSet = void 0;\r\nconst web3_js_1 = require(\"@solana/web3.js\");\r\nconst borsh_1 = require(\"borsh\");\r\nconst metaplex_1 = require(\"../../metaplex\");\r\nconst utils_1 = require(\"../../../utils\");\r\nconst __1 = require(\"../../..\");\r\nasync function initPackSet({ name, description, uri, mutable, distributionType, allowedAmountToRedeem, redeemStartDate, redeemEndDate, packSetKey, authority, }) {\r\n    const PROGRAM_IDS = (0, utils_1.programIds)();\r\n    const value = new __1.InitPackSetArgs({\r\n        name,\r\n        description,\r\n        uri,\r\n        mutable,\r\n        distributionType,\r\n        allowedAmountToRedeem,\r\n        redeemStartDate,\r\n        redeemEndDate,\r\n    });\r\n    const store = PROGRAM_IDS.store;\r\n    if (!store) {\r\n        throw new Error('Store not initialized');\r\n    }\r\n    const whitelistedCreator = await (0, metaplex_1.getWhitelistedCreator)(authority);\r\n    const data = Buffer.from((0, borsh_1.serialize)(__1.PACKS_SCHEMA, value));\r\n    const keys = [\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(packSetKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(authority),\r\n            isSigner: true,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(store),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: PROGRAM_IDS.oracle,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(web3_js_1.SYSVAR_RENT_PUBKEY),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(web3_js_1.SYSVAR_CLOCK_PUBKEY),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(whitelistedCreator),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n    ];\r\n    return new web3_js_1.TransactionInstruction({\r\n        keys,\r\n        programId: (0, utils_1.toPublicKey)(PROGRAM_IDS.pack_create),\r\n        data,\r\n    });\r\n}\r\nexports.initPackSet = initPackSet;\r\n//# sourceMappingURL=initPackSet.js.map"]},"metadata":{},"sourceType":"script"}