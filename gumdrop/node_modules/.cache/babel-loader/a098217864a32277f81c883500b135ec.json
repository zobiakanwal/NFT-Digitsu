{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\slicedToArray.js\").default;\n\nvar _objectSpread = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\objectSpread2.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useMeta = exports.MetaProvider = void 0;\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar wallet_adapter_react_1 = require(\"@solana/wallet-adapter-react\");\n\nvar queryExtendedMetadata_1 = require(\"./queryExtendedMetadata\");\n\nvar getEmptyMetaState_1 = require(\"./getEmptyMetaState\");\n\nvar loadAccounts_1 = require(\"./loadAccounts\");\n\nvar connection_1 = require(\"../connection\");\n\nvar store_1 = require(\"../store\");\n\nvar actions_1 = require(\"../../actions\");\n\nvar _1 = require(\".\");\n\nvar __1 = require(\"../..\");\n\nvar MetaContext = react_1.default.createContext(_objectSpread(_objectSpread({}, (0, getEmptyMetaState_1.getEmptyMetaState)()), {}, {\n  isLoading: false,\n  isFetching: false,\n  // @ts-ignore\n  update: function update() {\n    return [actions_1.AuctionData, actions_1.BidderMetadata, actions_1.BidderPot];\n  }\n}));\n\nfunction MetaProvider(_ref) {\n  var _ref$children = _ref.children,\n      children = _ref$children === void 0 ? null : _ref$children;\n  var connection = (0, connection_1.useConnection)();\n\n  var _ref2 = (0, store_1.useStore)(),\n      isReady = _ref2.isReady,\n      storeAddress = _ref2.storeAddress;\n\n  var wallet = (0, wallet_adapter_react_1.useWallet)();\n\n  var _ref3 = (0, react_1.useState)((0, getEmptyMetaState_1.getEmptyMetaState)()),\n      _ref4 = _slicedToArray(_ref3, 2),\n      state = _ref4[0],\n      setState = _ref4[1];\n\n  var _ref5 = (0, react_1.useState)(0),\n      _ref6 = _slicedToArray(_ref5, 2),\n      page = _ref6[0],\n      setPage = _ref6[1];\n\n  var _ref7 = (0, react_1.useState)(0),\n      _ref8 = _slicedToArray(_ref7, 2),\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _lastLength = _ref8[0],\n      setLastLength = _ref8[1];\n\n  var _ref9 = (0, __1.useUserAccounts)(),\n      userAccounts = _ref9.userAccounts;\n\n  var _ref10 = (0, react_1.useState)(false),\n      _ref11 = _slicedToArray(_ref10, 2),\n      isLoading = _ref11[0],\n      setIsLoading = _ref11[1];\n\n  var updateRequestsInQueue = (0, react_1.useRef)(0);\n\n  var _ref12 = (0, react_1.useState)(false),\n      _ref13 = _slicedToArray(_ref12, 2),\n      isLoadingMetadata = _ref13[0],\n      setIsLoadingMetadata = _ref13[1];\n\n  var loadedMetadataLength = (0, react_1.useRef)(0);\n  var updateMints = (0, react_1.useCallback)( /*#__PURE__*/function () {\n    var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(metadataByMint) {\n      var _yield, metadata, mintToMetadata;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return (0, queryExtendedMetadata_1.queryExtendedMetadata)(connection, metadataByMint);\n\n            case 3:\n              _yield = _context.sent;\n              metadata = _yield.metadata;\n              mintToMetadata = _yield.mintToMetadata;\n              setState(function (current) {\n                return _objectSpread(_objectSpread({}, current), {}, {\n                  metadata: metadata,\n                  metadataByMint: mintToMetadata\n                });\n              });\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref14.apply(this, arguments);\n    };\n  }(), [setState]);\n\n  function pullAllMetadata() {\n    return _pullAllMetadata.apply(this, arguments);\n  }\n\n  function _pullAllMetadata() {\n    _pullAllMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var nextState;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!isLoading) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", false);\n\n            case 2:\n              if (storeAddress) {\n                _context2.next = 7;\n                break;\n              }\n\n              if (isReady) {\n                setIsLoading(false);\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 7:\n              if (!state.store) {\n                setIsLoading(true);\n              }\n\n            case 8:\n              setIsLoading(true);\n              _context2.next = 11;\n              return (0, _1.pullStoreMetadata)(connection, state);\n\n            case 11:\n              nextState = _context2.sent;\n              setIsLoading(false);\n              setState(nextState);\n              _context2.next = 16;\n              return updateMints(nextState.metadataByMint);\n\n            case 16:\n              return _context2.abrupt(\"return\", []);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _pullAllMetadata.apply(this, arguments);\n  }\n\n  function pullBillingPage(_x2) {\n    return _pullBillingPage.apply(this, arguments);\n  }\n\n  function _pullBillingPage() {\n    _pullBillingPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(auctionAddress) {\n      var nextState;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!isLoading) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", false);\n\n            case 2:\n              if (storeAddress) {\n                _context3.next = 7;\n                break;\n              }\n\n              if (isReady) {\n                setIsLoading(false);\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 7:\n              if (!state.store) {\n                setIsLoading(true);\n              }\n\n            case 8:\n              _context3.next = 10;\n              return (0, _1.pullAuctionSubaccounts)(connection, auctionAddress, state);\n\n            case 10:\n              nextState = _context3.sent;\n              console.log('-----> Pulling all payout tickets');\n              _context3.next = 14;\n              return (0, _1.pullPayoutTickets)(connection, nextState);\n\n            case 14:\n              setState(nextState);\n              _context3.next = 17;\n              return updateMints(nextState.metadataByMint);\n\n            case 17:\n              return _context3.abrupt(\"return\", []);\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _pullBillingPage.apply(this, arguments);\n  }\n\n  function pullAuctionPage(_x3) {\n    return _pullAuctionPage.apply(this, arguments);\n  }\n\n  function _pullAuctionPage() {\n    _pullAuctionPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(auctionAddress) {\n      var nextState;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!isLoading) {\n                _context4.next = 2;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", state);\n\n            case 2:\n              if (storeAddress) {\n                _context4.next = 7;\n                break;\n              }\n\n              if (isReady) {\n                setIsLoading(false);\n              }\n\n              return _context4.abrupt(\"return\", state);\n\n            case 7:\n              if (!state.store) {\n                setIsLoading(true);\n              }\n\n            case 8:\n              _context4.next = 10;\n              return (0, _1.pullAuctionSubaccounts)(connection, auctionAddress, state);\n\n            case 10:\n              nextState = _context4.sent;\n              setState(nextState);\n              _context4.next = 14;\n              return updateMints(nextState.metadataByMint);\n\n            case 14:\n              return _context4.abrupt(\"return\", nextState);\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _pullAuctionPage.apply(this, arguments);\n  }\n\n  function pullItemsPage(_x4) {\n    return _pullItemsPage.apply(this, arguments);\n  }\n\n  function _pullItemsPage() {\n    _pullItemsPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(userTokenAccounts) {\n      var shouldEnableNftPacks, packsState;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!isFetching) {\n                _context5.next = 2;\n                break;\n              }\n\n              return _context5.abrupt(\"return\");\n\n            case 2:\n              shouldEnableNftPacks = process.env.NEXT_ENABLE_NFT_PACKS === 'true';\n\n              if (!shouldEnableNftPacks) {\n                _context5.next = 9;\n                break;\n              }\n\n              _context5.next = 6;\n              return (0, _1.pullPacks)(connection, state, wallet === null || wallet === void 0 ? void 0 : wallet.publicKey);\n\n            case 6:\n              _context5.t0 = _context5.sent;\n              _context5.next = 10;\n              break;\n\n            case 9:\n              _context5.t0 = state;\n\n            case 10:\n              packsState = _context5.t0;\n              _context5.next = 13;\n              return pullUserMetadata(userTokenAccounts, packsState);\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return _pullItemsPage.apply(this, arguments);\n  }\n\n  function pullPackPage(_x5, _x6) {\n    return _pullPackPage.apply(this, arguments);\n  }\n\n  function _pullPackPage() {\n    _pullPackPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(userTokenAccounts, packSetKey) {\n      var packState;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!isFetching) {\n                _context6.next = 2;\n                break;\n              }\n\n              return _context6.abrupt(\"return\");\n\n            case 2:\n              _context6.next = 4;\n              return (0, _1.pullPack)({\n                connection: connection,\n                state: state,\n                packSetKey: packSetKey,\n                walletKey: wallet === null || wallet === void 0 ? void 0 : wallet.publicKey\n              });\n\n            case 4:\n              packState = _context6.sent;\n              _context6.next = 7;\n              return pullUserMetadata(userTokenAccounts, packState);\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    return _pullPackPage.apply(this, arguments);\n  }\n\n  function pullUserMetadata(_x7, _x8) {\n    return _pullUserMetadata.apply(this, arguments);\n  }\n\n  function _pullUserMetadata() {\n    _pullUserMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(userTokenAccounts, tempState) {\n      var nextState;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              setIsLoadingMetadata(true);\n              loadedMetadataLength.current = userTokenAccounts.length;\n              _context7.next = 4;\n              return (0, loadAccounts_1.pullYourMetadata)(connection, userTokenAccounts, tempState || state);\n\n            case 4:\n              nextState = _context7.sent;\n              _context7.next = 7;\n              return updateMints(nextState.metadataByMint);\n\n            case 7:\n              setState(nextState);\n              setIsLoadingMetadata(false);\n\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    return _pullUserMetadata.apply(this, arguments);\n  }\n\n  function pullAllSiteData() {\n    return _pullAllSiteData.apply(this, arguments);\n  }\n\n  function _pullAllSiteData() {\n    _pullAllSiteData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var nextState;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!isLoading) {\n                _context8.next = 2;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", state);\n\n            case 2:\n              if (storeAddress) {\n                _context8.next = 7;\n                break;\n              }\n\n              if (isReady) {\n                setIsLoading(false);\n              }\n\n              return _context8.abrupt(\"return\", state);\n\n            case 7:\n              if (!state.store) {\n                setIsLoading(true);\n              }\n\n            case 8:\n              console.log('------->Query started');\n              _context8.next = 11;\n              return (0, loadAccounts_1.loadAccounts)(connection);\n\n            case 11:\n              nextState = _context8.sent;\n              console.log('------->Query finished');\n              setState(nextState);\n              _context8.next = 16;\n              return updateMints(nextState.metadataByMint);\n\n            case 16:\n              return _context8.abrupt(\"return\");\n\n            case 17:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n    return _pullAllSiteData.apply(this, arguments);\n  }\n\n  function update(_x9, _x10) {\n    return _update.apply(this, arguments);\n  }\n\n  function _update() {\n    _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(auctionAddress, bidderAddress) {\n      var shouldFetchNftPacks, nextState, auction, billing, currLastLength, auctionBidderKey;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (storeAddress) {\n                _context9.next = 5;\n                break;\n              }\n\n              if (isReady) {\n                //@ts-ignore\n                window.loadingData = false;\n                setIsLoading(false);\n              }\n\n              return _context9.abrupt(\"return\");\n\n            case 5:\n              if (!state.store) {\n                //@ts-ignore\n                window.loadingData = true;\n                setIsLoading(true);\n              }\n\n            case 6:\n              shouldFetchNftPacks = process.env.NEXT_ENABLE_NFT_PACKS === 'true';\n              _context9.next = 9;\n              return (0, _1.pullPage)(connection, page, state, wallet === null || wallet === void 0 ? void 0 : wallet.publicKey, shouldFetchNftPacks);\n\n            case 9:\n              nextState = _context9.sent;\n              console.log('-----> Query started');\n\n              if (!nextState.storeIndexer.length) {\n                _context9.next = 42;\n                break;\n              }\n\n              if (!loadAccounts_1.USE_SPEED_RUN) {\n                _context9.next = 22;\n                break;\n              }\n\n              _context9.next = 15;\n              return (0, loadAccounts_1.limitedLoadAccounts)(connection);\n\n            case 15:\n              nextState = _context9.sent;\n              console.log('------->Query finished');\n              setState(nextState); //@ts-ignore\n\n              window.loadingData = false;\n              setIsLoading(false);\n              _context9.next = 40;\n              break;\n\n            case 22:\n              console.log('------->Pagination detected, pulling page', page);\n              auction = window.location.href.match(/#\\/auction\\/(\\w+)/);\n              billing = window.location.href.match(/#\\/auction\\/(\\w+)\\/billing/);\n\n              if (!(auction && page == 0)) {\n                _context9.next = 34;\n                break;\n              }\n\n              console.log('---------->Loading auction page on initial load, pulling sub accounts');\n              _context9.next = 29;\n              return (0, _1.pullAuctionSubaccounts)(connection, auction[1], nextState);\n\n            case 29:\n              nextState = _context9.sent;\n\n              if (!billing) {\n                _context9.next = 34;\n                break;\n              }\n\n              console.log('-----> Pulling all payout tickets');\n              _context9.next = 34;\n              return (0, _1.pullPayoutTickets)(connection, nextState);\n\n            case 34:\n              setLastLength(function (last) {\n                currLastLength = last;\n                return last;\n              });\n\n              if (nextState.storeIndexer.length != currLastLength) {\n                setPage(function (page) {\n                  return page + 1;\n                });\n              }\n\n              setLastLength(nextState.storeIndexer.length); //@ts-ignore\n\n              window.loadingData = false;\n              setIsLoading(false);\n              setState(nextState);\n\n            case 40:\n              _context9.next = 57;\n              break;\n\n            case 42:\n              console.log('------->No pagination detected');\n\n              if (loadAccounts_1.USE_SPEED_RUN) {\n                _context9.next = 49;\n                break;\n              }\n\n              _context9.next = 46;\n              return (0, loadAccounts_1.loadAccounts)(connection);\n\n            case 46:\n              _context9.t0 = _context9.sent;\n              _context9.next = 52;\n              break;\n\n            case 49:\n              _context9.next = 51;\n              return (0, loadAccounts_1.limitedLoadAccounts)(connection);\n\n            case 51:\n              _context9.t0 = _context9.sent;\n\n            case 52:\n              nextState = _context9.t0;\n              console.log('------->Query finished');\n              setState(nextState); //@ts-ignore\n\n              window.loadingData = false;\n              setIsLoading(false);\n\n            case 57:\n              console.log('------->set finished');\n\n              if (!(auctionAddress && bidderAddress)) {\n                _context9.next = 65;\n                break;\n              }\n\n              _context9.next = 61;\n              return (0, _1.pullAuctionSubaccounts)(connection, auctionAddress, nextState);\n\n            case 61:\n              nextState = _context9.sent;\n              setState(nextState);\n              auctionBidderKey = auctionAddress + '-' + bidderAddress;\n              return _context9.abrupt(\"return\", [nextState.auctions[auctionAddress], nextState.bidderPotsByAuctionAndBidder[auctionBidderKey], nextState.bidderMetadataByAuctionAndBidder[auctionBidderKey]]);\n\n            case 65:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n    return _update.apply(this, arguments);\n  }\n\n  (0, react_1.useEffect)(function () {\n    //@ts-ignore\n    if (window.loadingData) {\n      console.log('currently another update is running, so queue for 3s...');\n      updateRequestsInQueue.current += 1;\n      var interval = setInterval(function () {\n        //@ts-ignore\n        if (window.loadingData) {\n          console.log('not running queued update right now, still loading');\n        } else {\n          console.log('running queued update');\n          update(undefined, undefined);\n          updateRequestsInQueue.current -= 1;\n          clearInterval(interval);\n        }\n      }, 3000);\n    } else {\n      console.log('no update is running, updating.');\n      update(undefined, undefined);\n      updateRequestsInQueue.current = 0;\n    }\n  }, [connection, setState, updateMints, storeAddress, isReady, page]); // Fetch metadata on userAccounts change\n\n  (0, react_1.useEffect)(function () {\n    var shouldFetch = !isLoading && !isLoadingMetadata && loadedMetadataLength.current !== userAccounts.length;\n\n    if (shouldFetch) {\n      pullUserMetadata(userAccounts);\n    }\n  }, [isLoading, isLoadingMetadata, loadedMetadataLength.current, userAccounts.length]);\n  var isFetching = isLoading || updateRequestsInQueue.current > 0;\n  return react_1.default.createElement(MetaContext.Provider, {\n    value: _objectSpread(_objectSpread({}, state), {}, {\n      // @ts-ignore\n      update: update,\n      pullAuctionPage: pullAuctionPage,\n      pullAllMetadata: pullAllMetadata,\n      pullBillingPage: pullBillingPage,\n      // @ts-ignore\n      pullAllSiteData: pullAllSiteData,\n      pullItemsPage: pullItemsPage,\n      pullPackPage: pullPackPage,\n      pullUserMetadata: pullUserMetadata,\n      isLoading: isLoading,\n      isFetching: isFetching\n    })\n  }, children);\n}\n\nexports.MetaProvider = MetaProvider;\n\nvar useMeta = function useMeta() {\n  var context = (0, react_1.useContext)(MetaContext);\n  return context;\n};\n\nexports.useMeta = useMeta;","map":{"version":3,"sources":["../../../../src/contexts/meta/meta.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.useMeta = exports.MetaProvider = void 0;\r\nconst react_1 = __importStar(require(\"react\"));\r\nconst wallet_adapter_react_1 = require(\"@solana/wallet-adapter-react\");\r\nconst queryExtendedMetadata_1 = require(\"./queryExtendedMetadata\");\r\nconst getEmptyMetaState_1 = require(\"./getEmptyMetaState\");\r\nconst loadAccounts_1 = require(\"./loadAccounts\");\r\nconst connection_1 = require(\"../connection\");\r\nconst store_1 = require(\"../store\");\r\nconst actions_1 = require(\"../../actions\");\r\nconst _1 = require(\".\");\r\nconst __1 = require(\"../..\");\r\nconst MetaContext = react_1.default.createContext({\r\n    ...(0, getEmptyMetaState_1.getEmptyMetaState)(),\r\n    isLoading: false,\r\n    isFetching: false,\r\n    // @ts-ignore\r\n    update: () => [actions_1.AuctionData, actions_1.BidderMetadata, actions_1.BidderPot],\r\n});\r\nfunction MetaProvider({ children = null, }) {\r\n    const connection = (0, connection_1.useConnection)();\r\n    const { isReady, storeAddress } = (0, store_1.useStore)();\r\n    const wallet = (0, wallet_adapter_react_1.useWallet)();\r\n    const [state, setState] = (0, react_1.useState)((0, getEmptyMetaState_1.getEmptyMetaState)());\r\n    const [page, setPage] = (0, react_1.useState)(0);\r\n    const [\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    _lastLength, setLastLength,] = (0, react_1.useState)(0);\r\n    const { userAccounts } = (0, __1.useUserAccounts)();\r\n    const [isLoading, setIsLoading] = (0, react_1.useState)(false);\r\n    const updateRequestsInQueue = (0, react_1.useRef)(0);\r\n    const [isLoadingMetadata, setIsLoadingMetadata] = (0, react_1.useState)(false);\r\n    const loadedMetadataLength = (0, react_1.useRef)(0);\r\n    const updateMints = (0, react_1.useCallback)(async (metadataByMint) => {\r\n        try {\r\n            const { metadata, mintToMetadata } = await (0, queryExtendedMetadata_1.queryExtendedMetadata)(connection, metadataByMint);\r\n            setState(current => ({\r\n                ...current,\r\n                metadata,\r\n                metadataByMint: mintToMetadata,\r\n            }));\r\n        }\r\n        catch (er) {\r\n            console.error(er);\r\n        }\r\n    }, [setState]);\r\n    async function pullAllMetadata() {\r\n        if (isLoading)\r\n            return false;\r\n        if (!storeAddress) {\r\n            if (isReady) {\r\n                setIsLoading(false);\r\n            }\r\n            return;\r\n        }\r\n        else if (!state.store) {\r\n            setIsLoading(true);\r\n        }\r\n        setIsLoading(true);\r\n        const nextState = await (0, _1.pullStoreMetadata)(connection, state);\r\n        setIsLoading(false);\r\n        setState(nextState);\r\n        await updateMints(nextState.metadataByMint);\r\n        return [];\r\n    }\r\n    async function pullBillingPage(auctionAddress) {\r\n        if (isLoading)\r\n            return false;\r\n        if (!storeAddress) {\r\n            if (isReady) {\r\n                setIsLoading(false);\r\n            }\r\n            return;\r\n        }\r\n        else if (!state.store) {\r\n            setIsLoading(true);\r\n        }\r\n        const nextState = await (0, _1.pullAuctionSubaccounts)(connection, auctionAddress, state);\r\n        console.log('-----> Pulling all payout tickets');\r\n        await (0, _1.pullPayoutTickets)(connection, nextState);\r\n        setState(nextState);\r\n        await updateMints(nextState.metadataByMint);\r\n        return [];\r\n    }\r\n    async function pullAuctionPage(auctionAddress) {\r\n        if (isLoading)\r\n            return state;\r\n        if (!storeAddress) {\r\n            if (isReady) {\r\n                setIsLoading(false);\r\n            }\r\n            return state;\r\n        }\r\n        else if (!state.store) {\r\n            setIsLoading(true);\r\n        }\r\n        const nextState = await (0, _1.pullAuctionSubaccounts)(connection, auctionAddress, state);\r\n        setState(nextState);\r\n        await updateMints(nextState.metadataByMint);\r\n        return nextState;\r\n    }\r\n    async function pullItemsPage(userTokenAccounts) {\r\n        if (isFetching) {\r\n            return;\r\n        }\r\n        const shouldEnableNftPacks = process.env.NEXT_ENABLE_NFT_PACKS === 'true';\r\n        const packsState = shouldEnableNftPacks\r\n            ? await (0, _1.pullPacks)(connection, state, wallet === null || wallet === void 0 ? void 0 : wallet.publicKey)\r\n            : state;\r\n        await pullUserMetadata(userTokenAccounts, packsState);\r\n    }\r\n    async function pullPackPage(userTokenAccounts, packSetKey) {\r\n        if (isFetching) {\r\n            return;\r\n        }\r\n        const packState = await (0, _1.pullPack)({\r\n            connection,\r\n            state,\r\n            packSetKey,\r\n            walletKey: wallet === null || wallet === void 0 ? void 0 : wallet.publicKey,\r\n        });\r\n        await pullUserMetadata(userTokenAccounts, packState);\r\n    }\r\n    async function pullUserMetadata(userTokenAccounts, tempState) {\r\n        setIsLoadingMetadata(true);\r\n        loadedMetadataLength.current = userTokenAccounts.length;\r\n        const nextState = await (0, loadAccounts_1.pullYourMetadata)(connection, userTokenAccounts, tempState || state);\r\n        await updateMints(nextState.metadataByMint);\r\n        setState(nextState);\r\n        setIsLoadingMetadata(false);\r\n    }\r\n    async function pullAllSiteData() {\r\n        if (isLoading)\r\n            return state;\r\n        if (!storeAddress) {\r\n            if (isReady) {\r\n                setIsLoading(false);\r\n            }\r\n            return state;\r\n        }\r\n        else if (!state.store) {\r\n            setIsLoading(true);\r\n        }\r\n        console.log('------->Query started');\r\n        const nextState = await (0, loadAccounts_1.loadAccounts)(connection);\r\n        console.log('------->Query finished');\r\n        setState(nextState);\r\n        await updateMints(nextState.metadataByMint);\r\n        return;\r\n    }\r\n    async function update(auctionAddress, bidderAddress) {\r\n        if (!storeAddress) {\r\n            if (isReady) {\r\n                //@ts-ignore\r\n                window.loadingData = false;\r\n                setIsLoading(false);\r\n            }\r\n            return;\r\n        }\r\n        else if (!state.store) {\r\n            //@ts-ignore\r\n            window.loadingData = true;\r\n            setIsLoading(true);\r\n        }\r\n        const shouldFetchNftPacks = process.env.NEXT_ENABLE_NFT_PACKS === 'true';\r\n        let nextState = await (0, _1.pullPage)(connection, page, state, wallet === null || wallet === void 0 ? void 0 : wallet.publicKey, shouldFetchNftPacks);\r\n        console.log('-----> Query started');\r\n        if (nextState.storeIndexer.length) {\r\n            if (loadAccounts_1.USE_SPEED_RUN) {\r\n                nextState = await (0, loadAccounts_1.limitedLoadAccounts)(connection);\r\n                console.log('------->Query finished');\r\n                setState(nextState);\r\n                //@ts-ignore\r\n                window.loadingData = false;\r\n                setIsLoading(false);\r\n            }\r\n            else {\r\n                console.log('------->Pagination detected, pulling page', page);\r\n                const auction = window.location.href.match(/#\\/auction\\/(\\w+)/);\r\n                const billing = window.location.href.match(/#\\/auction\\/(\\w+)\\/billing/);\r\n                if (auction && page == 0) {\r\n                    console.log('---------->Loading auction page on initial load, pulling sub accounts');\r\n                    nextState = await (0, _1.pullAuctionSubaccounts)(connection, auction[1], nextState);\r\n                    if (billing) {\r\n                        console.log('-----> Pulling all payout tickets');\r\n                        await (0, _1.pullPayoutTickets)(connection, nextState);\r\n                    }\r\n                }\r\n                let currLastLength;\r\n                setLastLength(last => {\r\n                    currLastLength = last;\r\n                    return last;\r\n                });\r\n                if (nextState.storeIndexer.length != currLastLength) {\r\n                    setPage(page => page + 1);\r\n                }\r\n                setLastLength(nextState.storeIndexer.length);\r\n                //@ts-ignore\r\n                window.loadingData = false;\r\n                setIsLoading(false);\r\n                setState(nextState);\r\n            }\r\n        }\r\n        else {\r\n            console.log('------->No pagination detected');\r\n            nextState = !loadAccounts_1.USE_SPEED_RUN\r\n                ? await (0, loadAccounts_1.loadAccounts)(connection)\r\n                : await (0, loadAccounts_1.limitedLoadAccounts)(connection);\r\n            console.log('------->Query finished');\r\n            setState(nextState);\r\n            //@ts-ignore\r\n            window.loadingData = false;\r\n            setIsLoading(false);\r\n        }\r\n        console.log('------->set finished');\r\n        if (auctionAddress && bidderAddress) {\r\n            nextState = await (0, _1.pullAuctionSubaccounts)(connection, auctionAddress, nextState);\r\n            setState(nextState);\r\n            const auctionBidderKey = auctionAddress + '-' + bidderAddress;\r\n            return [\r\n                nextState.auctions[auctionAddress],\r\n                nextState.bidderPotsByAuctionAndBidder[auctionBidderKey],\r\n                nextState.bidderMetadataByAuctionAndBidder[auctionBidderKey],\r\n            ];\r\n        }\r\n    }\r\n    (0, react_1.useEffect)(() => {\r\n        //@ts-ignore\r\n        if (window.loadingData) {\r\n            console.log('currently another update is running, so queue for 3s...');\r\n            updateRequestsInQueue.current += 1;\r\n            const interval = setInterval(() => {\r\n                //@ts-ignore\r\n                if (window.loadingData) {\r\n                    console.log('not running queued update right now, still loading');\r\n                }\r\n                else {\r\n                    console.log('running queued update');\r\n                    update(undefined, undefined);\r\n                    updateRequestsInQueue.current -= 1;\r\n                    clearInterval(interval);\r\n                }\r\n            }, 3000);\r\n        }\r\n        else {\r\n            console.log('no update is running, updating.');\r\n            update(undefined, undefined);\r\n            updateRequestsInQueue.current = 0;\r\n        }\r\n    }, [connection, setState, updateMints, storeAddress, isReady, page]);\r\n    // Fetch metadata on userAccounts change\r\n    (0, react_1.useEffect)(() => {\r\n        const shouldFetch = !isLoading &&\r\n            !isLoadingMetadata &&\r\n            loadedMetadataLength.current !== userAccounts.length;\r\n        if (shouldFetch) {\r\n            pullUserMetadata(userAccounts);\r\n        }\r\n    }, [\r\n        isLoading,\r\n        isLoadingMetadata,\r\n        loadedMetadataLength.current,\r\n        userAccounts.length,\r\n    ]);\r\n    const isFetching = isLoading || updateRequestsInQueue.current > 0;\r\n    return (react_1.default.createElement(MetaContext.Provider, { value: {\r\n            ...state,\r\n            // @ts-ignore\r\n            update,\r\n            pullAuctionPage,\r\n            pullAllMetadata,\r\n            pullBillingPage,\r\n            // @ts-ignore\r\n            pullAllSiteData,\r\n            pullItemsPage,\r\n            pullPackPage,\r\n            pullUserMetadata,\r\n            isLoading,\r\n            isFetching,\r\n        } }, children));\r\n}\r\nexports.MetaProvider = MetaProvider;\r\nconst useMeta = () => {\r\n    const context = (0, react_1.useContext)(MetaContext);\r\n    return context;\r\n};\r\nexports.useMeta = useMeta;\r\n//# sourceMappingURL=meta.js.map"]},"metadata":{},"sourceType":"script"}