{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { AddPermissionInput } from \"../models/models_0\";\nimport { deserializeAws_queryAddPermissionCommand, serializeAws_queryAddPermissionCommand } from \"../protocols/Aws_query\";\n\nvar AddPermissionCommand = function (_super) {\n  __extends(AddPermissionCommand, _super);\n\n  function AddPermissionCommand(input) {\n    var _this = _super.call(this) || this;\n\n    _this.input = input;\n    return _this;\n  }\n\n  AddPermissionCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"SNSClient\";\n    var commandName = \"AddPermissionCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: AddPermissionInput.filterSensitiveLog,\n      outputFilterSensitiveLog: function outputFilterSensitiveLog(output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  AddPermissionCommand.prototype.serialize = function (input, context) {\n    return serializeAws_queryAddPermissionCommand(input, context);\n  };\n\n  AddPermissionCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_queryAddPermissionCommand(output, context);\n  };\n\n  return AddPermissionCommand;\n}($Command);\n\nexport { AddPermissionCommand };","map":{"version":3,"sources":["C:/Users/AHSAN PC/Desktop/digitsu/gamp/js/node_modules/@aws-sdk/client-sns/dist-es/commands/AddPermissionCommand.js"],"names":["__extends","getSerdePlugin","Command","$Command","AddPermissionInput","deserializeAws_queryAddPermissionCommand","serializeAws_queryAddPermissionCommand","AddPermissionCommand","_super","input","_this","call","prototype","resolveMiddleware","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","logger","clientName","commandName","handlerExecutionContext","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","requestHandler","resolve","request","handle","context"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAASC,wCAAT,EAAmDC,sCAAnD,QAAkG,wBAAlG;;AACA,IAAIC,oBAAoB,GAAI,UAAUC,MAAV,EAAkB;AAC1CR,EAAAA,SAAS,CAACO,oBAAD,EAAuBC,MAAvB,CAAT;;AACA,WAASD,oBAAT,CAA8BE,KAA9B,EAAqC;AACjC,QAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACAD,IAAAA,KAAK,CAACD,KAAN,GAAcA,KAAd;AACA,WAAOC,KAAP;AACH;;AACDH,EAAAA,oBAAoB,CAACK,SAArB,CAA+BC,iBAA/B,GAAmD,UAAUC,WAAV,EAAuBC,aAAvB,EAAsCC,OAAtC,EAA+C;AAC9F,SAAKC,eAAL,CAAqBC,GAArB,CAAyBjB,cAAc,CAACc,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;AACA,QAAIC,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAZ;AACA,QAAIM,MAAM,GAAGR,aAAa,CAACQ,MAA3B;AACA,QAAIC,UAAU,GAAG,WAAjB;AACA,QAAIC,WAAW,GAAG,sBAAlB;AACA,QAAIC,uBAAuB,GAAG;AAC1BH,MAAAA,MAAM,EAAEA,MADkB;AAE1BC,MAAAA,UAAU,EAAEA,UAFc;AAG1BC,MAAAA,WAAW,EAAEA,WAHa;AAI1BE,MAAAA,uBAAuB,EAAEvB,kBAAkB,CAACwB,kBAJlB;AAK1BC,MAAAA,wBAAwB,EAAE,kCAAUC,MAAV,EAAkB;AAAE,eAAOA,MAAP;AAAgB;AALpC,KAA9B;AAOA,QAAIC,cAAc,GAAGhB,aAAa,CAACgB,cAAnC;AACA,WAAOV,KAAK,CAACW,OAAN,CAAc,UAAUC,OAAV,EAAmB;AACpC,aAAOF,cAAc,CAACG,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAuCjB,OAAO,IAAI,EAAlD,CAAP;AACH,KAFM,EAEJU,uBAFI,CAAP;AAGH,GAjBD;;AAkBAnB,EAAAA,oBAAoB,CAACK,SAArB,CAA+BO,SAA/B,GAA2C,UAAUV,KAAV,EAAiB0B,OAAjB,EAA0B;AACjE,WAAO7B,sCAAsC,CAACG,KAAD,EAAQ0B,OAAR,CAA7C;AACH,GAFD;;AAGA5B,EAAAA,oBAAoB,CAACK,SAArB,CAA+BQ,WAA/B,GAA6C,UAAUU,MAAV,EAAkBK,OAAlB,EAA2B;AACpE,WAAO9B,wCAAwC,CAACyB,MAAD,EAASK,OAAT,CAA/C;AACH,GAFD;;AAGA,SAAO5B,oBAAP;AACH,CAhC2B,CAgC1BJ,QAhC0B,CAA5B;;AAiCA,SAASI,oBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { AddPermissionInput } from \"../models/models_0\";\nimport { deserializeAws_queryAddPermissionCommand, serializeAws_queryAddPermissionCommand, } from \"../protocols/Aws_query\";\nvar AddPermissionCommand = (function (_super) {\n    __extends(AddPermissionCommand, _super);\n    function AddPermissionCommand(input) {\n        var _this = _super.call(this) || this;\n        _this.input = input;\n        return _this;\n    }\n    AddPermissionCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        var stack = clientStack.concat(this.middlewareStack);\n        var logger = configuration.logger;\n        var clientName = \"SNSClient\";\n        var commandName = \"AddPermissionCommand\";\n        var handlerExecutionContext = {\n            logger: logger,\n            clientName: clientName,\n            commandName: commandName,\n            inputFilterSensitiveLog: AddPermissionInput.filterSensitiveLog,\n            outputFilterSensitiveLog: function (output) { return output; },\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    AddPermissionCommand.prototype.serialize = function (input, context) {\n        return serializeAws_queryAddPermissionCommand(input, context);\n    };\n    AddPermissionCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_queryAddPermissionCommand(output, context);\n    };\n    return AddPermissionCommand;\n}($Command));\nexport { AddPermissionCommand };\n"]},"metadata":{},"sourceType":"module"}