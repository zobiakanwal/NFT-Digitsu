{"ast":null,"code":"import { __awaiter, __generator, __values } from \"tslib\";\nimport { HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { requestTimeout } from \"./request-timeout\";\n\nvar FetchHttpHandler = function () {\n  function FetchHttpHandler(options) {\n    var _this = this;\n\n    if (typeof options === \"function\") {\n      this.configProvider = function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4, options()];\n\n              case 1:\n                return [2, _a.sent() || {}];\n            }\n          });\n        });\n      };\n    } else {\n      this.config = options !== null && options !== void 0 ? options : {};\n    }\n  }\n\n  FetchHttpHandler.prototype.destroy = function () {};\n\n  FetchHttpHandler.prototype.handle = function (request, _a) {\n    var _b = _a === void 0 ? {} : _a,\n        abortSignal = _b.abortSignal;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _c, requestTimeoutInMs, abortError, path, queryString, port, method, url, body, requestOptions, fetchRequest, raceOfPromises;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            if (!(!this.config && this.configProvider)) return [3, 2];\n            _c = this;\n            return [4, this.configProvider()];\n\n          case 1:\n            _c.config = _d.sent();\n            _d.label = 2;\n\n          case 2:\n            requestTimeoutInMs = this.config.requestTimeout;\n\n            if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n              abortError = new Error(\"Request aborted\");\n              abortError.name = \"AbortError\";\n              return [2, Promise.reject(abortError)];\n            }\n\n            path = request.path;\n\n            if (request.query) {\n              queryString = buildQueryString(request.query);\n\n              if (queryString) {\n                path += \"?\" + queryString;\n              }\n            }\n\n            port = request.port, method = request.method;\n            url = request.protocol + \"//\" + request.hostname + (port ? \":\" + port : \"\") + path;\n            body = method === \"GET\" || method === \"HEAD\" ? undefined : request.body;\n            requestOptions = {\n              body: body,\n              headers: new Headers(request.headers),\n              method: method\n            };\n\n            if (typeof AbortController !== \"undefined\") {\n              requestOptions[\"signal\"] = abortSignal;\n            }\n\n            fetchRequest = new Request(url, requestOptions);\n            raceOfPromises = [fetch(fetchRequest).then(function (response) {\n              var e_1, _a;\n\n              var fetchHeaders = response.headers;\n              var transformedHeaders = {};\n\n              try {\n                for (var _b = __values(fetchHeaders.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                  var pair = _c.value;\n                  transformedHeaders[pair[0]] = pair[1];\n                }\n              } catch (e_1_1) {\n                e_1 = {\n                  error: e_1_1\n                };\n              } finally {\n                try {\n                  if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                } finally {\n                  if (e_1) throw e_1.error;\n                }\n              }\n\n              var hasReadableStream = response.body !== undefined;\n\n              if (!hasReadableStream) {\n                return response.blob().then(function (body) {\n                  return {\n                    response: new HttpResponse({\n                      headers: transformedHeaders,\n                      statusCode: response.status,\n                      body: body\n                    })\n                  };\n                });\n              }\n\n              return {\n                response: new HttpResponse({\n                  headers: transformedHeaders,\n                  statusCode: response.status,\n                  body: response.body\n                })\n              };\n            }), requestTimeout(requestTimeoutInMs)];\n\n            if (abortSignal) {\n              raceOfPromises.push(new Promise(function (resolve, reject) {\n                abortSignal.onabort = function () {\n                  var abortError = new Error(\"Request aborted\");\n                  abortError.name = \"AbortError\";\n                  reject(abortError);\n                };\n              }));\n            }\n\n            return [2, Promise.race(raceOfPromises)];\n        }\n      });\n    });\n  };\n\n  return FetchHttpHandler;\n}();\n\nexport { FetchHttpHandler };","map":{"version":3,"sources":["C:/Users/AHSAN PC/Desktop/digitsu/gamp/js/node_modules/@aws-sdk/fetch-http-handler/dist-es/fetch-http-handler.js"],"names":["__awaiter","__generator","__values","HttpResponse","buildQueryString","requestTimeout","FetchHttpHandler","options","_this","configProvider","_a","label","sent","config","prototype","destroy","handle","request","_b","abortSignal","_c","requestTimeoutInMs","abortError","path","queryString","port","method","url","body","requestOptions","fetchRequest","raceOfPromises","_d","aborted","Error","name","Promise","reject","query","protocol","hostname","undefined","headers","Headers","AbortController","Request","fetch","then","response","e_1","fetchHeaders","transformedHeaders","entries","next","done","pair","value","e_1_1","error","return","call","hasReadableStream","blob","statusCode","status","push","resolve","onabort","race"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AACA,IAAIC,gBAAgB,GAAI,YAAY;AAChC,WAASA,gBAAT,CAA0BC,OAA1B,EAAmC;AAC/B,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AAC/B,WAAKE,cAAL,GAAsB,YAAY;AAAE,eAAOT,SAAS,CAACQ,KAAD,EAAQ,KAAK,CAAb,EAAgB,KAAK,CAArB,EAAwB,YAAY;AAAE,iBAAOP,WAAW,CAAC,IAAD,EAAO,UAAUS,EAAV,EAAc;AAC7H,oBAAQA,EAAE,CAACC,KAAX;AACI,mBAAK,CAAL;AAAQ,uBAAO,CAAC,CAAD,EAAIJ,OAAO,EAAX,CAAP;;AACR,mBAAK,CAAL;AAAQ,uBAAO,CAAC,CAAD,EAAKG,EAAE,CAACE,IAAH,EAAD,IAAe,EAAnB,CAAP;AAFZ;AAIH,WAL2G,CAAlB;AAKrF,SAL+C,CAAhB;AAK3B,OALT;AAMH,KAPD,MAQK;AACD,WAAKC,MAAL,GAAcN,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyCA,OAAzC,GAAmD,EAAjE;AACH;AACJ;;AACDD,EAAAA,gBAAgB,CAACQ,SAAjB,CAA2BC,OAA3B,GAAqC,YAAY,CAChD,CADD;;AAEAT,EAAAA,gBAAgB,CAACQ,SAAjB,CAA2BE,MAA3B,GAAoC,UAAUC,OAAV,EAAmBP,EAAnB,EAAuB;AACvD,QAAIQ,EAAE,GAAGR,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA9B;AAAA,QAAkCS,WAAW,GAAGD,EAAE,CAACC,WAAnD;;AACA,WAAOnB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;AAC/C,UAAIoB,EAAJ,EAAQC,kBAAR,EAA4BC,UAA5B,EAAwCC,IAAxC,EAA8CC,WAA9C,EAA2DC,IAA3D,EAAiEC,MAAjE,EAAyEC,GAAzE,EAA8EC,IAA9E,EAAoFC,cAApF,EAAoGC,YAApG,EAAkHC,cAAlH;;AACA,aAAO9B,WAAW,CAAC,IAAD,EAAO,UAAU+B,EAAV,EAAc;AACnC,gBAAQA,EAAE,CAACrB,KAAX;AACI,eAAK,CAAL;AACI,gBAAI,EAAE,CAAC,KAAKE,MAAN,IAAgB,KAAKJ,cAAvB,CAAJ,EAA4C,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AAC5CW,YAAAA,EAAE,GAAG,IAAL;AACA,mBAAO,CAAC,CAAD,EAAI,KAAKX,cAAL,EAAJ,CAAP;;AACJ,eAAK,CAAL;AACIW,YAAAA,EAAE,CAACP,MAAH,GAAYmB,EAAE,CAACpB,IAAH,EAAZ;AACAoB,YAAAA,EAAE,CAACrB,KAAH,GAAW,CAAX;;AACJ,eAAK,CAAL;AACIU,YAAAA,kBAAkB,GAAG,KAAKR,MAAL,CAAYR,cAAjC;;AACA,gBAAIc,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACc,OAA1E,EAAmF;AAC/EX,cAAAA,UAAU,GAAG,IAAIY,KAAJ,CAAU,iBAAV,CAAb;AACAZ,cAAAA,UAAU,CAACa,IAAX,GAAkB,YAAlB;AACA,qBAAO,CAAC,CAAD,EAAIC,OAAO,CAACC,MAAR,CAAef,UAAf,CAAJ,CAAP;AACH;;AACDC,YAAAA,IAAI,GAAGN,OAAO,CAACM,IAAf;;AACA,gBAAIN,OAAO,CAACqB,KAAZ,EAAmB;AACfd,cAAAA,WAAW,GAAGpB,gBAAgB,CAACa,OAAO,CAACqB,KAAT,CAA9B;;AACA,kBAAId,WAAJ,EAAiB;AACbD,gBAAAA,IAAI,IAAI,MAAMC,WAAd;AACH;AACJ;;AACDC,YAAAA,IAAI,GAAGR,OAAO,CAACQ,IAAf,EAAqBC,MAAM,GAAGT,OAAO,CAACS,MAAtC;AACAC,YAAAA,GAAG,GAAGV,OAAO,CAACsB,QAAR,GAAmB,IAAnB,GAA0BtB,OAAO,CAACuB,QAAlC,IAA8Cf,IAAI,GAAG,MAAMA,IAAT,GAAgB,EAAlE,IAAwEF,IAA9E;AACAK,YAAAA,IAAI,GAAGF,MAAM,KAAK,KAAX,IAAoBA,MAAM,KAAK,MAA/B,GAAwCe,SAAxC,GAAoDxB,OAAO,CAACW,IAAnE;AACAC,YAAAA,cAAc,GAAG;AACbD,cAAAA,IAAI,EAAEA,IADO;AAEbc,cAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY1B,OAAO,CAACyB,OAApB,CAFI;AAGbhB,cAAAA,MAAM,EAAEA;AAHK,aAAjB;;AAKA,gBAAI,OAAOkB,eAAP,KAA2B,WAA/B,EAA4C;AACxCf,cAAAA,cAAc,CAAC,QAAD,CAAd,GAA2BV,WAA3B;AACH;;AACDW,YAAAA,YAAY,GAAG,IAAIe,OAAJ,CAAYlB,GAAZ,EAAiBE,cAAjB,CAAf;AACAE,YAAAA,cAAc,GAAG,CACbe,KAAK,CAAChB,YAAD,CAAL,CAAoBiB,IAApB,CAAyB,UAAUC,QAAV,EAAoB;AACzC,kBAAIC,GAAJ,EAASvC,EAAT;;AACA,kBAAIwC,YAAY,GAAGF,QAAQ,CAACN,OAA5B;AACA,kBAAIS,kBAAkB,GAAG,EAAzB;;AACA,kBAAI;AACA,qBAAK,IAAIjC,EAAE,GAAGhB,QAAQ,CAACgD,YAAY,CAACE,OAAb,EAAD,CAAjB,EAA2ChC,EAAE,GAAGF,EAAE,CAACmC,IAAH,EAArD,EAAgE,CAACjC,EAAE,CAACkC,IAApE,EAA0ElC,EAAE,GAAGF,EAAE,CAACmC,IAAH,EAA/E,EAA0F;AACtF,sBAAIE,IAAI,GAAGnC,EAAE,CAACoC,KAAd;AACAL,kBAAAA,kBAAkB,CAACI,IAAI,CAAC,CAAD,CAAL,CAAlB,GAA8BA,IAAI,CAAC,CAAD,CAAlC;AACH;AACJ,eALD,CAMA,OAAOE,KAAP,EAAc;AAAER,gBAAAA,GAAG,GAAG;AAAES,kBAAAA,KAAK,EAAED;AAAT,iBAAN;AAAyB,eANzC,SAOQ;AACJ,oBAAI;AACA,sBAAIrC,EAAE,IAAI,CAACA,EAAE,CAACkC,IAAV,KAAmB5C,EAAE,GAAGQ,EAAE,CAACyC,MAA3B,CAAJ,EAAwCjD,EAAE,CAACkD,IAAH,CAAQ1C,EAAR;AAC3C,iBAFD,SAGQ;AAAE,sBAAI+B,GAAJ,EAAS,MAAMA,GAAG,CAACS,KAAV;AAAkB;AACxC;;AACD,kBAAIG,iBAAiB,GAAGb,QAAQ,CAACpB,IAAT,KAAkBa,SAA1C;;AACA,kBAAI,CAACoB,iBAAL,EAAwB;AACpB,uBAAOb,QAAQ,CAACc,IAAT,GAAgBf,IAAhB,CAAqB,UAAUnB,IAAV,EAAgB;AAAE,yBAAQ;AAClDoB,oBAAAA,QAAQ,EAAE,IAAI7C,YAAJ,CAAiB;AACvBuC,sBAAAA,OAAO,EAAES,kBADc;AAEvBY,sBAAAA,UAAU,EAAEf,QAAQ,CAACgB,MAFE;AAGvBpC,sBAAAA,IAAI,EAAEA;AAHiB,qBAAjB;AADwC,mBAAR;AAMzC,iBANE,CAAP;AAOH;;AACD,qBAAO;AACHoB,gBAAAA,QAAQ,EAAE,IAAI7C,YAAJ,CAAiB;AACvBuC,kBAAAA,OAAO,EAAES,kBADc;AAEvBY,kBAAAA,UAAU,EAAEf,QAAQ,CAACgB,MAFE;AAGvBpC,kBAAAA,IAAI,EAAEoB,QAAQ,CAACpB;AAHQ,iBAAjB;AADP,eAAP;AAOH,aAlCD,CADa,EAoCbvB,cAAc,CAACgB,kBAAD,CApCD,CAAjB;;AAsCA,gBAAIF,WAAJ,EAAiB;AACbY,cAAAA,cAAc,CAACkC,IAAf,CAAoB,IAAI7B,OAAJ,CAAY,UAAU8B,OAAV,EAAmB7B,MAAnB,EAA2B;AACvDlB,gBAAAA,WAAW,CAACgD,OAAZ,GAAsB,YAAY;AAC9B,sBAAI7C,UAAU,GAAG,IAAIY,KAAJ,CAAU,iBAAV,CAAjB;AACAZ,kBAAAA,UAAU,CAACa,IAAX,GAAkB,YAAlB;AACAE,kBAAAA,MAAM,CAACf,UAAD,CAAN;AACH,iBAJD;AAKH,eANmB,CAApB;AAOH;;AACD,mBAAO,CAAC,CAAD,EAAIc,OAAO,CAACgC,IAAR,CAAarC,cAAb,CAAJ,CAAP;AAjFR;AAmFH,OApFiB,CAAlB;AAqFH,KAvFe,CAAhB;AAwFH,GA1FD;;AA2FA,SAAOzB,gBAAP;AACH,CA7GuB,EAAxB;;AA8GA,SAASA,gBAAT","sourcesContent":["import { __awaiter, __generator, __values } from \"tslib\";\nimport { HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { requestTimeout } from \"./request-timeout\";\nvar FetchHttpHandler = (function () {\n    function FetchHttpHandler(options) {\n        var _this = this;\n        if (typeof options === \"function\") {\n            this.configProvider = function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, options()];\n                    case 1: return [2, (_a.sent()) || {}];\n                }\n            }); }); };\n        }\n        else {\n            this.config = options !== null && options !== void 0 ? options : {};\n        }\n    }\n    FetchHttpHandler.prototype.destroy = function () {\n    };\n    FetchHttpHandler.prototype.handle = function (request, _a) {\n        var _b = _a === void 0 ? {} : _a, abortSignal = _b.abortSignal;\n        return __awaiter(this, void 0, void 0, function () {\n            var _c, requestTimeoutInMs, abortError, path, queryString, port, method, url, body, requestOptions, fetchRequest, raceOfPromises;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!(!this.config && this.configProvider)) return [3, 2];\n                        _c = this;\n                        return [4, this.configProvider()];\n                    case 1:\n                        _c.config = _d.sent();\n                        _d.label = 2;\n                    case 2:\n                        requestTimeoutInMs = this.config.requestTimeout;\n                        if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n                            abortError = new Error(\"Request aborted\");\n                            abortError.name = \"AbortError\";\n                            return [2, Promise.reject(abortError)];\n                        }\n                        path = request.path;\n                        if (request.query) {\n                            queryString = buildQueryString(request.query);\n                            if (queryString) {\n                                path += \"?\" + queryString;\n                            }\n                        }\n                        port = request.port, method = request.method;\n                        url = request.protocol + \"//\" + request.hostname + (port ? \":\" + port : \"\") + path;\n                        body = method === \"GET\" || method === \"HEAD\" ? undefined : request.body;\n                        requestOptions = {\n                            body: body,\n                            headers: new Headers(request.headers),\n                            method: method,\n                        };\n                        if (typeof AbortController !== \"undefined\") {\n                            requestOptions[\"signal\"] = abortSignal;\n                        }\n                        fetchRequest = new Request(url, requestOptions);\n                        raceOfPromises = [\n                            fetch(fetchRequest).then(function (response) {\n                                var e_1, _a;\n                                var fetchHeaders = response.headers;\n                                var transformedHeaders = {};\n                                try {\n                                    for (var _b = __values(fetchHeaders.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                                        var pair = _c.value;\n                                        transformedHeaders[pair[0]] = pair[1];\n                                    }\n                                }\n                                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                                finally {\n                                    try {\n                                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                                    }\n                                    finally { if (e_1) throw e_1.error; }\n                                }\n                                var hasReadableStream = response.body !== undefined;\n                                if (!hasReadableStream) {\n                                    return response.blob().then(function (body) { return ({\n                                        response: new HttpResponse({\n                                            headers: transformedHeaders,\n                                            statusCode: response.status,\n                                            body: body,\n                                        }),\n                                    }); });\n                                }\n                                return {\n                                    response: new HttpResponse({\n                                        headers: transformedHeaders,\n                                        statusCode: response.status,\n                                        body: response.body,\n                                    }),\n                                };\n                            }),\n                            requestTimeout(requestTimeoutInMs),\n                        ];\n                        if (abortSignal) {\n                            raceOfPromises.push(new Promise(function (resolve, reject) {\n                                abortSignal.onabort = function () {\n                                    var abortError = new Error(\"Request aborted\");\n                                    abortError.name = \"AbortError\";\n                                    reject(abortError);\n                                };\n                            }));\n                        }\n                        return [2, Promise.race(raceOfPromises)];\n                }\n            });\n        });\n    };\n    return FetchHttpHandler;\n}());\nexport { FetchHttpHandler };\n"]},"metadata":{},"sourceType":"module"}