{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.requestCardToRedeem = void 0;\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar borsh_1 = require(\"borsh\");\n\nvar utils_1 = require(\"../../../utils\");\n\nvar __1 = require(\"../../..\");\n\nvar find_1 = require(\"../find\");\n\nfunction requestCardToRedeem(_x) {\n  return _requestCardToRedeem.apply(this, arguments);\n}\n\nfunction _requestCardToRedeem() {\n  _requestCardToRedeem = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var index, packSetKey, editionKey, editionMint, voucherKey, tokenAccount, wallet, randomOracle, PROGRAM_IDS, value, store, provingProcess, packConfig, data, keys;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            index = _ref.index, packSetKey = _ref.packSetKey, editionKey = _ref.editionKey, editionMint = _ref.editionMint, voucherKey = _ref.voucherKey, tokenAccount = _ref.tokenAccount, wallet = _ref.wallet, randomOracle = _ref.randomOracle;\n            PROGRAM_IDS = (0, utils_1.programIds)();\n            value = new __1.RequestCardToRedeemArgs({\n              index: index\n            });\n            store = PROGRAM_IDS.store;\n\n            if (store) {\n              _context.next = 6;\n              break;\n            }\n\n            throw new Error('Store not initialized');\n\n          case 6:\n            _context.next = 8;\n            return (0, find_1.findProvingProcessProgramAddress)(packSetKey, wallet, (0, utils_1.toPublicKey)(editionMint));\n\n          case 8:\n            provingProcess = _context.sent;\n            _context.next = 11;\n            return (0, find_1.findPackConfigProgramAddress)(packSetKey);\n\n          case 11:\n            packConfig = _context.sent;\n            data = Buffer.from((0, borsh_1.serialize)(__1.PACKS_SCHEMA, value));\n            keys = [// pack_set\n            {\n              pubkey: (0, utils_1.toPublicKey)(packSetKey),\n              isSigner: false,\n              isWritable: false\n            }, // pack_config\n            {\n              pubkey: (0, utils_1.toPublicKey)(packConfig),\n              isSigner: false,\n              isWritable: true\n            }, // store\n            {\n              pubkey: (0, utils_1.toPublicKey)(store),\n              isSigner: false,\n              isWritable: false\n            }, // edition\n            {\n              pubkey: (0, utils_1.toPublicKey)(editionKey),\n              isSigner: false,\n              isWritable: false\n            }, // edition_mint\n            {\n              pubkey: (0, utils_1.toPublicKey)(editionMint),\n              isSigner: false,\n              isWritable: true\n            }, // pack_voucher\n            {\n              pubkey: (0, utils_1.toPublicKey)(voucherKey),\n              isSigner: false,\n              isWritable: false\n            }, // proving_process\n            {\n              pubkey: (0, utils_1.toPublicKey)(provingProcess),\n              isSigner: false,\n              isWritable: true\n            }, // user_wallet\n            {\n              pubkey: wallet,\n              isSigner: true,\n              isWritable: true\n            }, // randomness_oracle\n            {\n              pubkey: (0, utils_1.toPublicKey)(randomOracle),\n              isSigner: false,\n              isWritable: false\n            }, // clock\n            {\n              pubkey: (0, utils_1.toPublicKey)(web3_js_1.SYSVAR_CLOCK_PUBKEY),\n              isSigner: false,\n              isWritable: false\n            }, // rent\n            {\n              pubkey: (0, utils_1.toPublicKey)(web3_js_1.SYSVAR_RENT_PUBKEY),\n              isSigner: false,\n              isWritable: false\n            }, // spl_token program\n            {\n              pubkey: (0, utils_1.programIds)().token,\n              isSigner: false,\n              isWritable: false\n            }, // system_program\n            {\n              pubkey: web3_js_1.SystemProgram.programId,\n              isSigner: false,\n              isWritable: false\n            }];\n\n            if (tokenAccount) {\n              // user_token_account\n              keys.push({\n                pubkey: (0, utils_1.toPublicKey)(tokenAccount),\n                isSigner: false,\n                isWritable: true\n              });\n            }\n\n            return _context.abrupt(\"return\", new web3_js_1.TransactionInstruction({\n              keys: keys,\n              programId: (0, utils_1.toPublicKey)(PROGRAM_IDS.pack_create),\n              data: data\n            }));\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _requestCardToRedeem.apply(this, arguments);\n}\n\nexports.requestCardToRedeem = requestCardToRedeem;","map":{"version":3,"sources":["../../../../../src/models/packs/instructions/requestCardToRedeem.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.requestCardToRedeem = void 0;\r\nconst web3_js_1 = require(\"@solana/web3.js\");\r\nconst borsh_1 = require(\"borsh\");\r\nconst utils_1 = require(\"../../../utils\");\r\nconst __1 = require(\"../../..\");\r\nconst find_1 = require(\"../find\");\r\nasync function requestCardToRedeem({ index, packSetKey, editionKey, editionMint, voucherKey, tokenAccount, wallet, randomOracle, }) {\r\n    const PROGRAM_IDS = (0, utils_1.programIds)();\r\n    const value = new __1.RequestCardToRedeemArgs({\r\n        index,\r\n    });\r\n    const store = PROGRAM_IDS.store;\r\n    if (!store) {\r\n        throw new Error('Store not initialized');\r\n    }\r\n    const provingProcess = await (0, find_1.findProvingProcessProgramAddress)(packSetKey, wallet, (0, utils_1.toPublicKey)(editionMint));\r\n    const packConfig = await (0, find_1.findPackConfigProgramAddress)(packSetKey);\r\n    const data = Buffer.from((0, borsh_1.serialize)(__1.PACKS_SCHEMA, value));\r\n    const keys = [\r\n        // pack_set\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(packSetKey),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        // pack_config\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(packConfig),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        // store\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(store),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        // edition\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(editionKey),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        // edition_mint\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(editionMint),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        // pack_voucher\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(voucherKey),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        // proving_process\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(provingProcess),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        // user_wallet\r\n        {\r\n            pubkey: wallet,\r\n            isSigner: true,\r\n            isWritable: true,\r\n        },\r\n        // randomness_oracle\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(randomOracle),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        // clock\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(web3_js_1.SYSVAR_CLOCK_PUBKEY),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        // rent\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(web3_js_1.SYSVAR_RENT_PUBKEY),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        // spl_token program\r\n        {\r\n            pubkey: (0, utils_1.programIds)().token,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        // system_program\r\n        {\r\n            pubkey: web3_js_1.SystemProgram.programId,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n    ];\r\n    if (tokenAccount) {\r\n        // user_token_account\r\n        keys.push({\r\n            pubkey: (0, utils_1.toPublicKey)(tokenAccount),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        });\r\n    }\r\n    return new web3_js_1.TransactionInstruction({\r\n        keys,\r\n        programId: (0, utils_1.toPublicKey)(PROGRAM_IDS.pack_create),\r\n        data,\r\n    });\r\n}\r\nexports.requestCardToRedeem = requestCardToRedeem;\r\n//# sourceMappingURL=requestCardToRedeem.js.map"]},"metadata":{},"sourceType":"script"}