{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.processPackSets = void 0;\n\nvar __1 = require(\"../..\");\n\nvar PackSet_1 = require(\"../../models/packs/accounts/PackSet\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar processPackSets = function processPackSets(_ref, setter) {\n  var account = _ref.account,\n      pubkey = _ref.pubkey;\n  if (!isPackAccount(account)) return;\n\n  try {\n    if (isPackSetAccount(account)) {\n      var packSet = (0, PackSet_1.decodePackSet)(account.data);\n      var parsedAccount = {\n        pubkey: pubkey,\n        account: account,\n        info: packSet\n      };\n      setter('packs', pubkey, parsedAccount);\n    }\n  } catch (_unused) {// ignore errors\n    // add type as first byte for easier deserialization\n  }\n};\n\nexports.processPackSets = processPackSets;\n\nvar isPackAccount = function isPackAccount(account) {\n  return account && (0, utils_1.pubkeyToString)(account.owner) === utils_1.PACK_CREATE_ID.toString();\n};\n\nvar isPackSetAccount = function isPackSetAccount(account) {\n  return account.data[0] === __1.PackKey.PackSet;\n};","map":{"version":3,"sources":["../../../../src/contexts/meta/processPackSets.ts"],"names":[],"mappings":";;;;;;;AACA,IAAA,GAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,qCAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAIO,IAAM,eAAe,GAAwB,SAAvC,eAAuC,OAElD,MAFkD,EAGhD;AAAA,MAFA,OAEA,QAFA,OAEA;AAAA,MAFS,MAET,QAFS,MAET;AACF,MAAI,CAAC,aAAa,CAAC,OAAD,CAAlB,EAA6B;;AAE7B,MAAI;AACF,QAAI,gBAAgB,CAAC,OAAD,CAApB,EAA+B;AAC7B,UAAM,OAAO,GAAG,CAAA,GAAA,SAAA,CAAA,aAAA,EAAc,OAAO,CAAC,IAAtB,CAAhB;AACA,UAAM,aAAa,GAA2B;AAC5C,QAAA,MAAM,EAAN,MAD4C;AAE5C,QAAA,OAAO,EAAE,OAFmC;AAG5C,QAAA,IAAI,EAAE;AAHsC,OAA9C;AAMA,MAAA,MAAM,CAAC,OAAD,EAAU,MAAV,EAAkB,aAAlB,CAAN;AACD;AACF,GAXD,CAWE,gBAAM,CACN;AACA;AACD;AACF,CArBM;;AAAM,OAAA,CAAA,eAAA,GAAe,eAAf;;AAuBb,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,OAAD;AAAA,SACpB,OAAO,IAAI,CAAA,GAAA,OAAA,CAAA,cAAA,EAAe,OAAO,CAAC,KAAvB,MAAkC,OAAA,CAAA,cAAA,CAAe,QAAf,EADzB;AAAA,CAAtB;;AAGA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAC,OAAD;AAAA,SACvB,OAAO,CAAC,IAAR,CAAa,CAAb,MAAoB,GAAA,CAAA,OAAA,CAAQ,OADL;AAAA,CAAzB","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.processPackSets = void 0;\r\nconst __1 = require(\"../..\");\r\nconst PackSet_1 = require(\"../../models/packs/accounts/PackSet\");\r\nconst utils_1 = require(\"../../utils\");\r\nconst processPackSets = ({ account, pubkey }, setter) => {\r\n    if (!isPackAccount(account))\r\n        return;\r\n    try {\r\n        if (isPackSetAccount(account)) {\r\n            const packSet = (0, PackSet_1.decodePackSet)(account.data);\r\n            const parsedAccount = {\r\n                pubkey,\r\n                account: account,\r\n                info: packSet,\r\n            };\r\n            setter('packs', pubkey, parsedAccount);\r\n        }\r\n    }\r\n    catch {\r\n        // ignore errors\r\n        // add type as first byte for easier deserialization\r\n    }\r\n};\r\nexports.processPackSets = processPackSets;\r\nconst isPackAccount = (account) => account && (0, utils_1.pubkeyToString)(account.owner) === utils_1.PACK_CREATE_ID.toString();\r\nconst isPackSetAccount = (account) => account.data[0] === __1.PackKey.PackSet;\r\n//# sourceMappingURL=processPackSets.js.map"]},"metadata":{},"sourceType":"script"}