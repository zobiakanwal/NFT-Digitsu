{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { WalletNotConnectedError, WalletNotReadyError } from '@solana/wallet-adapter-base';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { WalletNotSelectedError } from './errors';\nimport { useLocalStorage } from './useLocalStorage';\nimport { WalletContext } from './useWallet';\nexport var WalletProvider = function WalletProvider(_ref) {\n  var children = _ref.children,\n      wallets = _ref.wallets,\n      _ref$autoConnect = _ref.autoConnect,\n      autoConnect = _ref$autoConnect === void 0 ? false : _ref$autoConnect,\n      _ref$onError = _ref.onError,\n      onError = _ref$onError === void 0 ? function (error) {\n    return console.error(error);\n  } : _ref$onError,\n      _ref$localStorageKey = _ref.localStorageKey,\n      localStorageKey = _ref$localStorageKey === void 0 ? 'walletName' : _ref$localStorageKey;\n\n  var _useLocalStorage = useLocalStorage(localStorageKey, null),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      name = _useLocalStorage2[0],\n      setName = _useLocalStorage2[1];\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      wallet = _useState2[0],\n      setWallet = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      adapter = _useState4[0],\n      setAdapter = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ready = _useState6[0],\n      setReady = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      connecting = _useState8[0],\n      setConnecting = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      disconnecting = _useState10[0],\n      setDisconnecting = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      connected = _useState12[0],\n      setConnected = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      autoApprove = _useState14[0],\n      setAutoApprove = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      publicKey = _useState16[0],\n      setPublicKey = _useState16[1];\n\n  var walletsByName = useMemo(function () {\n    return wallets.reduce(function (walletsByName, wallet) {\n      walletsByName[wallet.name] = wallet;\n      return walletsByName;\n    }, {});\n  }, [wallets]);\n  var select = useCallback(function (selected) {\n    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(name === selected)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              if (!adapter) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 5;\n              return adapter.disconnect();\n\n            case 5:\n              setName(selected);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  }, [name, adapter, setName]);\n  var reset = useCallback(function () {\n    setReady(false);\n    setConnecting(false);\n    setDisconnecting(false);\n    setConnected(false);\n    setAutoApprove(false);\n    setPublicKey(null);\n  }, [setReady, setConnecting, setDisconnecting, setConnected, setAutoApprove, setPublicKey]);\n  var onReady = useCallback(function () {\n    return setReady(true);\n  }, [setReady]);\n  var onConnect = useCallback(function () {\n    if (!adapter) return;\n    setConnected(true);\n    setAutoApprove(adapter.autoApprove);\n    setPublicKey(adapter.publicKey);\n  }, [adapter, setConnected, setAutoApprove, setPublicKey]);\n  var onDisconnect = useCallback(function () {\n    return reset();\n  }, [reset]);\n  var connect = useCallback(function () {\n    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var error, _error;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(connecting || disconnecting || connected)) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 2:\n              if (!(!wallet || !adapter)) {\n                _context2.next = 6;\n                break;\n              }\n\n              error = new WalletNotSelectedError();\n              onError(error);\n              throw error;\n\n            case 6:\n              if (ready) {\n                _context2.next = 11;\n                break;\n              }\n\n              window.open(wallet.url, '_blank');\n              _error = new WalletNotReadyError();\n              onError(_error);\n              throw _error;\n\n            case 11:\n              setConnecting(true);\n              _context2.prev = 12;\n              _context2.next = 15;\n              return adapter.connect();\n\n            case 15:\n              _context2.prev = 15;\n              setConnecting(false);\n              return _context2.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[12,, 15, 18]]);\n    }));\n  }, [connecting, disconnecting, connected, adapter, onError, ready, wallet, setConnecting]);\n  var disconnect = useCallback(function () {\n    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!disconnecting) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 2:\n              if (adapter) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 5;\n              return select(null);\n\n            case 5:\n              return _context3.abrupt(\"return\");\n\n            case 6:\n              setDisconnecting(true);\n              _context3.prev = 7;\n              _context3.next = 10;\n              return adapter.disconnect();\n\n            case 10:\n              _context3.prev = 10;\n              setDisconnecting(false);\n              _context3.next = 14;\n              return select(null);\n\n            case 14:\n              return _context3.finish(10);\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[7,, 10, 15]]);\n    }));\n  }, [disconnecting, adapter, select, setDisconnecting]);\n  var signTransaction = useCallback(function (transaction) {\n    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var error, _error2;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (adapter) {\n                _context4.next = 4;\n                break;\n              }\n\n              error = new WalletNotSelectedError();\n              onError(error);\n              throw error;\n\n            case 4:\n              if (connected) {\n                _context4.next = 8;\n                break;\n              }\n\n              _error2 = new WalletNotConnectedError();\n              onError(_error2);\n              throw _error2;\n\n            case 8:\n              _context4.next = 10;\n              return adapter.signTransaction(transaction);\n\n            case 10:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n  }, [adapter, onError, connected]);\n  var signAllTransactions = useCallback(function (transactions) {\n    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var error, _error3;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (adapter) {\n                _context5.next = 4;\n                break;\n              }\n\n              error = new WalletNotSelectedError();\n              onError(error);\n              throw error;\n\n            case 4:\n              if (connected) {\n                _context5.next = 8;\n                break;\n              }\n\n              _error3 = new WalletNotConnectedError();\n              onError(_error3);\n              throw _error3;\n\n            case 8:\n              _context5.next = 10;\n              return adapter.signAllTransactions(transactions);\n\n            case 10:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n  }, [adapter, onError, connected]); // Reset state and set the wallet, adapter, and ready state when the name changes\n\n  useEffect(function () {\n    reset();\n    var wallet = name ? walletsByName[name] : undefined;\n    var adapter = wallet ? wallet.adapter() : undefined;\n    setWallet(wallet);\n    setAdapter(adapter);\n    setReady(adapter ? adapter.ready : false);\n  }, [reset, name, walletsByName, setWallet, setAdapter, setReady]); // Setup and teardown event listeners when the adapter changes\n\n  useEffect(function () {\n    if (adapter) {\n      adapter.on('ready', onReady);\n      adapter.on('connect', onConnect);\n      adapter.on('disconnect', onDisconnect);\n      adapter.on('error', onError);\n      return function () {\n        adapter.off('ready', onReady);\n        adapter.off('connect', onConnect);\n        adapter.off('disconnect', onDisconnect);\n        adapter.off('error', onError);\n      };\n    }\n  }, [adapter, onReady, onConnect, onDisconnect, onError]); // If autoConnect is enabled, try to connect when the adapter changes and is ready\n\n  useEffect(function () {\n    if (autoConnect && adapter && ready) {\n      (function () {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n          return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  setConnecting(true);\n                  _context6.prev = 1;\n                  _context6.next = 4;\n                  return adapter.connect();\n\n                case 4:\n                  _context6.next = 8;\n                  break;\n\n                case 6:\n                  _context6.prev = 6;\n                  _context6.t0 = _context6[\"catch\"](1);\n\n                case 8:\n                  _context6.prev = 8;\n                  setConnecting(false);\n                  return _context6.finish(8);\n\n                case 11:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6, null, [[1, 6, 8, 11]]);\n        }));\n      })();\n    }\n  }, [autoConnect, adapter, ready, setConnecting]);\n  return React.createElement(WalletContext.Provider, {\n    value: {\n      wallets: wallets,\n      autoConnect: autoConnect,\n      wallet: wallet,\n      select: select,\n      publicKey: publicKey,\n      ready: ready,\n      connecting: connecting,\n      disconnecting: disconnecting,\n      connected: connected,\n      autoApprove: autoApprove,\n      connect: connect,\n      disconnect: disconnect,\n      signTransaction: signTransaction,\n      signAllTransactions: signAllTransactions\n    }\n  }, children);\n};","map":{"version":3,"sources":["../src/WalletProvider.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { WalletNotConnectedError, WalletNotReadyError } from '@solana/wallet-adapter-base';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { WalletNotSelectedError } from './errors';\nimport { useLocalStorage } from './useLocalStorage';\nimport { WalletContext } from './useWallet';\nexport const WalletProvider = ({ children, wallets, autoConnect = false, onError = (error) => console.error(error), localStorageKey = 'walletName', }) => {\n    const [name, setName] = useLocalStorage(localStorageKey, null);\n    const [wallet, setWallet] = useState();\n    const [adapter, setAdapter] = useState();\n    const [ready, setReady] = useState(false);\n    const [connecting, setConnecting] = useState(false);\n    const [disconnecting, setDisconnecting] = useState(false);\n    const [connected, setConnected] = useState(false);\n    const [autoApprove, setAutoApprove] = useState(false);\n    const [publicKey, setPublicKey] = useState(null);\n    const walletsByName = useMemo(() => wallets.reduce((walletsByName, wallet) => {\n        walletsByName[wallet.name] = wallet;\n        return walletsByName;\n    }, {}), [wallets]);\n    const select = useCallback((selected) => __awaiter(void 0, void 0, void 0, function* () {\n        if (name === selected)\n            return;\n        if (adapter)\n            yield adapter.disconnect();\n        setName(selected);\n    }), [name, adapter, setName]);\n    const reset = useCallback(() => {\n        setReady(false);\n        setConnecting(false);\n        setDisconnecting(false);\n        setConnected(false);\n        setAutoApprove(false);\n        setPublicKey(null);\n    }, [setReady, setConnecting, setDisconnecting, setConnected, setAutoApprove, setPublicKey]);\n    const onReady = useCallback(() => setReady(true), [setReady]);\n    const onConnect = useCallback(() => {\n        if (!adapter)\n            return;\n        setConnected(true);\n        setAutoApprove(adapter.autoApprove);\n        setPublicKey(adapter.publicKey);\n    }, [adapter, setConnected, setAutoApprove, setPublicKey]);\n    const onDisconnect = useCallback(() => reset(), [reset]);\n    const connect = useCallback(() => __awaiter(void 0, void 0, void 0, function* () {\n        if (connecting || disconnecting || connected)\n            return;\n        if (!wallet || !adapter) {\n            const error = new WalletNotSelectedError();\n            onError(error);\n            throw error;\n        }\n        if (!ready) {\n            window.open(wallet.url, '_blank');\n            const error = new WalletNotReadyError();\n            onError(error);\n            throw error;\n        }\n        setConnecting(true);\n        try {\n            yield adapter.connect();\n        }\n        finally {\n            setConnecting(false);\n        }\n    }), [connecting, disconnecting, connected, adapter, onError, ready, wallet, setConnecting]);\n    const disconnect = useCallback(() => __awaiter(void 0, void 0, void 0, function* () {\n        if (disconnecting)\n            return;\n        if (!adapter) {\n            yield select(null);\n            return;\n        }\n        setDisconnecting(true);\n        try {\n            yield adapter.disconnect();\n        }\n        finally {\n            setDisconnecting(false);\n            yield select(null);\n        }\n    }), [disconnecting, adapter, select, setDisconnecting]);\n    const signTransaction = useCallback((transaction) => __awaiter(void 0, void 0, void 0, function* () {\n        if (!adapter) {\n            const error = new WalletNotSelectedError();\n            onError(error);\n            throw error;\n        }\n        if (!connected) {\n            const error = new WalletNotConnectedError();\n            onError(error);\n            throw error;\n        }\n        return yield adapter.signTransaction(transaction);\n    }), [adapter, onError, connected]);\n    const signAllTransactions = useCallback((transactions) => __awaiter(void 0, void 0, void 0, function* () {\n        if (!adapter) {\n            const error = new WalletNotSelectedError();\n            onError(error);\n            throw error;\n        }\n        if (!connected) {\n            const error = new WalletNotConnectedError();\n            onError(error);\n            throw error;\n        }\n        return yield adapter.signAllTransactions(transactions);\n    }), [adapter, onError, connected]);\n    // Reset state and set the wallet, adapter, and ready state when the name changes\n    useEffect(() => {\n        reset();\n        const wallet = name ? walletsByName[name] : undefined;\n        const adapter = wallet ? wallet.adapter() : undefined;\n        setWallet(wallet);\n        setAdapter(adapter);\n        setReady(adapter ? adapter.ready : false);\n    }, [reset, name, walletsByName, setWallet, setAdapter, setReady]);\n    // Setup and teardown event listeners when the adapter changes\n    useEffect(() => {\n        if (adapter) {\n            adapter.on('ready', onReady);\n            adapter.on('connect', onConnect);\n            adapter.on('disconnect', onDisconnect);\n            adapter.on('error', onError);\n            return () => {\n                adapter.off('ready', onReady);\n                adapter.off('connect', onConnect);\n                adapter.off('disconnect', onDisconnect);\n                adapter.off('error', onError);\n            };\n        }\n    }, [adapter, onReady, onConnect, onDisconnect, onError]);\n    // If autoConnect is enabled, try to connect when the adapter changes and is ready\n    useEffect(() => {\n        if (autoConnect && adapter && ready) {\n            (function () {\n                return __awaiter(this, void 0, void 0, function* () {\n                    setConnecting(true);\n                    try {\n                        yield adapter.connect();\n                    }\n                    catch (error) {\n                        // Don't throw error, but onError will still be called\n                    }\n                    finally {\n                        setConnecting(false);\n                    }\n                });\n            })();\n        }\n    }, [autoConnect, adapter, ready, setConnecting]);\n    return (React.createElement(WalletContext.Provider, { value: {\n            wallets,\n            autoConnect,\n            wallet,\n            select,\n            publicKey,\n            ready,\n            connecting,\n            disconnecting,\n            connected,\n            autoApprove,\n            connect,\n            disconnect,\n            signTransaction,\n            signAllTransactions,\n        } }, children));\n};\n//# sourceMappingURL=WalletProvider.js.map"]},"metadata":{},"sourceType":"module"}