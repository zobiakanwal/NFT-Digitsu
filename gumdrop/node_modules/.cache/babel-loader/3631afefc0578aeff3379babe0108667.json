{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.redeemParticipationBidV3 = void 0;\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar borsh_1 = require(\"borsh\");\n\nvar _1 = require(\".\");\n\nvar actions_1 = require(\"../../actions\");\n\nvar utils_1 = require(\"../../utils\");\n\nfunction redeemParticipationBidV3(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16) {\n  return _redeemParticipationBidV.apply(this, arguments);\n}\n\nfunction _redeemParticipationBidV() {\n  _redeemParticipationBidV = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(vault, safetyDepositTokenStore, destination, safetyDeposit, bidder, payer, metadata, masterEdition, originalMint, transferAuthority, acceptPaymentAccount, tokenPaymentAccount, newMint, edition, winIndex, instructions) {\n    var PROGRAM_IDS, store, _yield, auctionKey, auctionManagerKey, auctionDataExtended, _yield2, bidRedemption, bidMetadata, prizeTrackingTicket, newMetadata, newEdition, editionMarkPda, safetyDepositConfig, value, data, keys;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            PROGRAM_IDS = (0, utils_1.programIds)();\n            store = PROGRAM_IDS.store;\n\n            if (store) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error('Store not initialized');\n\n          case 4:\n            _context.next = 6;\n            return (0, _1.getAuctionKeys)(vault);\n\n          case 6:\n            _yield = _context.sent;\n            auctionKey = _yield.auctionKey;\n            auctionManagerKey = _yield.auctionManagerKey;\n            _context.next = 11;\n            return (0, actions_1.getAuctionExtended)({\n              auctionProgramId: PROGRAM_IDS.auction,\n              resource: vault\n            });\n\n          case 11:\n            auctionDataExtended = _context.sent;\n            _context.next = 14;\n            return (0, _1.getBidderKeys)(auctionKey, bidder);\n\n          case 14:\n            _yield2 = _context.sent;\n            bidRedemption = _yield2.bidRedemption;\n            bidMetadata = _yield2.bidMetadata;\n            _context.next = 19;\n            return (0, _1.getPrizeTrackingTicket)(auctionManagerKey, originalMint);\n\n          case 19:\n            prizeTrackingTicket = _context.sent;\n            _context.next = 22;\n            return (0, actions_1.getMetadata)(newMint);\n\n          case 22:\n            newMetadata = _context.sent;\n            _context.next = 25;\n            return (0, actions_1.getEdition)(newMint);\n\n          case 25:\n            newEdition = _context.sent;\n            _context.next = 28;\n            return (0, actions_1.getEditionMarkPda)(originalMint, edition);\n\n          case 28:\n            editionMarkPda = _context.sent;\n            _context.next = 31;\n            return (0, _1.getSafetyDepositConfig)(auctionManagerKey, safetyDeposit);\n\n          case 31:\n            safetyDepositConfig = _context.sent;\n            value = new _1.RedeemParticipationBidV3Args({\n              winIndex: winIndex\n            });\n            data = Buffer.from((0, borsh_1.serialize)(_1.SCHEMA, value));\n            keys = [{\n              pubkey: (0, utils_1.toPublicKey)(auctionManagerKey),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(safetyDepositTokenStore),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(destination),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(bidRedemption),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(safetyDeposit),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(vault),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(safetyDepositConfig),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(auctionKey),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(bidMetadata),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(bidder),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(payer),\n              isSigner: true,\n              isWritable: true\n            }, {\n              pubkey: PROGRAM_IDS.token,\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(PROGRAM_IDS.vault),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(PROGRAM_IDS.metadata),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: store,\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: web3_js_1.SystemProgram.programId,\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(transferAuthority),\n              isSigner: true,\n              isWritable: false\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(acceptPaymentAccount),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(tokenPaymentAccount),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(prizeTrackingTicket),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(newMetadata),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(newEdition),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(masterEdition),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(newMint),\n              isSigner: false,\n              isWritable: true\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(editionMarkPda),\n              isSigner: false,\n              isWritable: true\n            }, {\n              // Mint authority (this) is going to be the payer since the bidder\n              // may not be signer hre - we may be redeeming for someone else (permissionless)\n              // and during the txn, mint authority is removed from us and given to master edition.\n              // The ATA account is already owned by bidder by default. No signing needed\n              pubkey: (0, utils_1.toPublicKey)(payer),\n              isSigner: true,\n              isWritable: false\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(metadata),\n              isSigner: false,\n              isWritable: false\n            }, {\n              pubkey: (0, utils_1.toPublicKey)(auctionDataExtended),\n              isSigner: false,\n              isWritable: false\n            }];\n            instructions.push(new web3_js_1.TransactionInstruction({\n              keys: keys,\n              programId: (0, utils_1.toPublicKey)(PROGRAM_IDS.metaplex),\n              data: data\n            }));\n\n          case 36:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _redeemParticipationBidV.apply(this, arguments);\n}\n\nexports.redeemParticipationBidV3 = redeemParticipationBidV3;","map":{"version":3,"sources":["../../../../src/models/metaplex/redeemParticipationBidV3.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.redeemParticipationBidV3 = void 0;\r\nconst web3_js_1 = require(\"@solana/web3.js\");\r\nconst borsh_1 = require(\"borsh\");\r\nconst _1 = require(\".\");\r\nconst actions_1 = require(\"../../actions\");\r\nconst utils_1 = require(\"../../utils\");\r\nasync function redeemParticipationBidV3(vault, safetyDepositTokenStore, destination, safetyDeposit, bidder, payer, metadata, masterEdition, originalMint, transferAuthority, acceptPaymentAccount, tokenPaymentAccount, newMint, edition, winIndex, instructions) {\r\n    const PROGRAM_IDS = (0, utils_1.programIds)();\r\n    const store = PROGRAM_IDS.store;\r\n    if (!store) {\r\n        throw new Error('Store not initialized');\r\n    }\r\n    const { auctionKey, auctionManagerKey } = await (0, _1.getAuctionKeys)(vault);\r\n    const auctionDataExtended = await (0, actions_1.getAuctionExtended)({\r\n        auctionProgramId: PROGRAM_IDS.auction,\r\n        resource: vault,\r\n    });\r\n    const { bidRedemption, bidMetadata } = await (0, _1.getBidderKeys)(auctionKey, bidder);\r\n    const prizeTrackingTicket = await (0, _1.getPrizeTrackingTicket)(auctionManagerKey, originalMint);\r\n    const newMetadata = await (0, actions_1.getMetadata)(newMint);\r\n    const newEdition = await (0, actions_1.getEdition)(newMint);\r\n    const editionMarkPda = await (0, actions_1.getEditionMarkPda)(originalMint, edition);\r\n    const safetyDepositConfig = await (0, _1.getSafetyDepositConfig)(auctionManagerKey, safetyDeposit);\r\n    const value = new _1.RedeemParticipationBidV3Args({ winIndex });\r\n    const data = Buffer.from((0, borsh_1.serialize)(_1.SCHEMA, value));\r\n    const keys = [\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(auctionManagerKey),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(safetyDepositTokenStore),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(destination),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(bidRedemption),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(safetyDeposit),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(vault),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(safetyDepositConfig),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(auctionKey),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(bidMetadata),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(bidder),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(payer),\r\n            isSigner: true,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: PROGRAM_IDS.token,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(PROGRAM_IDS.vault),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(PROGRAM_IDS.metadata),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: store,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SystemProgram.programId,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: web3_js_1.SYSVAR_RENT_PUBKEY,\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(transferAuthority),\r\n            isSigner: true,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(acceptPaymentAccount),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(tokenPaymentAccount),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(prizeTrackingTicket),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(newMetadata),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(newEdition),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(masterEdition),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(newMint),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(editionMarkPda),\r\n            isSigner: false,\r\n            isWritable: true,\r\n        },\r\n        {\r\n            // Mint authority (this) is going to be the payer since the bidder\r\n            // may not be signer hre - we may be redeeming for someone else (permissionless)\r\n            // and during the txn, mint authority is removed from us and given to master edition.\r\n            // The ATA account is already owned by bidder by default. No signing needed\r\n            pubkey: (0, utils_1.toPublicKey)(payer),\r\n            isSigner: true,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(metadata),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n        {\r\n            pubkey: (0, utils_1.toPublicKey)(auctionDataExtended),\r\n            isSigner: false,\r\n            isWritable: false,\r\n        },\r\n    ];\r\n    instructions.push(new web3_js_1.TransactionInstruction({\r\n        keys,\r\n        programId: (0, utils_1.toPublicKey)(PROGRAM_IDS.metaplex),\r\n        data,\r\n    }));\r\n}\r\nexports.redeemParticipationBidV3 = redeemParticipationBidV3;\r\n//# sourceMappingURL=redeemParticipationBidV3.js.map"]},"metadata":{},"sourceType":"script"}