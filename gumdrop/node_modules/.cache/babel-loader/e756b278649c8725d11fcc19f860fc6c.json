{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAssetCostToStore = exports.ARWEAVE_UPLOAD_ENDPOINT = exports.LAMPORT_MULTIPLIER = void 0;\n\nvar arweave_cost_1 = require(\"@metaplex/arweave-cost\");\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nexports.LAMPORT_MULTIPLIER = web3_js_1.LAMPORTS_PER_SOL;\nexports.ARWEAVE_UPLOAD_ENDPOINT = 'https://us-central1-metaplex-studios.cloudfunctions.net/uploadFile';\n\nfunction getAssetCostToStore(_x) {\n  return _getAssetCostToStore.apply(this, arguments);\n}\n\nfunction _getAssetCostToStore() {\n  _getAssetCostToStore = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(files) {\n    var sizes, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            sizes = files.map(function (f) {\n              return f.size;\n            });\n            _context.next = 3;\n            return (0, arweave_cost_1.calculate)(sizes);\n\n          case 3:\n            result = _context.sent;\n            return _context.abrupt(\"return\", web3_js_1.LAMPORTS_PER_SOL * result.solana);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getAssetCostToStore.apply(this, arguments);\n}\n\nexports.getAssetCostToStore = getAssetCostToStore;","map":{"version":3,"sources":["../../../src/utils/assets.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,IAAA,cAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEa,OAAA,CAAA,kBAAA,GAAqB,SAAA,CAAA,gBAArB;AAEA,OAAA,CAAA,uBAAA,GACX,oEADW;;SAGS,mB;;;;;kFAAf,iBAAmC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AACC,YAAA,KADD,GACS,KAAK,CAAC,GAAN,CAAU,UAAA,CAAC;AAAA,qBAAI,CAAC,CAAC,IAAN;AAAA,aAAX,CADT;AAAA;AAAA,mBAEgB,CAAA,GAAA,cAAA,CAAA,SAAA,EAAU,KAAV,CAFhB;;AAAA;AAEC,YAAA,MAFD;AAAA,6CAIE,SAAA,CAAA,gBAAA,GAAmB,MAAM,CAAC,MAJ5B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAAP,OAAA,CAAA,mBAAA,GAAA,mBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getAssetCostToStore = exports.ARWEAVE_UPLOAD_ENDPOINT = exports.LAMPORT_MULTIPLIER = void 0;\r\nconst arweave_cost_1 = require(\"@metaplex/arweave-cost\");\r\nconst web3_js_1 = require(\"@solana/web3.js\");\r\nexports.LAMPORT_MULTIPLIER = web3_js_1.LAMPORTS_PER_SOL;\r\nexports.ARWEAVE_UPLOAD_ENDPOINT = 'https://us-central1-metaplex-studios.cloudfunctions.net/uploadFile';\r\nasync function getAssetCostToStore(files) {\r\n    const sizes = files.map(f => f.size);\r\n    const result = await (0, arweave_cost_1.calculate)(sizes);\r\n    return web3_js_1.LAMPORTS_PER_SOL * result.solana;\r\n}\r\nexports.getAssetCostToStore = getAssetCostToStore;\r\n//# sourceMappingURL=assets.js.map"]},"metadata":{},"sourceType":"script"}