{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\slicedToArray.js\").default;\n\nvar _toConsumableArray = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\toConsumableArray.js\").default;\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\classCallCheck.js\").default;\n\nvar _createClass = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\createClass.js\").default;\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Account = void 0;\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar buffer_1 = require(\"buffer\");\n\nvar errors_1 = require(\"../errors\");\n\nvar Account = /*#__PURE__*/function () {\n  function Account(pubkey, info) {\n    _classCallCheck(this, Account);\n\n    this.pubkey = new web3_js_1.PublicKey(pubkey);\n    this.info = info;\n  }\n\n  _createClass(Account, [{\n    key: \"assertOwner\",\n    value: function assertOwner(pubkey) {\n      var _a;\n\n      return (_a = this.info) === null || _a === void 0 ? void 0 : _a.owner.equals(new web3_js_1.PublicKey(pubkey));\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var _a, _b, _c, _d, _e;\n\n      return {\n        pubkey: this.pubkey.toString(),\n        info: {\n          executable: !!((_a = this.info) === null || _a === void 0 ? void 0 : _a.executable),\n          owner: ((_b = this.info) === null || _b === void 0 ? void 0 : _b.owner) ? new web3_js_1.PublicKey((_c = this.info) === null || _c === void 0 ? void 0 : _c.owner) : null,\n          lamports: (_d = this.info) === null || _d === void 0 ? void 0 : _d.lamports,\n          data: (_e = this.info) === null || _e === void 0 ? void 0 : _e.data.toJSON()\n        },\n        data: this.data\n      };\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return JSON.stringify(this.toJSON());\n    }\n  }], [{\n    key: \"from\",\n    value: function from(account) {\n      return new this(account.pubkey, account.info);\n    }\n  }, {\n    key: \"load\",\n    value: function load(connection, pubkey) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var info;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Account.getInfo(connection, pubkey);\n\n              case 2:\n                info = _context.sent;\n                return _context.abrupt(\"return\", new this(pubkey, info));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"isCompatible\",\n    value: function isCompatible(_data) {\n      throw new Error(\"method 'isCompatible' is not implemented\");\n    }\n  }, {\n    key: \"getInfo\",\n    value: function getInfo(connection, pubkey) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var info;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return connection.getAccountInfo(new web3_js_1.PublicKey(pubkey));\n\n              case 2:\n                info = _context2.sent;\n\n                if (info) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw (0, errors_1.ERROR_ACCOUNT_NOT_FOUND)(pubkey);\n\n              case 5:\n                return _context2.abrupt(\"return\", Object.assign(Object.assign({}, info), {\n                  data: buffer_1.Buffer.from(info === null || info === void 0 ? void 0 : info.data)\n                }));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n    }\n  }, {\n    key: \"getInfos\",\n    value: function getInfos(connection, pubkeys) {\n      var commitment = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'recent';\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var BATCH_SIZE, promises, i, results;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                BATCH_SIZE = 99;\n                promises = [];\n\n                for (i = 0; i < pubkeys.length; i += BATCH_SIZE) {\n                  promises.push(Account.getMultipleAccounts(connection, pubkeys.slice(i, Math.min(pubkeys.length, i + BATCH_SIZE)), commitment));\n                }\n\n                results = new Map();\n                _context3.next = 6;\n                return Promise.all(promises);\n\n              case 6:\n                _context3.sent.forEach(function (result) {\n                  var _a;\n\n                  return _toConsumableArray((_a = result === null || result === void 0 ? void 0 : result.entries()) !== null && _a !== void 0 ? _a : []).forEach(function (_ref) {\n                    var _ref2 = _slicedToArray(_ref, 2),\n                        k = _ref2[0],\n                        v = _ref2[1];\n\n                    return results.set(k, v);\n                  });\n                });\n\n                return _context3.abrupt(\"return\", results);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n    }\n  }, {\n    key: \"getMultipleAccounts\",\n    value: function getMultipleAccounts(connection, pubkeys, commitment) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var args, unsafeRes, infos;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                args = connection._buildArgs([pubkeys.map(function (k) {\n                  return k.toString();\n                })], commitment, 'base64');\n                _context4.next = 3;\n                return connection._rpcRequest('getMultipleAccounts', args);\n\n              case 3:\n                unsafeRes = _context4.sent;\n\n                if (!unsafeRes.error) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error('failed to get info about accounts ' + unsafeRes.error.message);\n\n              case 6:\n                if (unsafeRes.result.value) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 8:\n                infos = unsafeRes.result.value.filter(Boolean).map(function (info) {\n                  return Object.assign(Object.assign({}, info), {\n                    data: buffer_1.Buffer.from(info.data[0], 'base64')\n                  });\n                });\n                return _context4.abrupt(\"return\", infos.reduce(function (acc, info, index) {\n                  acc.set(pubkeys[index], info);\n                  return acc;\n                }, new Map()));\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n    }\n  }]);\n\n  return Account;\n}();\n\nexports.Account = Account;","map":{"version":3,"sources":["../../../src/accounts/Account.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst buffer_1 = require(\"buffer\");\nconst errors_1 = require(\"../errors\");\nclass Account {\n    constructor(pubkey, info) {\n        this.pubkey = new web3_js_1.PublicKey(pubkey);\n        this.info = info;\n    }\n    static from(account) {\n        return new this(account.pubkey, account.info);\n    }\n    static load(connection, pubkey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const info = yield Account.getInfo(connection, pubkey);\n            return new this(pubkey, info);\n        });\n    }\n    static isCompatible(_data) {\n        throw new Error(`method 'isCompatible' is not implemented`);\n    }\n    static getInfo(connection, pubkey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const info = yield connection.getAccountInfo(new web3_js_1.PublicKey(pubkey));\n            if (!info) {\n                throw (0, errors_1.ERROR_ACCOUNT_NOT_FOUND)(pubkey);\n            }\n            return Object.assign(Object.assign({}, info), { data: buffer_1.Buffer.from(info === null || info === void 0 ? void 0 : info.data) });\n        });\n    }\n    static getInfos(connection, pubkeys, commitment = 'recent') {\n        return __awaiter(this, void 0, void 0, function* () {\n            const BATCH_SIZE = 99;\n            const promises = [];\n            for (let i = 0; i < pubkeys.length; i += BATCH_SIZE) {\n                promises.push(Account.getMultipleAccounts(connection, pubkeys.slice(i, Math.min(pubkeys.length, i + BATCH_SIZE)), commitment));\n            }\n            const results = new Map();\n            (yield Promise.all(promises)).forEach((result) => { var _a; return [...((_a = result === null || result === void 0 ? void 0 : result.entries()) !== null && _a !== void 0 ? _a : [])].forEach(([k, v]) => results.set(k, v)); });\n            return results;\n        });\n    }\n    static getMultipleAccounts(connection, pubkeys, commitment) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const args = connection._buildArgs([pubkeys.map((k) => k.toString())], commitment, 'base64');\n            const unsafeRes = yield connection._rpcRequest('getMultipleAccounts', args);\n            if (unsafeRes.error) {\n                throw new Error('failed to get info about accounts ' + unsafeRes.error.message);\n            }\n            if (!unsafeRes.result.value)\n                return;\n            const infos = unsafeRes.result.value\n                .filter(Boolean)\n                .map((info) => (Object.assign(Object.assign({}, info), { data: buffer_1.Buffer.from(info.data[0], 'base64') })));\n            return infos.reduce((acc, info, index) => {\n                acc.set(pubkeys[index], info);\n                return acc;\n            }, new Map());\n        });\n    }\n    assertOwner(pubkey) {\n        var _a;\n        return (_a = this.info) === null || _a === void 0 ? void 0 : _a.owner.equals(new web3_js_1.PublicKey(pubkey));\n    }\n    toJSON() {\n        var _a, _b, _c, _d, _e;\n        return {\n            pubkey: this.pubkey.toString(),\n            info: {\n                executable: !!((_a = this.info) === null || _a === void 0 ? void 0 : _a.executable),\n                owner: ((_b = this.info) === null || _b === void 0 ? void 0 : _b.owner) ? new web3_js_1.PublicKey((_c = this.info) === null || _c === void 0 ? void 0 : _c.owner) : null,\n                lamports: (_d = this.info) === null || _d === void 0 ? void 0 : _d.lamports,\n                data: (_e = this.info) === null || _e === void 0 ? void 0 : _e.data.toJSON(),\n            },\n            data: this.data,\n        };\n    }\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n}\nexports.Account = Account;\n//# sourceMappingURL=Account.js.map"]},"metadata":{},"sourceType":"script"}