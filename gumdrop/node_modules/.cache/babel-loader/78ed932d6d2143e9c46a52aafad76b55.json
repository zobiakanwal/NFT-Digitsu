{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\createClass.js\").default;\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\classCallCheck.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventEmitter = exports.MarketUpdateEvent = exports.CacheDeleteEvent = exports.CacheUpdateEvent = void 0;\n\nvar eventemitter3_1 = require(\"eventemitter3\");\n\nvar CacheUpdateEvent = /*#__PURE__*/_createClass(function CacheUpdateEvent(id, isNew, parser, isActive) {\n  _classCallCheck(this, CacheUpdateEvent);\n\n  this.id = id;\n  this.parser = parser;\n  this.isNew = isNew;\n  this.isActive = isActive;\n});\n\nexports.CacheUpdateEvent = CacheUpdateEvent;\nCacheUpdateEvent.type = 'CacheUpdate';\n\nvar CacheDeleteEvent = /*#__PURE__*/_createClass(function CacheDeleteEvent(id) {\n  _classCallCheck(this, CacheDeleteEvent);\n\n  this.id = id;\n});\n\nexports.CacheDeleteEvent = CacheDeleteEvent;\nCacheDeleteEvent.type = 'CacheUpdate';\n\nvar MarketUpdateEvent = /*#__PURE__*/_createClass(function MarketUpdateEvent(ids) {\n  _classCallCheck(this, MarketUpdateEvent);\n\n  this.ids = ids;\n});\n\nexports.MarketUpdateEvent = MarketUpdateEvent;\nMarketUpdateEvent.type = 'MarketUpdate';\n\nvar EventEmitter = /*#__PURE__*/function () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n\n    this.emitter = new eventemitter3_1.EventEmitter();\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"onMarket\",\n    value: function onMarket(callback) {\n      var _this = this;\n\n      this.emitter.on(MarketUpdateEvent.type, callback);\n      return function () {\n        return _this.emitter.removeListener(MarketUpdateEvent.type, callback);\n      };\n    }\n  }, {\n    key: \"onCache\",\n    value: function onCache(callback) {\n      var _this2 = this;\n\n      this.emitter.on(CacheUpdateEvent.type, callback);\n      return function () {\n        return _this2.emitter.removeListener(CacheUpdateEvent.type, callback);\n      };\n    }\n  }, {\n    key: \"raiseMarketUpdated\",\n    value: function raiseMarketUpdated(ids) {\n      this.emitter.emit(MarketUpdateEvent.type, new MarketUpdateEvent(ids));\n    }\n  }, {\n    key: \"raiseCacheUpdated\",\n    value: function raiseCacheUpdated(id, isNew, parser, isActive) {\n      this.emitter.emit(CacheUpdateEvent.type, new CacheUpdateEvent(id, isNew, parser, isActive));\n    }\n  }, {\n    key: \"raiseCacheDeleted\",\n    value: function raiseCacheDeleted(id) {\n      this.emitter.emit(CacheDeleteEvent.type, new CacheDeleteEvent(id));\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\nexports.EventEmitter = EventEmitter;","map":{"version":3,"sources":["../../../src/utils/eventEmitter.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,IAAA,eAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;IAEa,gB,6BAMX,0BAAY,EAAZ,EAAwB,KAAxB,EAAwC,MAAxC,EAAqD,QAArD,EAAsE;AAAA;;AACpE,OAAK,EAAL,GAAU,EAAV;AACA,OAAK,MAAL,GAAc,MAAd;AACA,OAAK,KAAL,GAAa,KAAb;AACA,OAAK,QAAL,GAAgB,QAAhB;AACD,C;;AAXH,OAAA,CAAA,gBAAA,GAAA,gBAAA;AACS,gBAAA,CAAA,IAAA,GAAO,aAAP;;IAaI,gB,6BAGX,0BAAY,EAAZ,EAAsB;AAAA;;AACpB,OAAK,EAAL,GAAU,EAAV;AACD,C;;AALH,OAAA,CAAA,gBAAA,GAAA,gBAAA;AACS,gBAAA,CAAA,IAAA,GAAO,aAAP;;IAOI,iB,6BAGX,2BAAY,GAAZ,EAA4B;AAAA;;AAC1B,OAAK,GAAL,GAAW,GAAX;AACD,C;;AALH,OAAA,CAAA,iBAAA,GAAA,iBAAA;AACS,iBAAA,CAAA,IAAA,GAAO,cAAP;;IAOI,Y;AAAb,0BAAA;AAAA;;AACU,SAAA,OAAA,GAAU,IAAI,eAAA,CAAA,YAAJ,EAAV;AAiCT;;;;WA/BC,kBAAS,QAAT,EAAoD;AAAA;;AAClD,WAAK,OAAL,CAAa,EAAb,CAAgB,iBAAiB,CAAC,IAAlC,EAAwC,QAAxC;AAEA,aAAO;AAAA,eAAM,KAAI,CAAC,OAAL,CAAa,cAAb,CAA4B,iBAAiB,CAAC,IAA9C,EAAoD,QAApD,CAAN;AAAA,OAAP;AACD;;;WAED,iBAAQ,QAAR,EAAkD;AAAA;;AAChD,WAAK,OAAL,CAAa,EAAb,CAAgB,gBAAgB,CAAC,IAAjC,EAAuC,QAAvC;AAEA,aAAO;AAAA,eAAM,MAAI,CAAC,OAAL,CAAa,cAAb,CAA4B,gBAAgB,CAAC,IAA7C,EAAmD,QAAnD,CAAN;AAAA,OAAP;AACD;;;WAED,4BAAmB,GAAnB,EAAmC;AACjC,WAAK,OAAL,CAAa,IAAb,CAAkB,iBAAiB,CAAC,IAApC,EAA0C,IAAI,iBAAJ,CAAsB,GAAtB,CAA1C;AACD;;;WAED,2BACE,EADF,EAEE,KAFF,EAGE,MAHF,EAIE,QAJF,EAImB;AAEjB,WAAK,OAAL,CAAa,IAAb,CACE,gBAAgB,CAAC,IADnB,EAEE,IAAI,gBAAJ,CAAqB,EAArB,EAAyB,KAAzB,EAAgC,MAAhC,EAAwC,QAAxC,CAFF;AAID;;;WAED,2BAAkB,EAAlB,EAA4B;AAC1B,WAAK,OAAL,CAAa,IAAb,CAAkB,gBAAgB,CAAC,IAAnC,EAAyC,IAAI,gBAAJ,CAAqB,EAArB,CAAzC;AACD;;;;;;AAjCH,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventEmitter = exports.MarketUpdateEvent = exports.CacheDeleteEvent = exports.CacheUpdateEvent = void 0;\r\nconst eventemitter3_1 = require(\"eventemitter3\");\r\nclass CacheUpdateEvent {\r\n    constructor(id, isNew, parser, isActive) {\r\n        this.id = id;\r\n        this.parser = parser;\r\n        this.isNew = isNew;\r\n        this.isActive = isActive;\r\n    }\r\n}\r\nexports.CacheUpdateEvent = CacheUpdateEvent;\r\nCacheUpdateEvent.type = 'CacheUpdate';\r\nclass CacheDeleteEvent {\r\n    constructor(id) {\r\n        this.id = id;\r\n    }\r\n}\r\nexports.CacheDeleteEvent = CacheDeleteEvent;\r\nCacheDeleteEvent.type = 'CacheUpdate';\r\nclass MarketUpdateEvent {\r\n    constructor(ids) {\r\n        this.ids = ids;\r\n    }\r\n}\r\nexports.MarketUpdateEvent = MarketUpdateEvent;\r\nMarketUpdateEvent.type = 'MarketUpdate';\r\nclass EventEmitter {\r\n    constructor() {\r\n        this.emitter = new eventemitter3_1.EventEmitter();\r\n    }\r\n    onMarket(callback) {\r\n        this.emitter.on(MarketUpdateEvent.type, callback);\r\n        return () => this.emitter.removeListener(MarketUpdateEvent.type, callback);\r\n    }\r\n    onCache(callback) {\r\n        this.emitter.on(CacheUpdateEvent.type, callback);\r\n        return () => this.emitter.removeListener(CacheUpdateEvent.type, callback);\r\n    }\r\n    raiseMarketUpdated(ids) {\r\n        this.emitter.emit(MarketUpdateEvent.type, new MarketUpdateEvent(ids));\r\n    }\r\n    raiseCacheUpdated(id, isNew, parser, isActive) {\r\n        this.emitter.emit(CacheUpdateEvent.type, new CacheUpdateEvent(id, isNew, parser, isActive));\r\n    }\r\n    raiseCacheDeleted(id) {\r\n        this.emitter.emit(CacheDeleteEvent.type, new CacheDeleteEvent(id));\r\n    }\r\n}\r\nexports.EventEmitter = EventEmitter;\r\n//# sourceMappingURL=eventEmitter.js.map"]},"metadata":{},"sourceType":"script"}