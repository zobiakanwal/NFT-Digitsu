{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _asyncToGenerator from\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\AHSAN PC\\\\Desktop\\\\digitsu\\\\gamp\\\\js\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{sleep}from'@oyster/common';import{Transaction}from'@solana/web3.js';import log from'loglevel';export var DEFAULT_TIMEOUT=15000;export var getUnixTs=function getUnixTs(){return new Date().getTime()/1000;};export var envFor=function envFor(connection){var endpoint=connection._rpcEndpoint;console.log(connection);var regex=/https:\\/\\/api.([^.]*).solana.com/;var match=endpoint.match(regex);if((match===null||match===void 0?void 0:match.length)>0){return match[1];}return'mainnet-beta';};export var explorerLinkFor=function explorerLinkFor(txid,connection){return\"https://explorer.solana.com/tx/\".concat(txid,\"?cluster=\").concat(envFor(connection));};export var sendTransactionWithRetryWithKeypair=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(connection,wallet,instructions,signers){var commitment,includesFeePayer,block,beforeSend,transaction,_yield$sendSignedTran,txid,slot,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:commitment=_args.length>4&&_args[4]!==undefined?_args[4]:'singleGossip';includesFeePayer=_args.length>5&&_args[5]!==undefined?_args[5]:false;block=_args.length>6?_args[6]:undefined;beforeSend=_args.length>7?_args[7]:undefined;transaction=new Transaction();instructions.forEach(function(instruction){return transaction.add(instruction);});_context.t0=block;if(_context.t0){_context.next=11;break;}_context.next=10;return connection.getRecentBlockhash(commitment);case 10:_context.t0=_context.sent;case 11:transaction.recentBlockhash=_context.t0.blockhash;if(includesFeePayer){transaction.setSigners.apply(transaction,_toConsumableArray(signers.map(function(s){return s.publicKey;})));}else{transaction.setSigners.apply(transaction,[// fee payed by the wallet owner\nwallet.publicKey].concat(_toConsumableArray(signers.map(function(s){return s.publicKey;}))));}if(signers.length>0){transaction.sign.apply(transaction,[wallet].concat(_toConsumableArray(signers)));}else{transaction.sign(wallet);}if(beforeSend){beforeSend();}_context.next=17;return sendSignedTransaction({connection:connection,signedTransaction:transaction});case 17:_yield$sendSignedTran=_context.sent;txid=_yield$sendSignedTran.txid;slot=_yield$sendSignedTran.slot;return _context.abrupt(\"return\",{txid:txid,slot:slot});case 21:case\"end\":return _context.stop();}}},_callee);}));return function sendTransactionWithRetryWithKeypair(_x,_x2,_x3,_x4){return _ref.apply(this,arguments);};}();export function sendSignedTransaction(_x5){return _sendSignedTransaction.apply(this,arguments);}function _sendSignedTransaction(){_sendSignedTransaction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref2){var signedTransaction,connection,_ref2$timeout,timeout,rawTransaction,startTime,slot,txid,done,confirmation,simulateResult,i,line;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:signedTransaction=_ref2.signedTransaction,connection=_ref2.connection,_ref2$timeout=_ref2.timeout,timeout=_ref2$timeout===void 0?DEFAULT_TIMEOUT:_ref2$timeout;rawTransaction=signedTransaction.serialize();startTime=getUnixTs();slot=0;_context3.next=6;return connection.sendRawTransaction(rawTransaction,{skipPreflight:true});case 6:txid=_context3.sent;log.debug('Started awaiting confirmation for',txid);done=false;_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(!done&&getUnixTs()-startTime<timeout)){_context2.next=6;break;}connection.sendRawTransaction(rawTransaction,{skipPreflight:true});_context2.next=4;return sleep(500);case 4:_context2.next=0;break;case 6:case\"end\":return _context2.stop();}}},_callee2);}))();_context3.prev=10;_context3.next=13;return awaitTransactionSignatureConfirmation(txid,timeout,connection,'confirmed',true);case 13:confirmation=_context3.sent;if(confirmation){_context3.next=16;break;}throw new Error('Timed out awaiting confirmation on transaction');case 16:if(!confirmation.err){_context3.next=19;break;}log.error(confirmation.err);throw new Error('Transaction failed: Custom instruction error');case 19:slot=(confirmation===null||confirmation===void 0?void 0:confirmation.slot)||0;_context3.next=48;break;case 22:_context3.prev=22;_context3.t0=_context3[\"catch\"](10);log.error('Timeout Error caught',_context3.t0);if(!_context3.t0.timeout){_context3.next=27;break;}throw new Error('Timed out awaiting confirmation on transaction');case 27:simulateResult=null;_context3.prev=28;_context3.next=31;return simulateTransaction(connection,signedTransaction,'single');case 31:simulateResult=_context3.sent.value;_context3.next=37;break;case 34:_context3.prev=34;_context3.t1=_context3[\"catch\"](28);log.error('Simulate Transaction error',_context3.t1);case 37:if(!(simulateResult&&simulateResult.err)){_context3.next=48;break;}if(!simulateResult.logs){_context3.next=47;break;}i=simulateResult.logs.length-1;case 40:if(!(i>=0)){_context3.next=47;break;}line=simulateResult.logs[i];if(!line.startsWith('Program log: ')){_context3.next=44;break;}throw new Error('Transaction failed: '+line.slice('Program log: '.length));case 44:--i;_context3.next=40;break;case 47:throw new Error(JSON.stringify(simulateResult.err));case 48:_context3.prev=48;done=true;return _context3.finish(48);case 51:log.debug('Latency (ms)',txid,getUnixTs()-startTime);return _context3.abrupt(\"return\",{txid:txid,slot:slot});case 53:case\"end\":return _context3.stop();}}},_callee3,null,[[10,22,48,51],[28,34]]);}));return _sendSignedTransaction.apply(this,arguments);}function simulateTransaction(_x6,_x7,_x8){return _simulateTransaction.apply(this,arguments);}function _simulateTransaction(){_simulateTransaction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(connection,transaction,commitment){var signData,wireTransaction,encodedTransaction,config,args,res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return connection._recentBlockhash(// @ts-ignore\nconnection._disableBlockhashCaching);case 2:transaction.recentBlockhash=_context4.sent;signData=transaction.serializeMessage();// @ts-ignore\nwireTransaction=transaction._serialize(signData);encodedTransaction=wireTransaction.toString('base64');config={encoding:'base64',commitment:commitment};args=[encodedTransaction,config];// @ts-ignore\n_context4.next=10;return connection._rpcRequest('simulateTransaction',args);case 10:res=_context4.sent;if(!res.error){_context4.next=13;break;}throw new Error('failed to simulate transaction: '+res.error.message);case 13:return _context4.abrupt(\"return\",res.result);case 14:case\"end\":return _context4.stop();}}},_callee4);}));return _simulateTransaction.apply(this,arguments);}export function awaitTransactionSignatureConfirmation(_x9,_x10,_x11){return _awaitTransactionSignatureConfirmation.apply(this,arguments);}function _awaitTransactionSignatureConfirmation(){_awaitTransactionSignatureConfirmation=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(txid,timeout,connection){var commitment,queryStatus,done,status,subId,_args7=arguments;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:commitment=_args7.length>3&&_args7[3]!==undefined?_args7[3]:'recent';queryStatus=_args7.length>4&&_args7[4]!==undefined?_args7[4]:false;done=false;status={slot:0,confirmations:0,err:null};subId=0;// eslint-disable-next-line no-async-promise-executor\n_context7.next=7;return new Promise(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(resolve,reject){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:setTimeout(function(){if(done){return;}done=true;log.warn('Rejecting for timeout...');reject({timeout:true});},timeout);try{subId=connection.onSignature(txid,function(result,context){done=true;status={err:result.err,slot:context.slot,confirmations:0};if(result.err){log.warn('Rejected via websocket',result.err);reject(status);}else{log.debug('Resolved via websocket',result);resolve(status);}},commitment);}catch(e){done=true;log.error('WS error in setup',txid,e);}case 2:if(!(!done&&queryStatus)){_context6.next=8;break;}// eslint-disable-next-line no-loop-func\n_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var signatureStatuses;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return connection.getSignatureStatuses([txid]);case 3:signatureStatuses=_context5.sent;status=signatureStatuses&&signatureStatuses.value[0];console.log(explorerLinkFor(txid,connection));if(!done){if(!status){log.debug('REST null result for',txid,status);}else if(status.err){log.error('REST error for',txid,status);done=true;reject(status.err);}else if(!status.confirmations){log.error('REST no confirmations for',txid,status);}else{log.debug('REST confirmation for',txid,status);done=true;resolve(status);}}_context5.next=12;break;case 9:_context5.prev=9;_context5.t0=_context5[\"catch\"](0);if(!done){log.error('REST connection error: txid',txid,_context5.t0);}case 12:case\"end\":return _context5.stop();}}},_callee5,null,[[0,9]]);}))();_context6.next=6;return sleep(2000);case 6:_context6.next=2;break;case 8:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x12,_x13){return _ref4.apply(this,arguments);};}());case 7:status=_context7.sent;//@ts-ignore\nif(connection._signatureSubscriptions[subId])connection.removeSignatureListener(subId);done=true;log.debug('Returning status',status);return _context7.abrupt(\"return\",status);case 12:case\"end\":return _context7.stop();}}},_callee7);}));return _awaitTransactionSignatureConfirmation.apply(this,arguments);}","map":{"version":3,"sources":["C:/Users/AHSAN PC/Desktop/digitsu/gamp/js/packages/gumdrop/src/utils/transactions.ts"],"names":["sleep","Transaction","log","DEFAULT_TIMEOUT","getUnixTs","Date","getTime","envFor","connection","endpoint","_rpcEndpoint","console","regex","match","length","explorerLinkFor","txid","sendTransactionWithRetryWithKeypair","wallet","instructions","signers","commitment","includesFeePayer","block","beforeSend","transaction","forEach","instruction","add","getRecentBlockhash","recentBlockhash","blockhash","setSigners","map","s","publicKey","sign","sendSignedTransaction","signedTransaction","slot","timeout","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","debug","done","awaitTransactionSignatureConfirmation","confirmation","Error","err","error","simulateResult","simulateTransaction","value","logs","i","line","startsWith","slice","JSON","stringify","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","toString","config","encoding","args","_rpcRequest","res","message","result","queryStatus","status","confirmations","subId","Promise","resolve","reject","setTimeout","warn","onSignature","context","e","getSignatureStatuses","signatureStatuses","_signatureSubscriptions","removeSignatureListener"],"mappings":"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","sourcesContent":["import { sleep } from '@oyster/common';\r\nimport {\r\n  Blockhash,\r\n  Commitment,\r\n  Connection,\r\n  FeeCalculator,\r\n  Keypair,\r\n  RpcResponseAndContext,\r\n  SignatureStatus,\r\n  SimulatedTransactionResponse,\r\n  Transaction,\r\n  TransactionInstruction,\r\n  TransactionSignature,\r\n} from '@solana/web3.js';\r\nimport log from 'loglevel';\r\n\r\ninterface BlockhashAndFeeCalculator {\r\n  blockhash: Blockhash;\r\n  feeCalculator: FeeCalculator;\r\n}\r\n\r\nexport const DEFAULT_TIMEOUT = 15000;\r\n\r\nexport const getUnixTs = () => {\r\n  return new Date().getTime() / 1000;\r\n};\r\n\r\nexport const envFor = (connection: Connection): string => {\r\n  const endpoint = (connection as any)._rpcEndpoint;\r\n  console.log(connection);\r\n  const regex = /https:\\/\\/api.([^.]*).solana.com/;\r\n  const match = endpoint.match(regex);\r\n  if (match?.length > 0) {\r\n    return match[1];\r\n  }\r\n  return 'mainnet-beta';\r\n};\r\n\r\nexport const explorerLinkFor = (\r\n  txid: TransactionSignature,\r\n  connection: Connection,\r\n): string => {\r\n  return `https://explorer.solana.com/tx/${txid}?cluster=${envFor(connection)}`;\r\n};\r\n\r\nexport const sendTransactionWithRetryWithKeypair = async (\r\n  connection: Connection,\r\n  wallet: Keypair,\r\n  instructions: TransactionInstruction[],\r\n  signers: Keypair[],\r\n  commitment: Commitment = 'singleGossip',\r\n  includesFeePayer: boolean = false,\r\n  block?: BlockhashAndFeeCalculator,\r\n  beforeSend?: () => void,\r\n) => {\r\n  const transaction = new Transaction();\r\n  instructions.forEach(instruction => transaction.add(instruction));\r\n  transaction.recentBlockhash = (\r\n    block || (await connection.getRecentBlockhash(commitment))\r\n  ).blockhash;\r\n\r\n  if (includesFeePayer) {\r\n    transaction.setSigners(...signers.map(s => s.publicKey));\r\n  } else {\r\n    transaction.setSigners(\r\n      // fee payed by the wallet owner\r\n      wallet.publicKey,\r\n      ...signers.map(s => s.publicKey),\r\n    );\r\n  }\r\n\r\n  if (signers.length > 0) {\r\n    transaction.sign(...[wallet, ...signers]);\r\n  } else {\r\n    transaction.sign(wallet);\r\n  }\r\n\r\n  if (beforeSend) {\r\n    beforeSend();\r\n  }\r\n\r\n  const { txid, slot } = await sendSignedTransaction({\r\n    connection,\r\n    signedTransaction: transaction,\r\n  });\r\n\r\n  return { txid, slot };\r\n};\r\n\r\nexport async function sendSignedTransaction({\r\n  signedTransaction,\r\n  connection,\r\n  timeout = DEFAULT_TIMEOUT,\r\n}: {\r\n  signedTransaction: Transaction;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}): Promise<{ txid: string; slot: number }> {\r\n  const rawTransaction = signedTransaction.serialize();\r\n  const startTime = getUnixTs();\r\n  let slot = 0;\r\n  const txid: TransactionSignature = await connection.sendRawTransaction(\r\n    rawTransaction,\r\n    {\r\n      skipPreflight: true,\r\n    },\r\n  );\r\n\r\n  log.debug('Started awaiting confirmation for', txid);\r\n\r\n  let done = false;\r\n  (async () => {\r\n    while (!done && getUnixTs() - startTime < timeout) {\r\n      connection.sendRawTransaction(rawTransaction, {\r\n        skipPreflight: true,\r\n      });\r\n      await sleep(500);\r\n    }\r\n  })();\r\n  try {\r\n    const confirmation = await awaitTransactionSignatureConfirmation(\r\n      txid,\r\n      timeout,\r\n      connection,\r\n      'confirmed',\r\n      true,\r\n    );\r\n\r\n    if (!confirmation)\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n\r\n    if (confirmation.err) {\r\n      log.error(confirmation.err);\r\n      throw new Error('Transaction failed: Custom instruction error');\r\n    }\r\n\r\n    slot = confirmation?.slot || 0;\r\n  } catch (err) {\r\n    log.error('Timeout Error caught', err);\r\n    if (err.timeout) {\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    }\r\n    let simulateResult: SimulatedTransactionResponse | null = null;\r\n    try {\r\n      simulateResult = (\r\n        await simulateTransaction(connection, signedTransaction, 'single')\r\n      ).value;\r\n    } catch (e) {\r\n      log.error('Simulate Transaction error', e);\r\n    }\r\n    if (simulateResult && simulateResult.err) {\r\n      if (simulateResult.logs) {\r\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\r\n          const line = simulateResult.logs[i];\r\n          if (line.startsWith('Program log: ')) {\r\n            throw new Error(\r\n              'Transaction failed: ' + line.slice('Program log: '.length),\r\n            );\r\n          }\r\n        }\r\n      }\r\n      throw new Error(JSON.stringify(simulateResult.err));\r\n    }\r\n    // throw new Error('Transaction failed');\r\n  } finally {\r\n    done = true;\r\n  }\r\n\r\n  log.debug('Latency (ms)', txid, getUnixTs() - startTime);\r\n  return { txid, slot };\r\n}\r\n\r\nasync function simulateTransaction(\r\n  connection: Connection,\r\n  transaction: Transaction,\r\n  commitment: Commitment,\r\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\r\n  // @ts-ignore\r\n  transaction.recentBlockhash = await connection._recentBlockhash(\r\n    // @ts-ignore\r\n    connection._disableBlockhashCaching,\r\n  );\r\n\r\n  const signData = transaction.serializeMessage();\r\n  // @ts-ignore\r\n  const wireTransaction = transaction._serialize(signData);\r\n  const encodedTransaction = wireTransaction.toString('base64');\r\n  const config: any = { encoding: 'base64', commitment };\r\n  const args = [encodedTransaction, config];\r\n\r\n  // @ts-ignore\r\n  const res = await connection._rpcRequest('simulateTransaction', args);\r\n  if (res.error) {\r\n    throw new Error('failed to simulate transaction: ' + res.error.message);\r\n  }\r\n  return res.result;\r\n}\r\n\r\nexport async function awaitTransactionSignatureConfirmation(\r\n  txid: TransactionSignature,\r\n  timeout: number,\r\n  connection: Connection,\r\n  commitment: Commitment = 'recent',\r\n  queryStatus = false,\r\n): Promise<SignatureStatus | null | void> {\r\n  let done = false;\r\n  let status: SignatureStatus | null | void = {\r\n    slot: 0,\r\n    confirmations: 0,\r\n    err: null,\r\n  };\r\n  let subId = 0;\r\n  // eslint-disable-next-line no-async-promise-executor\r\n  status = await new Promise(async (resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (done) {\r\n        return;\r\n      }\r\n      done = true;\r\n      log.warn('Rejecting for timeout...');\r\n      reject({ timeout: true });\r\n    }, timeout);\r\n    try {\r\n      subId = connection.onSignature(\r\n        txid,\r\n        (result, context) => {\r\n          done = true;\r\n          status = {\r\n            err: result.err,\r\n            slot: context.slot,\r\n            confirmations: 0,\r\n          };\r\n          if (result.err) {\r\n            log.warn('Rejected via websocket', result.err);\r\n            reject(status);\r\n          } else {\r\n            log.debug('Resolved via websocket', result);\r\n            resolve(status);\r\n          }\r\n        },\r\n        commitment,\r\n      );\r\n    } catch (e) {\r\n      done = true;\r\n      log.error('WS error in setup', txid, e);\r\n    }\r\n    while (!done && queryStatus) {\r\n      // eslint-disable-next-line no-loop-func\r\n      (async () => {\r\n        try {\r\n          const signatureStatuses = await connection.getSignatureStatuses([\r\n            txid,\r\n          ]);\r\n          status = signatureStatuses && signatureStatuses.value[0];\r\n          console.log(explorerLinkFor(txid, connection));\r\n          if (!done) {\r\n            if (!status) {\r\n              log.debug('REST null result for', txid, status);\r\n            } else if (status.err) {\r\n              log.error('REST error for', txid, status);\r\n              done = true;\r\n              reject(status.err);\r\n            } else if (!status.confirmations) {\r\n              log.error('REST no confirmations for', txid, status);\r\n            } else {\r\n              log.debug('REST confirmation for', txid, status);\r\n              done = true;\r\n              resolve(status);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          if (!done) {\r\n            log.error('REST connection error: txid', txid, e);\r\n          }\r\n        }\r\n      })();\r\n      await sleep(2000);\r\n    }\r\n  });\r\n\r\n  //@ts-ignore\r\n  if (connection._signatureSubscriptions[subId])\r\n    connection.removeSignatureListener(subId);\r\n  done = true;\r\n  log.debug('Returning status', status);\r\n  return status;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}