{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar request = require('axios');\n\nvar assert = require('assert');\n\nvar debug = require('debug')('arweave-cost');\n\nvar ARWEAVE_URL = 'https://arweave.net';\nvar CONVERSION_RATES_URL = 'https://api.coingecko.com/api/v3/simple/price?ids=solana,arweave&vs_currencies=usd';\nvar WINSTON_MULTIPLIER = Math.pow(10, 12);\n\nvar toInt = function toInt(val) {\n  return parseInt(val, 10);\n};\n/**\n * Cache promise results for 30 seconds\n */\n\n\nvar promiseCacheMs = 30000;\nexport var _setCacheMs = function _setCacheMs(ms) {\n  return promiseCacheMs = ms;\n};\nexport var _promiseMap = new Map();\n\nvar memoPromise = function memoPromise(method, args) {\n  var key = \"\" + method.toString() + JSON.stringify(args);\n\n  if (_promiseMap.has(key)) {\n    return _promiseMap.get(key);\n  }\n\n  var promise = new Promise(function (resolve, reject) {\n    return method.apply(void 0, args).catch(function (err) {\n      _promiseMap.delete(method);\n\n      reject(err);\n    }).then(resolve);\n  }); // cache for the configured time\n\n  _promiseMap.set(key, promise);\n\n  var timer = setTimeout(function () {\n    _promiseMap.delete(key);\n  }, promiseCacheMs); // allow program exit while timer is active\n\n  if (timer.unref) {\n    timer.unref();\n  }\n\n  return promise;\n};\n\nvar memoize = function memoize(asyncFn) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var result = memoPromise(asyncFn, args);\n    return result;\n  };\n};\n\nexport var fetchTokenPrices = memoize(function () {\n  return request(CONVERSION_RATES_URL).then(function (response) {\n    var _a, _b;\n\n    var body = response.data;\n\n    if (!(((_a = body.arweave) === null || _a === void 0 ? void 0 : _a.usd) && ((_b = body.solana) === null || _b === void 0 ? void 0 : _b.usd))) {\n      debug('Invalid coingecko response', body);\n      throw new Error('Invalid response from coingecko');\n    }\n\n    return body;\n  });\n});\nexport var fetchArweaveStorageCost = memoize(function (totalBytes) {\n  assert(Number.isFinite(totalBytes), \"Invalid argument: totalBytes. Received: \" + totalBytes);\n  return request(ARWEAVE_URL + \"/price/\" + totalBytes).then(function (response) {\n    return toInt(response.data);\n  });\n});\n\nvar validate = function validate(fileSizes) {\n  assert(Array.isArray(fileSizes) && fileSizes.length > 0 && fileSizes.every(function (k) {\n    return Number(k) === k && !isNaN(k) && k >= 0 && isFinite(k);\n  }), 'Invalid argument: fileSizes must be an array of integers');\n};\n\nvar kb = function kb(kilobytes) {\n  return kilobytes * 1024;\n};\n\nvar MINIMUM_WINSTON_FEE = 10000000; // 0.00001 AR\n\nvar AR_FEE_MULTIPLIER = 15 / 100; // 15%\n\n/**\n * 15% fee on top of storage cost or 0.00001 AR minimum for files < 100kb\n *\n * https://ardrive.atlassian.net/wiki/spaces/help/pages/86376465/Fees\n */\n\nvar calculateFee = function calculateFee(totalBytes, storageCost) {\n  var fee = totalBytes < kb(100) ? MINIMUM_WINSTON_FEE : storageCost * AR_FEE_MULTIPLIER;\n  return fee;\n}; // test this. Then make public. Then pull into arweave cloud fn and metaplex\n\n\nexport var calculate = function calculate(fileSizes) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var totalBytes, _a, conversionRates, byteCost, fee, totalWinstonCost, totalArCost, arweavePrice, solanaPrice, exchangeRate;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          validate(fileSizes);\n          totalBytes = fileSizes.reduce(function (sum, fileSize) {\n            return sum += fileSize;\n          }, 0);\n          return [4\n          /*yield*/\n          , Promise.all([fetchTokenPrices(), fetchArweaveStorageCost(totalBytes)])];\n\n        case 1:\n          _a = _b.sent(), conversionRates = _a[0], byteCost = _a[1];\n          fee = calculateFee(totalBytes, byteCost);\n          totalWinstonCost = byteCost + fee;\n          totalArCost = totalWinstonCost / WINSTON_MULTIPLIER;\n          arweavePrice = conversionRates.arweave.usd;\n          solanaPrice = conversionRates.solana.usd;\n          exchangeRate = arweavePrice / solanaPrice;\n          debug('%j', {\n            arweaveRate: arweavePrice,\n            solanaRate: solanaPrice,\n            exchangeRate: exchangeRate,\n            byteCost: byteCost,\n            WINSTON_MULTIPLIER: WINSTON_MULTIPLIER,\n            fee: fee,\n            totalWinstonCost: totalWinstonCost,\n            totalArCost: totalArCost,\n            totalBytes: totalBytes\n          });\n          return [2\n          /*return*/\n          , {\n            arweave: totalArCost,\n            solana: totalArCost * exchangeRate,\n            arweavePrice: arweavePrice,\n            solanaPrice: solanaPrice,\n            exchangeRate: exchangeRate,\n            byteCost: byteCost,\n            totalBytes: totalBytes,\n            fee: fee\n          }];\n      }\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/AHSAN PC/Desktop/digitsu/gamp/js/node_modules/@metaplex/arweave-cost/dist/esm/index.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","request","require","assert","debug","ARWEAVE_URL","CONVERSION_RATES_URL","WINSTON_MULTIPLIER","Math","pow","toInt","val","parseInt","promiseCacheMs","_setCacheMs","ms","_promiseMap","Map","memoPromise","method","args","key","toString","JSON","stringify","has","get","promise","catch","err","delete","set","timer","setTimeout","unref","memoize","asyncFn","_i","arguments","fetchTokenPrices","response","_a","_b","data","arweave","usd","solana","Error","fetchArweaveStorageCost","totalBytes","Number","isFinite","validate","fileSizes","Array","isArray","every","k","isNaN","kb","kilobytes","MINIMUM_WINSTON_FEE","AR_FEE_MULTIPLIER","calculateFee","storageCost","fee","calculate","conversionRates","byteCost","totalWinstonCost","totalArCost","arweavePrice","solanaPrice","exchangeRate","reduce","sum","fileSize","all","arweaveRate","solanaRate"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar request = require('axios');\nvar assert = require('assert');\nvar debug = require('debug')('arweave-cost');\nvar ARWEAVE_URL = 'https://arweave.net';\nvar CONVERSION_RATES_URL = 'https://api.coingecko.com/api/v3/simple/price?ids=solana,arweave&vs_currencies=usd';\nvar WINSTON_MULTIPLIER = Math.pow(10, 12);\nvar toInt = function (val) { return parseInt(val, 10); };\n/**\n * Cache promise results for 30 seconds\n */\nvar promiseCacheMs = 30000;\nexport var _setCacheMs = function (ms) { return promiseCacheMs = ms; };\nexport var _promiseMap = new Map();\nvar memoPromise = function (method, args) {\n    var key = \"\" + method.toString() + JSON.stringify(args);\n    if (_promiseMap.has(key)) {\n        return _promiseMap.get(key);\n    }\n    var promise = new Promise(function (resolve, reject) {\n        return method.apply(void 0, args).catch(function (err) {\n            _promiseMap.delete(method);\n            reject(err);\n        }).then(resolve);\n    });\n    // cache for the configured time\n    _promiseMap.set(key, promise);\n    var timer = setTimeout(function () {\n        _promiseMap.delete(key);\n    }, promiseCacheMs);\n    // allow program exit while timer is active\n    if (timer.unref) {\n        timer.unref();\n    }\n    return promise;\n};\nvar memoize = function (asyncFn) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var result = memoPromise(asyncFn, args);\n        return result;\n    };\n};\nexport var fetchTokenPrices = memoize(function () {\n    return request(CONVERSION_RATES_URL).then(function (response) {\n        var _a, _b;\n        var body = response.data;\n        if (!(((_a = body.arweave) === null || _a === void 0 ? void 0 : _a.usd) && ((_b = body.solana) === null || _b === void 0 ? void 0 : _b.usd))) {\n            debug('Invalid coingecko response', body);\n            throw new Error('Invalid response from coingecko');\n        }\n        return body;\n    });\n});\nexport var fetchArweaveStorageCost = memoize(function (totalBytes) {\n    assert(Number.isFinite(totalBytes), \"Invalid argument: totalBytes. Received: \" + totalBytes);\n    return request(ARWEAVE_URL + \"/price/\" + totalBytes).then(function (response) { return toInt(response.data); });\n});\nvar validate = function (fileSizes) {\n    assert(Array.isArray(fileSizes) && fileSizes.length > 0 && fileSizes.every(function (k) {\n        return Number(k) === k && !isNaN(k) && k >= 0 && isFinite(k);\n    }), 'Invalid argument: fileSizes must be an array of integers');\n};\nvar kb = function (kilobytes) { return kilobytes * 1024; };\nvar MINIMUM_WINSTON_FEE = 10000000; // 0.00001 AR\nvar AR_FEE_MULTIPLIER = 15 / 100; // 15%\n/**\n * 15% fee on top of storage cost or 0.00001 AR minimum for files < 100kb\n *\n * https://ardrive.atlassian.net/wiki/spaces/help/pages/86376465/Fees\n */\nvar calculateFee = function (totalBytes, storageCost) {\n    var fee = totalBytes < kb(100) ? MINIMUM_WINSTON_FEE :\n        storageCost * AR_FEE_MULTIPLIER;\n    return fee;\n};\n// test this. Then make public. Then pull into arweave cloud fn and metaplex\nexport var calculate = function (fileSizes) { return __awaiter(void 0, void 0, void 0, function () {\n    var totalBytes, _a, conversionRates, byteCost, fee, totalWinstonCost, totalArCost, arweavePrice, solanaPrice, exchangeRate;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                validate(fileSizes);\n                totalBytes = fileSizes.reduce(function (sum, fileSize) {\n                    return sum += fileSize;\n                }, 0);\n                return [4 /*yield*/, Promise.all([\n                        fetchTokenPrices(),\n                        fetchArweaveStorageCost(totalBytes)\n                    ])];\n            case 1:\n                _a = _b.sent(), conversionRates = _a[0], byteCost = _a[1];\n                fee = calculateFee(totalBytes, byteCost);\n                totalWinstonCost = byteCost + fee;\n                totalArCost = totalWinstonCost / WINSTON_MULTIPLIER;\n                arweavePrice = conversionRates.arweave.usd;\n                solanaPrice = conversionRates.solana.usd;\n                exchangeRate = arweavePrice / solanaPrice;\n                debug('%j', {\n                    arweaveRate: arweavePrice,\n                    solanaRate: solanaPrice,\n                    exchangeRate: exchangeRate,\n                    byteCost: byteCost,\n                    WINSTON_MULTIPLIER: WINSTON_MULTIPLIER,\n                    fee: fee,\n                    totalWinstonCost: totalWinstonCost,\n                    totalArCost: totalArCost,\n                    totalBytes: totalBytes\n                });\n                return [2 /*return*/, {\n                        arweave: totalArCost,\n                        solana: totalArCost * exchangeRate,\n                        arweavePrice: arweavePrice,\n                        solanaPrice: solanaPrice,\n                        exchangeRate: exchangeRate,\n                        byteCost: byteCost,\n                        totalBytes: totalBytes,\n                        fee: fee\n                    }];\n        }\n    });\n}); };\n"]},"metadata":{},"sourceType":"module"}