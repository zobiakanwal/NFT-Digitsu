{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { expectBoolean as __expectBoolean, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectObject as __expectObject, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, limitedParseDouble as __limitedParseDouble, parseEpochTimestamp as __parseEpochTimestamp } from \"@aws-sdk/smithy-client\";\nexport var serializeAws_restJson1CreateConfigurationSetCommand = function serializeAws_restJson1CreateConfigurationSetCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/configuration-sets\";\n          body = JSON.stringify(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.ConfigurationSetName !== undefined && input.ConfigurationSetName !== null && {\n            ConfigurationSetName: input.ConfigurationSetName\n          }), input.DeliveryOptions !== undefined && input.DeliveryOptions !== null && {\n            DeliveryOptions: serializeAws_restJson1DeliveryOptions(input.DeliveryOptions, context)\n          }), input.ReputationOptions !== undefined && input.ReputationOptions !== null && {\n            ReputationOptions: serializeAws_restJson1ReputationOptions(input.ReputationOptions, context)\n          }), input.SendingOptions !== undefined && input.SendingOptions !== null && {\n            SendingOptions: serializeAws_restJson1SendingOptions(input.SendingOptions, context)\n          }), input.SuppressionOptions !== undefined && input.SuppressionOptions !== null && {\n            SuppressionOptions: serializeAws_restJson1SuppressionOptions(input.SuppressionOptions, context)\n          }), input.Tags !== undefined && input.Tags !== null && {\n            Tags: serializeAws_restJson1TagList(input.Tags, context)\n          }), input.TrackingOptions !== undefined && input.TrackingOptions !== null && {\n            TrackingOptions: serializeAws_restJson1TrackingOptions(input.TrackingOptions, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateConfigurationSetEventDestinationCommand = function serializeAws_restJson1CreateConfigurationSetEventDestinationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/configuration-sets/{ConfigurationSetName}/event-destinations\";\n\n          if (input.ConfigurationSetName !== undefined) {\n            labelValue = input.ConfigurationSetName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n          }\n\n          body = JSON.stringify(__assign(__assign({}, input.EventDestination !== undefined && input.EventDestination !== null && {\n            EventDestination: serializeAws_restJson1EventDestinationDefinition(input.EventDestination, context)\n          }), input.EventDestinationName !== undefined && input.EventDestinationName !== null && {\n            EventDestinationName: input.EventDestinationName\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateContactCommand = function serializeAws_restJson1CreateContactCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/contact-lists/{ContactListName}/contacts\";\n\n          if (input.ContactListName !== undefined) {\n            labelValue = input.ContactListName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n          }\n\n          body = JSON.stringify(__assign(__assign(__assign(__assign({}, input.AttributesData !== undefined && input.AttributesData !== null && {\n            AttributesData: input.AttributesData\n          }), input.EmailAddress !== undefined && input.EmailAddress !== null && {\n            EmailAddress: input.EmailAddress\n          }), input.TopicPreferences !== undefined && input.TopicPreferences !== null && {\n            TopicPreferences: serializeAws_restJson1TopicPreferenceList(input.TopicPreferences, context)\n          }), input.UnsubscribeAll !== undefined && input.UnsubscribeAll !== null && {\n            UnsubscribeAll: input.UnsubscribeAll\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateContactListCommand = function serializeAws_restJson1CreateContactListCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/contact-lists\";\n          body = JSON.stringify(__assign(__assign(__assign(__assign({}, input.ContactListName !== undefined && input.ContactListName !== null && {\n            ContactListName: input.ContactListName\n          }), input.Description !== undefined && input.Description !== null && {\n            Description: input.Description\n          }), input.Tags !== undefined && input.Tags !== null && {\n            Tags: serializeAws_restJson1TagList(input.Tags, context)\n          }), input.Topics !== undefined && input.Topics !== null && {\n            Topics: serializeAws_restJson1Topics(input.Topics, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateCustomVerificationEmailTemplateCommand = function serializeAws_restJson1CreateCustomVerificationEmailTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/custom-verification-email-templates\";\n          body = JSON.stringify(__assign(__assign(__assign(__assign(__assign(__assign({}, input.FailureRedirectionURL !== undefined && input.FailureRedirectionURL !== null && {\n            FailureRedirectionURL: input.FailureRedirectionURL\n          }), input.FromEmailAddress !== undefined && input.FromEmailAddress !== null && {\n            FromEmailAddress: input.FromEmailAddress\n          }), input.SuccessRedirectionURL !== undefined && input.SuccessRedirectionURL !== null && {\n            SuccessRedirectionURL: input.SuccessRedirectionURL\n          }), input.TemplateContent !== undefined && input.TemplateContent !== null && {\n            TemplateContent: input.TemplateContent\n          }), input.TemplateName !== undefined && input.TemplateName !== null && {\n            TemplateName: input.TemplateName\n          }), input.TemplateSubject !== undefined && input.TemplateSubject !== null && {\n            TemplateSubject: input.TemplateSubject\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateDedicatedIpPoolCommand = function serializeAws_restJson1CreateDedicatedIpPoolCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/dedicated-ip-pools\";\n          body = JSON.stringify(__assign(__assign({}, input.PoolName !== undefined && input.PoolName !== null && {\n            PoolName: input.PoolName\n          }), input.Tags !== undefined && input.Tags !== null && {\n            Tags: serializeAws_restJson1TagList(input.Tags, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateDeliverabilityTestReportCommand = function serializeAws_restJson1CreateDeliverabilityTestReportCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/deliverability-dashboard/test\";\n          body = JSON.stringify(__assign(__assign(__assign(__assign({}, input.Content !== undefined && input.Content !== null && {\n            Content: serializeAws_restJson1EmailContent(input.Content, context)\n          }), input.FromEmailAddress !== undefined && input.FromEmailAddress !== null && {\n            FromEmailAddress: input.FromEmailAddress\n          }), input.ReportName !== undefined && input.ReportName !== null && {\n            ReportName: input.ReportName\n          }), input.Tags !== undefined && input.Tags !== null && {\n            Tags: serializeAws_restJson1TagList(input.Tags, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateEmailIdentityCommand = function serializeAws_restJson1CreateEmailIdentityCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities\";\n          body = JSON.stringify(__assign(__assign(__assign(__assign({}, input.ConfigurationSetName !== undefined && input.ConfigurationSetName !== null && {\n            ConfigurationSetName: input.ConfigurationSetName\n          }), input.DkimSigningAttributes !== undefined && input.DkimSigningAttributes !== null && {\n            DkimSigningAttributes: serializeAws_restJson1DkimSigningAttributes(input.DkimSigningAttributes, context)\n          }), input.EmailIdentity !== undefined && input.EmailIdentity !== null && {\n            EmailIdentity: input.EmailIdentity\n          }), input.Tags !== undefined && input.Tags !== null && {\n            Tags: serializeAws_restJson1TagList(input.Tags, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateEmailIdentityPolicyCommand = function serializeAws_restJson1CreateEmailIdentityPolicyCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities/{EmailIdentity}/policies/{PolicyName}\";\n\n          if (input.EmailIdentity !== undefined) {\n            labelValue = input.EmailIdentity;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n          }\n\n          if (input.PolicyName !== undefined) {\n            labelValue = input.PolicyName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: PolicyName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{PolicyName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: PolicyName.\");\n          }\n\n          body = JSON.stringify(__assign({}, input.Policy !== undefined && input.Policy !== null && {\n            Policy: input.Policy\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateEmailTemplateCommand = function serializeAws_restJson1CreateEmailTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/templates\";\n          body = JSON.stringify(__assign(__assign({}, input.TemplateContent !== undefined && input.TemplateContent !== null && {\n            TemplateContent: serializeAws_restJson1EmailTemplateContent(input.TemplateContent, context)\n          }), input.TemplateName !== undefined && input.TemplateName !== null && {\n            TemplateName: input.TemplateName\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateImportJobCommand = function serializeAws_restJson1CreateImportJobCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/import-jobs\";\n          body = JSON.stringify(__assign(__assign({}, input.ImportDataSource !== undefined && input.ImportDataSource !== null && {\n            ImportDataSource: serializeAws_restJson1ImportDataSource(input.ImportDataSource, context)\n          }), input.ImportDestination !== undefined && input.ImportDestination !== null && {\n            ImportDestination: serializeAws_restJson1ImportDestination(input.ImportDestination, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteConfigurationSetCommand = function serializeAws_restJson1DeleteConfigurationSetCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/configuration-sets/{ConfigurationSetName}\";\n\n          if (input.ConfigurationSetName !== undefined) {\n            labelValue = input.ConfigurationSetName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteConfigurationSetEventDestinationCommand = function serializeAws_restJson1DeleteConfigurationSetEventDestinationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}\";\n\n          if (input.ConfigurationSetName !== undefined) {\n            labelValue = input.ConfigurationSetName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n          }\n\n          if (input.EventDestinationName !== undefined) {\n            labelValue = input.EventDestinationName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EventDestinationName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EventDestinationName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EventDestinationName.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteContactCommand = function serializeAws_restJson1DeleteContactCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/contact-lists/{ContactListName}/contacts/{EmailAddress}\";\n\n          if (input.ContactListName !== undefined) {\n            labelValue = input.ContactListName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n          }\n\n          if (input.EmailAddress !== undefined) {\n            labelValue = input.EmailAddress;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailAddress.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailAddress}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailAddress.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteContactListCommand = function serializeAws_restJson1DeleteContactListCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/contact-lists/{ContactListName}\";\n\n          if (input.ContactListName !== undefined) {\n            labelValue = input.ContactListName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteCustomVerificationEmailTemplateCommand = function serializeAws_restJson1DeleteCustomVerificationEmailTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/custom-verification-email-templates/{TemplateName}\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteDedicatedIpPoolCommand = function serializeAws_restJson1DeleteDedicatedIpPoolCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/dedicated-ip-pools/{PoolName}\";\n\n          if (input.PoolName !== undefined) {\n            labelValue = input.PoolName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: PoolName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{PoolName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: PoolName.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteEmailIdentityCommand = function serializeAws_restJson1DeleteEmailIdentityCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities/{EmailIdentity}\";\n\n          if (input.EmailIdentity !== undefined) {\n            labelValue = input.EmailIdentity;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteEmailIdentityPolicyCommand = function serializeAws_restJson1DeleteEmailIdentityPolicyCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities/{EmailIdentity}/policies/{PolicyName}\";\n\n          if (input.EmailIdentity !== undefined) {\n            labelValue = input.EmailIdentity;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n          }\n\n          if (input.PolicyName !== undefined) {\n            labelValue = input.PolicyName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: PolicyName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{PolicyName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: PolicyName.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteEmailTemplateCommand = function serializeAws_restJson1DeleteEmailTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/templates/{TemplateName}\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteSuppressedDestinationCommand = function serializeAws_restJson1DeleteSuppressedDestinationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/suppression/addresses/{EmailAddress}\";\n\n          if (input.EmailAddress !== undefined) {\n            labelValue = input.EmailAddress;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailAddress.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailAddress}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailAddress.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetAccountCommand = function serializeAws_restJson1GetAccountCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/account\";\n          body = \"\";\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetBlacklistReportsCommand = function serializeAws_restJson1GetBlacklistReportsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/deliverability-dashboard/blacklist-report\";\n          query = __assign({}, input.BlacklistItemNames !== undefined && {\n            BlacklistItemNames: (input.BlacklistItemNames || []).map(function (_entry) {\n              return _entry;\n            })\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetConfigurationSetCommand = function serializeAws_restJson1GetConfigurationSetCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/configuration-sets/{ConfigurationSetName}\";\n\n          if (input.ConfigurationSetName !== undefined) {\n            labelValue = input.ConfigurationSetName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetConfigurationSetEventDestinationsCommand = function serializeAws_restJson1GetConfigurationSetEventDestinationsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/configuration-sets/{ConfigurationSetName}/event-destinations\";\n\n          if (input.ConfigurationSetName !== undefined) {\n            labelValue = input.ConfigurationSetName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetContactCommand = function serializeAws_restJson1GetContactCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/contact-lists/{ContactListName}/contacts/{EmailAddress}\";\n\n          if (input.ContactListName !== undefined) {\n            labelValue = input.ContactListName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n          }\n\n          if (input.EmailAddress !== undefined) {\n            labelValue = input.EmailAddress;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailAddress.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailAddress}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailAddress.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetContactListCommand = function serializeAws_restJson1GetContactListCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/contact-lists/{ContactListName}\";\n\n          if (input.ContactListName !== undefined) {\n            labelValue = input.ContactListName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCustomVerificationEmailTemplateCommand = function serializeAws_restJson1GetCustomVerificationEmailTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/custom-verification-email-templates/{TemplateName}\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetDedicatedIpCommand = function serializeAws_restJson1GetDedicatedIpCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/dedicated-ips/{Ip}\";\n\n          if (input.Ip !== undefined) {\n            labelValue = input.Ip;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Ip.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Ip}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Ip.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetDedicatedIpsCommand = function serializeAws_restJson1GetDedicatedIpsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/dedicated-ips\";\n          query = __assign(__assign(__assign({}, input.PoolName !== undefined && {\n            PoolName: input.PoolName\n          }), input.NextToken !== undefined && {\n            NextToken: input.NextToken\n          }), input.PageSize !== undefined && {\n            PageSize: input.PageSize.toString()\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetDeliverabilityDashboardOptionsCommand = function serializeAws_restJson1GetDeliverabilityDashboardOptionsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/deliverability-dashboard\";\n          body = \"\";\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetDeliverabilityTestReportCommand = function serializeAws_restJson1GetDeliverabilityTestReportCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/deliverability-dashboard/test-reports/{ReportId}\";\n\n          if (input.ReportId !== undefined) {\n            labelValue = input.ReportId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ReportId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ReportId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ReportId.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetDomainDeliverabilityCampaignCommand = function serializeAws_restJson1GetDomainDeliverabilityCampaignCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/deliverability-dashboard/campaigns/{CampaignId}\";\n\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetDomainStatisticsReportCommand = function serializeAws_restJson1GetDomainStatisticsReportCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/deliverability-dashboard/statistics-report/{Domain}\";\n\n          if (input.Domain !== undefined) {\n            labelValue = input.Domain;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Domain.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Domain}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Domain.\");\n          }\n\n          query = __assign(__assign({}, input.StartDate !== undefined && {\n            StartDate: (input.StartDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.EndDate !== undefined && {\n            EndDate: (input.EndDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetEmailIdentityCommand = function serializeAws_restJson1GetEmailIdentityCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities/{EmailIdentity}\";\n\n          if (input.EmailIdentity !== undefined) {\n            labelValue = input.EmailIdentity;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetEmailIdentityPoliciesCommand = function serializeAws_restJson1GetEmailIdentityPoliciesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities/{EmailIdentity}/policies\";\n\n          if (input.EmailIdentity !== undefined) {\n            labelValue = input.EmailIdentity;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetEmailTemplateCommand = function serializeAws_restJson1GetEmailTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/templates/{TemplateName}\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetImportJobCommand = function serializeAws_restJson1GetImportJobCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/import-jobs/{JobId}\";\n\n          if (input.JobId !== undefined) {\n            labelValue = input.JobId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JobId.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSuppressedDestinationCommand = function serializeAws_restJson1GetSuppressedDestinationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/suppression/addresses/{EmailAddress}\";\n\n          if (input.EmailAddress !== undefined) {\n            labelValue = input.EmailAddress;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailAddress.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailAddress}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailAddress.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListConfigurationSetsCommand = function serializeAws_restJson1ListConfigurationSetsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/configuration-sets\";\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            NextToken: input.NextToken\n          }), input.PageSize !== undefined && {\n            PageSize: input.PageSize.toString()\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListContactListsCommand = function serializeAws_restJson1ListContactListsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/contact-lists\";\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            PageSize: input.PageSize.toString()\n          }), input.NextToken !== undefined && {\n            NextToken: input.NextToken\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListContactsCommand = function serializeAws_restJson1ListContactsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/contact-lists/{ContactListName}/contacts\";\n\n          if (input.ContactListName !== undefined) {\n            labelValue = input.ContactListName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            PageSize: input.PageSize.toString()\n          }), input.NextToken !== undefined && {\n            NextToken: input.NextToken\n          });\n          body = JSON.stringify(__assign({}, input.Filter !== undefined && input.Filter !== null && {\n            Filter: serializeAws_restJson1ListContactsFilter(input.Filter, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListCustomVerificationEmailTemplatesCommand = function serializeAws_restJson1ListCustomVerificationEmailTemplatesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/custom-verification-email-templates\";\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            NextToken: input.NextToken\n          }), input.PageSize !== undefined && {\n            PageSize: input.PageSize.toString()\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListDedicatedIpPoolsCommand = function serializeAws_restJson1ListDedicatedIpPoolsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/dedicated-ip-pools\";\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            NextToken: input.NextToken\n          }), input.PageSize !== undefined && {\n            PageSize: input.PageSize.toString()\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListDeliverabilityTestReportsCommand = function serializeAws_restJson1ListDeliverabilityTestReportsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/deliverability-dashboard/test-reports\";\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            NextToken: input.NextToken\n          }), input.PageSize !== undefined && {\n            PageSize: input.PageSize.toString()\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListDomainDeliverabilityCampaignsCommand = function serializeAws_restJson1ListDomainDeliverabilityCampaignsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/deliverability-dashboard/domains/{SubscribedDomain}/campaigns\";\n\n          if (input.SubscribedDomain !== undefined) {\n            labelValue = input.SubscribedDomain;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SubscribedDomain.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{SubscribedDomain}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SubscribedDomain.\");\n          }\n\n          query = __assign(__assign(__assign(__assign({}, input.StartDate !== undefined && {\n            StartDate: (input.StartDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.EndDate !== undefined && {\n            EndDate: (input.EndDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.NextToken !== undefined && {\n            NextToken: input.NextToken\n          }), input.PageSize !== undefined && {\n            PageSize: input.PageSize.toString()\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListEmailIdentitiesCommand = function serializeAws_restJson1ListEmailIdentitiesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities\";\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            NextToken: input.NextToken\n          }), input.PageSize !== undefined && {\n            PageSize: input.PageSize.toString()\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListEmailTemplatesCommand = function serializeAws_restJson1ListEmailTemplatesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/templates\";\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            NextToken: input.NextToken\n          }), input.PageSize !== undefined && {\n            PageSize: input.PageSize.toString()\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListImportJobsCommand = function serializeAws_restJson1ListImportJobsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/import-jobs\";\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            NextToken: input.NextToken\n          }), input.PageSize !== undefined && {\n            PageSize: input.PageSize.toString()\n          });\n          body = JSON.stringify(__assign({}, input.ImportDestinationType !== undefined && input.ImportDestinationType !== null && {\n            ImportDestinationType: input.ImportDestinationType\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListSuppressedDestinationsCommand = function serializeAws_restJson1ListSuppressedDestinationsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/suppression/addresses\";\n          query = __assign(__assign(__assign(__assign(__assign({}, input.Reasons !== undefined && {\n            Reason: (input.Reasons || []).map(function (_entry) {\n              return _entry;\n            })\n          }), input.StartDate !== undefined && {\n            StartDate: (input.StartDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.EndDate !== undefined && {\n            EndDate: (input.EndDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.NextToken !== undefined && {\n            NextToken: input.NextToken\n          }), input.PageSize !== undefined && {\n            PageSize: input.PageSize.toString()\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListTagsForResourceCommand = function serializeAws_restJson1ListTagsForResourceCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/tags\";\n          query = __assign({}, input.ResourceArn !== undefined && {\n            ResourceArn: input.ResourceArn\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutAccountDedicatedIpWarmupAttributesCommand = function serializeAws_restJson1PutAccountDedicatedIpWarmupAttributesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/account/dedicated-ips/warmup\";\n          body = JSON.stringify(__assign({}, input.AutoWarmupEnabled !== undefined && input.AutoWarmupEnabled !== null && {\n            AutoWarmupEnabled: input.AutoWarmupEnabled\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutAccountDetailsCommand = function serializeAws_restJson1PutAccountDetailsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/account/details\";\n          body = JSON.stringify(__assign(__assign(__assign(__assign(__assign(__assign({}, input.AdditionalContactEmailAddresses !== undefined && input.AdditionalContactEmailAddresses !== null && {\n            AdditionalContactEmailAddresses: serializeAws_restJson1AdditionalContactEmailAddresses(input.AdditionalContactEmailAddresses, context)\n          }), input.ContactLanguage !== undefined && input.ContactLanguage !== null && {\n            ContactLanguage: input.ContactLanguage\n          }), input.MailType !== undefined && input.MailType !== null && {\n            MailType: input.MailType\n          }), input.ProductionAccessEnabled !== undefined && input.ProductionAccessEnabled !== null && {\n            ProductionAccessEnabled: input.ProductionAccessEnabled\n          }), input.UseCaseDescription !== undefined && input.UseCaseDescription !== null && {\n            UseCaseDescription: input.UseCaseDescription\n          }), input.WebsiteURL !== undefined && input.WebsiteURL !== null && {\n            WebsiteURL: input.WebsiteURL\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutAccountSendingAttributesCommand = function serializeAws_restJson1PutAccountSendingAttributesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/account/sending\";\n          body = JSON.stringify(__assign({}, input.SendingEnabled !== undefined && input.SendingEnabled !== null && {\n            SendingEnabled: input.SendingEnabled\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutAccountSuppressionAttributesCommand = function serializeAws_restJson1PutAccountSuppressionAttributesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/account/suppression\";\n          body = JSON.stringify(__assign({}, input.SuppressedReasons !== undefined && input.SuppressedReasons !== null && {\n            SuppressedReasons: serializeAws_restJson1SuppressionListReasons(input.SuppressedReasons, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutConfigurationSetDeliveryOptionsCommand = function serializeAws_restJson1PutConfigurationSetDeliveryOptionsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/configuration-sets/{ConfigurationSetName}/delivery-options\";\n\n          if (input.ConfigurationSetName !== undefined) {\n            labelValue = input.ConfigurationSetName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n          }\n\n          body = JSON.stringify(__assign(__assign({}, input.SendingPoolName !== undefined && input.SendingPoolName !== null && {\n            SendingPoolName: input.SendingPoolName\n          }), input.TlsPolicy !== undefined && input.TlsPolicy !== null && {\n            TlsPolicy: input.TlsPolicy\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutConfigurationSetReputationOptionsCommand = function serializeAws_restJson1PutConfigurationSetReputationOptionsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/configuration-sets/{ConfigurationSetName}/reputation-options\";\n\n          if (input.ConfigurationSetName !== undefined) {\n            labelValue = input.ConfigurationSetName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n          }\n\n          body = JSON.stringify(__assign({}, input.ReputationMetricsEnabled !== undefined && input.ReputationMetricsEnabled !== null && {\n            ReputationMetricsEnabled: input.ReputationMetricsEnabled\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutConfigurationSetSendingOptionsCommand = function serializeAws_restJson1PutConfigurationSetSendingOptionsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/configuration-sets/{ConfigurationSetName}/sending\";\n\n          if (input.ConfigurationSetName !== undefined) {\n            labelValue = input.ConfigurationSetName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n          }\n\n          body = JSON.stringify(__assign({}, input.SendingEnabled !== undefined && input.SendingEnabled !== null && {\n            SendingEnabled: input.SendingEnabled\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutConfigurationSetSuppressionOptionsCommand = function serializeAws_restJson1PutConfigurationSetSuppressionOptionsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/configuration-sets/{ConfigurationSetName}/suppression-options\";\n\n          if (input.ConfigurationSetName !== undefined) {\n            labelValue = input.ConfigurationSetName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n          }\n\n          body = JSON.stringify(__assign({}, input.SuppressedReasons !== undefined && input.SuppressedReasons !== null && {\n            SuppressedReasons: serializeAws_restJson1SuppressionListReasons(input.SuppressedReasons, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutConfigurationSetTrackingOptionsCommand = function serializeAws_restJson1PutConfigurationSetTrackingOptionsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/configuration-sets/{ConfigurationSetName}/tracking-options\";\n\n          if (input.ConfigurationSetName !== undefined) {\n            labelValue = input.ConfigurationSetName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n          }\n\n          body = JSON.stringify(__assign({}, input.CustomRedirectDomain !== undefined && input.CustomRedirectDomain !== null && {\n            CustomRedirectDomain: input.CustomRedirectDomain\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutDedicatedIpInPoolCommand = function serializeAws_restJson1PutDedicatedIpInPoolCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/dedicated-ips/{Ip}/pool\";\n\n          if (input.Ip !== undefined) {\n            labelValue = input.Ip;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Ip.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Ip}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Ip.\");\n          }\n\n          body = JSON.stringify(__assign({}, input.DestinationPoolName !== undefined && input.DestinationPoolName !== null && {\n            DestinationPoolName: input.DestinationPoolName\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutDedicatedIpWarmupAttributesCommand = function serializeAws_restJson1PutDedicatedIpWarmupAttributesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/dedicated-ips/{Ip}/warmup\";\n\n          if (input.Ip !== undefined) {\n            labelValue = input.Ip;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Ip.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Ip}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Ip.\");\n          }\n\n          body = JSON.stringify(__assign({}, input.WarmupPercentage !== undefined && input.WarmupPercentage !== null && {\n            WarmupPercentage: input.WarmupPercentage\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutDeliverabilityDashboardOptionCommand = function serializeAws_restJson1PutDeliverabilityDashboardOptionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/deliverability-dashboard\";\n          body = JSON.stringify(__assign(__assign({}, input.DashboardEnabled !== undefined && input.DashboardEnabled !== null && {\n            DashboardEnabled: input.DashboardEnabled\n          }), input.SubscribedDomains !== undefined && input.SubscribedDomains !== null && {\n            SubscribedDomains: serializeAws_restJson1DomainDeliverabilityTrackingOptions(input.SubscribedDomains, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutEmailIdentityConfigurationSetAttributesCommand = function serializeAws_restJson1PutEmailIdentityConfigurationSetAttributesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities/{EmailIdentity}/configuration-set\";\n\n          if (input.EmailIdentity !== undefined) {\n            labelValue = input.EmailIdentity;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n          }\n\n          body = JSON.stringify(__assign({}, input.ConfigurationSetName !== undefined && input.ConfigurationSetName !== null && {\n            ConfigurationSetName: input.ConfigurationSetName\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutEmailIdentityDkimAttributesCommand = function serializeAws_restJson1PutEmailIdentityDkimAttributesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities/{EmailIdentity}/dkim\";\n\n          if (input.EmailIdentity !== undefined) {\n            labelValue = input.EmailIdentity;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n          }\n\n          body = JSON.stringify(__assign({}, input.SigningEnabled !== undefined && input.SigningEnabled !== null && {\n            SigningEnabled: input.SigningEnabled\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutEmailIdentityDkimSigningAttributesCommand = function serializeAws_restJson1PutEmailIdentityDkimSigningAttributesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v1/email/identities/{EmailIdentity}/dkim/signing\";\n\n          if (input.EmailIdentity !== undefined) {\n            labelValue = input.EmailIdentity;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n          }\n\n          body = JSON.stringify(__assign(__assign({}, input.SigningAttributes !== undefined && input.SigningAttributes !== null && {\n            SigningAttributes: serializeAws_restJson1DkimSigningAttributes(input.SigningAttributes, context)\n          }), input.SigningAttributesOrigin !== undefined && input.SigningAttributesOrigin !== null && {\n            SigningAttributesOrigin: input.SigningAttributesOrigin\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutEmailIdentityFeedbackAttributesCommand = function serializeAws_restJson1PutEmailIdentityFeedbackAttributesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities/{EmailIdentity}/feedback\";\n\n          if (input.EmailIdentity !== undefined) {\n            labelValue = input.EmailIdentity;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n          }\n\n          body = JSON.stringify(__assign({}, input.EmailForwardingEnabled !== undefined && input.EmailForwardingEnabled !== null && {\n            EmailForwardingEnabled: input.EmailForwardingEnabled\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutEmailIdentityMailFromAttributesCommand = function serializeAws_restJson1PutEmailIdentityMailFromAttributesCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities/{EmailIdentity}/mail-from\";\n\n          if (input.EmailIdentity !== undefined) {\n            labelValue = input.EmailIdentity;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n          }\n\n          body = JSON.stringify(__assign(__assign({}, input.BehaviorOnMxFailure !== undefined && input.BehaviorOnMxFailure !== null && {\n            BehaviorOnMxFailure: input.BehaviorOnMxFailure\n          }), input.MailFromDomain !== undefined && input.MailFromDomain !== null && {\n            MailFromDomain: input.MailFromDomain\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutSuppressedDestinationCommand = function serializeAws_restJson1PutSuppressedDestinationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/suppression/addresses\";\n          body = JSON.stringify(__assign(__assign({}, input.EmailAddress !== undefined && input.EmailAddress !== null && {\n            EmailAddress: input.EmailAddress\n          }), input.Reason !== undefined && input.Reason !== null && {\n            Reason: input.Reason\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1SendBulkEmailCommand = function serializeAws_restJson1SendBulkEmailCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/outbound-bulk-emails\";\n          body = JSON.stringify(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.BulkEmailEntries !== undefined && input.BulkEmailEntries !== null && {\n            BulkEmailEntries: serializeAws_restJson1BulkEmailEntryList(input.BulkEmailEntries, context)\n          }), input.ConfigurationSetName !== undefined && input.ConfigurationSetName !== null && {\n            ConfigurationSetName: input.ConfigurationSetName\n          }), input.DefaultContent !== undefined && input.DefaultContent !== null && {\n            DefaultContent: serializeAws_restJson1BulkEmailContent(input.DefaultContent, context)\n          }), input.DefaultEmailTags !== undefined && input.DefaultEmailTags !== null && {\n            DefaultEmailTags: serializeAws_restJson1MessageTagList(input.DefaultEmailTags, context)\n          }), input.FeedbackForwardingEmailAddress !== undefined && input.FeedbackForwardingEmailAddress !== null && {\n            FeedbackForwardingEmailAddress: input.FeedbackForwardingEmailAddress\n          }), input.FeedbackForwardingEmailAddressIdentityArn !== undefined && input.FeedbackForwardingEmailAddressIdentityArn !== null && {\n            FeedbackForwardingEmailAddressIdentityArn: input.FeedbackForwardingEmailAddressIdentityArn\n          }), input.FromEmailAddress !== undefined && input.FromEmailAddress !== null && {\n            FromEmailAddress: input.FromEmailAddress\n          }), input.FromEmailAddressIdentityArn !== undefined && input.FromEmailAddressIdentityArn !== null && {\n            FromEmailAddressIdentityArn: input.FromEmailAddressIdentityArn\n          }), input.ReplyToAddresses !== undefined && input.ReplyToAddresses !== null && {\n            ReplyToAddresses: serializeAws_restJson1EmailAddressList(input.ReplyToAddresses, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1SendCustomVerificationEmailCommand = function serializeAws_restJson1SendCustomVerificationEmailCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/outbound-custom-verification-emails\";\n          body = JSON.stringify(__assign(__assign(__assign({}, input.ConfigurationSetName !== undefined && input.ConfigurationSetName !== null && {\n            ConfigurationSetName: input.ConfigurationSetName\n          }), input.EmailAddress !== undefined && input.EmailAddress !== null && {\n            EmailAddress: input.EmailAddress\n          }), input.TemplateName !== undefined && input.TemplateName !== null && {\n            TemplateName: input.TemplateName\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1SendEmailCommand = function serializeAws_restJson1SendEmailCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/outbound-emails\";\n          body = JSON.stringify(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.ConfigurationSetName !== undefined && input.ConfigurationSetName !== null && {\n            ConfigurationSetName: input.ConfigurationSetName\n          }), input.Content !== undefined && input.Content !== null && {\n            Content: serializeAws_restJson1EmailContent(input.Content, context)\n          }), input.Destination !== undefined && input.Destination !== null && {\n            Destination: serializeAws_restJson1Destination(input.Destination, context)\n          }), input.EmailTags !== undefined && input.EmailTags !== null && {\n            EmailTags: serializeAws_restJson1MessageTagList(input.EmailTags, context)\n          }), input.FeedbackForwardingEmailAddress !== undefined && input.FeedbackForwardingEmailAddress !== null && {\n            FeedbackForwardingEmailAddress: input.FeedbackForwardingEmailAddress\n          }), input.FeedbackForwardingEmailAddressIdentityArn !== undefined && input.FeedbackForwardingEmailAddressIdentityArn !== null && {\n            FeedbackForwardingEmailAddressIdentityArn: input.FeedbackForwardingEmailAddressIdentityArn\n          }), input.FromEmailAddress !== undefined && input.FromEmailAddress !== null && {\n            FromEmailAddress: input.FromEmailAddress\n          }), input.FromEmailAddressIdentityArn !== undefined && input.FromEmailAddressIdentityArn !== null && {\n            FromEmailAddressIdentityArn: input.FromEmailAddressIdentityArn\n          }), input.ListManagementOptions !== undefined && input.ListManagementOptions !== null && {\n            ListManagementOptions: serializeAws_restJson1ListManagementOptions(input.ListManagementOptions, context)\n          }), input.ReplyToAddresses !== undefined && input.ReplyToAddresses !== null && {\n            ReplyToAddresses: serializeAws_restJson1EmailAddressList(input.ReplyToAddresses, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1TagResourceCommand = function serializeAws_restJson1TagResourceCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/tags\";\n          body = JSON.stringify(__assign(__assign({}, input.ResourceArn !== undefined && input.ResourceArn !== null && {\n            ResourceArn: input.ResourceArn\n          }), input.Tags !== undefined && input.Tags !== null && {\n            Tags: serializeAws_restJson1TagList(input.Tags, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1TestRenderEmailTemplateCommand = function serializeAws_restJson1TestRenderEmailTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/templates/{TemplateName}/render\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          body = JSON.stringify(__assign({}, input.TemplateData !== undefined && input.TemplateData !== null && {\n            TemplateData: input.TemplateData\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UntagResourceCommand = function serializeAws_restJson1UntagResourceCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/tags\";\n          query = __assign(__assign({}, input.ResourceArn !== undefined && {\n            ResourceArn: input.ResourceArn\n          }), input.TagKeys !== undefined && {\n            TagKeys: (input.TagKeys || []).map(function (_entry) {\n              return _entry;\n            })\n          });\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateConfigurationSetEventDestinationCommand = function serializeAws_restJson1UpdateConfigurationSetEventDestinationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}\";\n\n          if (input.ConfigurationSetName !== undefined) {\n            labelValue = input.ConfigurationSetName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n          }\n\n          if (input.EventDestinationName !== undefined) {\n            labelValue = input.EventDestinationName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EventDestinationName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EventDestinationName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EventDestinationName.\");\n          }\n\n          body = JSON.stringify(__assign({}, input.EventDestination !== undefined && input.EventDestination !== null && {\n            EventDestination: serializeAws_restJson1EventDestinationDefinition(input.EventDestination, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateContactCommand = function serializeAws_restJson1UpdateContactCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/contact-lists/{ContactListName}/contacts/{EmailAddress}\";\n\n          if (input.ContactListName !== undefined) {\n            labelValue = input.ContactListName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n          }\n\n          if (input.EmailAddress !== undefined) {\n            labelValue = input.EmailAddress;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailAddress.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailAddress}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailAddress.\");\n          }\n\n          body = JSON.stringify(__assign(__assign(__assign({}, input.AttributesData !== undefined && input.AttributesData !== null && {\n            AttributesData: input.AttributesData\n          }), input.TopicPreferences !== undefined && input.TopicPreferences !== null && {\n            TopicPreferences: serializeAws_restJson1TopicPreferenceList(input.TopicPreferences, context)\n          }), input.UnsubscribeAll !== undefined && input.UnsubscribeAll !== null && {\n            UnsubscribeAll: input.UnsubscribeAll\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateContactListCommand = function serializeAws_restJson1UpdateContactListCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/contact-lists/{ContactListName}\";\n\n          if (input.ContactListName !== undefined) {\n            labelValue = input.ContactListName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n          }\n\n          body = JSON.stringify(__assign(__assign({}, input.Description !== undefined && input.Description !== null && {\n            Description: input.Description\n          }), input.Topics !== undefined && input.Topics !== null && {\n            Topics: serializeAws_restJson1Topics(input.Topics, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateCustomVerificationEmailTemplateCommand = function serializeAws_restJson1UpdateCustomVerificationEmailTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/custom-verification-email-templates/{TemplateName}\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          body = JSON.stringify(__assign(__assign(__assign(__assign(__assign({}, input.FailureRedirectionURL !== undefined && input.FailureRedirectionURL !== null && {\n            FailureRedirectionURL: input.FailureRedirectionURL\n          }), input.FromEmailAddress !== undefined && input.FromEmailAddress !== null && {\n            FromEmailAddress: input.FromEmailAddress\n          }), input.SuccessRedirectionURL !== undefined && input.SuccessRedirectionURL !== null && {\n            SuccessRedirectionURL: input.SuccessRedirectionURL\n          }), input.TemplateContent !== undefined && input.TemplateContent !== null && {\n            TemplateContent: input.TemplateContent\n          }), input.TemplateSubject !== undefined && input.TemplateSubject !== null && {\n            TemplateSubject: input.TemplateSubject\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateEmailIdentityPolicyCommand = function serializeAws_restJson1UpdateEmailIdentityPolicyCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities/{EmailIdentity}/policies/{PolicyName}\";\n\n          if (input.EmailIdentity !== undefined) {\n            labelValue = input.EmailIdentity;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n          }\n\n          if (input.PolicyName !== undefined) {\n            labelValue = input.PolicyName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: PolicyName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{PolicyName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: PolicyName.\");\n          }\n\n          body = JSON.stringify(__assign({}, input.Policy !== undefined && input.Policy !== null && {\n            Policy: input.Policy\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateEmailTemplateCommand = function serializeAws_restJson1UpdateEmailTemplateCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/templates/{TemplateName}\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          body = JSON.stringify(__assign({}, input.TemplateContent !== undefined && input.TemplateContent !== null && {\n            TemplateContent: serializeAws_restJson1EmailTemplateContent(input.TemplateContent, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1CreateConfigurationSetCommand = function deserializeAws_restJson1CreateConfigurationSetCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1CreateConfigurationSetCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateConfigurationSetCommandError = function deserializeAws_restJson1CreateConfigurationSetCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;\n\n    var _j;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _j = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AlreadyExistsException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#AlreadyExistsException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 4];\n\n            case \"ConcurrentModificationException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#ConcurrentModificationException\":\n              return [3, 6];\n\n            case \"LimitExceededException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#LimitExceededException\":\n              return [3, 8];\n\n            case \"NotFoundException\":\n              return [3, 10];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 10];\n\n            case \"TooManyRequestsException\":\n              return [3, 12];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 12];\n          }\n\n          return [3, 14];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 15];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 15];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 15];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 15];\n\n        case 10:\n          _g = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 15];\n\n        case 12:\n          _h = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateConfigurationSetEventDestinationCommand = function deserializeAws_restJson1CreateConfigurationSetEventDestinationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1CreateConfigurationSetEventDestinationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateConfigurationSetEventDestinationCommandError = function deserializeAws_restJson1CreateConfigurationSetEventDestinationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AlreadyExistsException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#AlreadyExistsException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 4];\n\n            case \"LimitExceededException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#LimitExceededException\":\n              return [3, 6];\n\n            case \"NotFoundException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 8];\n\n            case \"TooManyRequestsException\":\n              return [3, 10];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 10];\n          }\n\n          return [3, 12];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 10:\n          _g = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateContactCommand = function deserializeAws_restJson1CreateContactCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1CreateContactCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateContactCommandError = function deserializeAws_restJson1CreateContactCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AlreadyExistsException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#AlreadyExistsException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 4];\n\n            case \"NotFoundException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 6];\n\n            case \"TooManyRequestsException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 8];\n          }\n\n          return [3, 10];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateContactListCommand = function deserializeAws_restJson1CreateContactListCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1CreateContactListCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateContactListCommandError = function deserializeAws_restJson1CreateContactListCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AlreadyExistsException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#AlreadyExistsException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 4];\n\n            case \"LimitExceededException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#LimitExceededException\":\n              return [3, 6];\n\n            case \"TooManyRequestsException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 8];\n          }\n\n          return [3, 10];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateCustomVerificationEmailTemplateCommand = function deserializeAws_restJson1CreateCustomVerificationEmailTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1CreateCustomVerificationEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateCustomVerificationEmailTemplateCommandError = function deserializeAws_restJson1CreateCustomVerificationEmailTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AlreadyExistsException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#AlreadyExistsException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 4];\n\n            case \"LimitExceededException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#LimitExceededException\":\n              return [3, 6];\n\n            case \"NotFoundException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 8];\n\n            case \"TooManyRequestsException\":\n              return [3, 10];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 10];\n          }\n\n          return [3, 12];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 10:\n          _g = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateDedicatedIpPoolCommand = function deserializeAws_restJson1CreateDedicatedIpPoolCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1CreateDedicatedIpPoolCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateDedicatedIpPoolCommandError = function deserializeAws_restJson1CreateDedicatedIpPoolCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AlreadyExistsException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#AlreadyExistsException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 4];\n\n            case \"ConcurrentModificationException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#ConcurrentModificationException\":\n              return [3, 6];\n\n            case \"LimitExceededException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#LimitExceededException\":\n              return [3, 8];\n\n            case \"TooManyRequestsException\":\n              return [3, 10];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 10];\n          }\n\n          return [3, 12];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 10:\n          _g = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateDeliverabilityTestReportCommand = function deserializeAws_restJson1CreateDeliverabilityTestReportCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1CreateDeliverabilityTestReportCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DeliverabilityTestStatus: undefined,\n            ReportId: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.DeliverabilityTestStatus !== undefined && data.DeliverabilityTestStatus !== null) {\n            contents.DeliverabilityTestStatus = __expectString(data.DeliverabilityTestStatus);\n          }\n\n          if (data.ReportId !== undefined && data.ReportId !== null) {\n            contents.ReportId = __expectString(data.ReportId);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateDeliverabilityTestReportCommandError = function deserializeAws_restJson1CreateDeliverabilityTestReportCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;\n\n    var _m;\n\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _m = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_m.body = _o.sent(), _m)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccountSuspendedException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#AccountSuspendedException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 4];\n\n            case \"ConcurrentModificationException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#ConcurrentModificationException\":\n              return [3, 6];\n\n            case \"LimitExceededException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#LimitExceededException\":\n              return [3, 8];\n\n            case \"MailFromDomainNotVerifiedException\":\n              return [3, 10];\n\n            case \"com.amazonaws.sesv2#MailFromDomainNotVerifiedException\":\n              return [3, 10];\n\n            case \"MessageRejected\":\n              return [3, 12];\n\n            case \"com.amazonaws.sesv2#MessageRejected\":\n              return [3, 12];\n\n            case \"NotFoundException\":\n              return [3, 14];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 14];\n\n            case \"SendingPausedException\":\n              return [3, 16];\n\n            case \"com.amazonaws.sesv2#SendingPausedException\":\n              return [3, 16];\n\n            case \"TooManyRequestsException\":\n              return [3, 18];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 18];\n          }\n\n          return [3, 20];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1AccountSuspendedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 21];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 21];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 21];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 21];\n\n        case 10:\n          _g = [{}];\n          return [4, deserializeAws_restJson1MailFromDomainNotVerifiedExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 21];\n\n        case 12:\n          _h = [{}];\n          return [4, deserializeAws_restJson1MessageRejectedResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 21];\n\n        case 14:\n          _j = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 21];\n\n        case 16:\n          _k = [{}];\n          return [4, deserializeAws_restJson1SendingPausedExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 21];\n\n        case 18:\n          _l = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 21];\n\n        case 20:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _o.label = 21;\n\n        case 21:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateEmailIdentityCommand = function deserializeAws_restJson1CreateEmailIdentityCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1CreateEmailIdentityCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DkimAttributes: undefined,\n            IdentityType: undefined,\n            VerifiedForSendingStatus: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.DkimAttributes !== undefined && data.DkimAttributes !== null) {\n            contents.DkimAttributes = deserializeAws_restJson1DkimAttributes(data.DkimAttributes, context);\n          }\n\n          if (data.IdentityType !== undefined && data.IdentityType !== null) {\n            contents.IdentityType = __expectString(data.IdentityType);\n          }\n\n          if (data.VerifiedForSendingStatus !== undefined && data.VerifiedForSendingStatus !== null) {\n            contents.VerifiedForSendingStatus = __expectBoolean(data.VerifiedForSendingStatus);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateEmailIdentityCommandError = function deserializeAws_restJson1CreateEmailIdentityCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;\n\n    var _j;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _j = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AlreadyExistsException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#AlreadyExistsException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 4];\n\n            case \"ConcurrentModificationException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#ConcurrentModificationException\":\n              return [3, 6];\n\n            case \"LimitExceededException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#LimitExceededException\":\n              return [3, 8];\n\n            case \"NotFoundException\":\n              return [3, 10];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 10];\n\n            case \"TooManyRequestsException\":\n              return [3, 12];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 12];\n          }\n\n          return [3, 14];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 15];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 15];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 15];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 15];\n\n        case 10:\n          _g = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 15];\n\n        case 12:\n          _h = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateEmailIdentityPolicyCommand = function deserializeAws_restJson1CreateEmailIdentityPolicyCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1CreateEmailIdentityPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateEmailIdentityPolicyCommandError = function deserializeAws_restJson1CreateEmailIdentityPolicyCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AlreadyExistsException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#AlreadyExistsException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 4];\n\n            case \"LimitExceededException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#LimitExceededException\":\n              return [3, 6];\n\n            case \"NotFoundException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 8];\n\n            case \"TooManyRequestsException\":\n              return [3, 10];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 10];\n          }\n\n          return [3, 12];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 10:\n          _g = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateEmailTemplateCommand = function deserializeAws_restJson1CreateEmailTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1CreateEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateEmailTemplateCommandError = function deserializeAws_restJson1CreateEmailTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AlreadyExistsException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#AlreadyExistsException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 4];\n\n            case \"LimitExceededException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#LimitExceededException\":\n              return [3, 6];\n\n            case \"TooManyRequestsException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 8];\n          }\n\n          return [3, 10];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateImportJobCommand = function deserializeAws_restJson1CreateImportJobCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1CreateImportJobCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JobId: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.JobId !== undefined && data.JobId !== null) {\n            contents.JobId = __expectString(data.JobId);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateImportJobCommandError = function deserializeAws_restJson1CreateImportJobCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"LimitExceededException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#LimitExceededException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteConfigurationSetCommand = function deserializeAws_restJson1DeleteConfigurationSetCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1DeleteConfigurationSetCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteConfigurationSetCommandError = function deserializeAws_restJson1DeleteConfigurationSetCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"NotFoundException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 6];\n\n            case \"TooManyRequestsException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 8];\n          }\n\n          return [3, 10];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteConfigurationSetEventDestinationCommand = function deserializeAws_restJson1DeleteConfigurationSetEventDestinationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1DeleteConfigurationSetEventDestinationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteConfigurationSetEventDestinationCommandError = function deserializeAws_restJson1DeleteConfigurationSetEventDestinationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteContactCommand = function deserializeAws_restJson1DeleteContactCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1DeleteContactCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteContactCommandError = function deserializeAws_restJson1DeleteContactCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteContactListCommand = function deserializeAws_restJson1DeleteContactListCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1DeleteContactListCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteContactListCommandError = function deserializeAws_restJson1DeleteContactListCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"NotFoundException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 6];\n\n            case \"TooManyRequestsException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 8];\n          }\n\n          return [3, 10];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteCustomVerificationEmailTemplateCommand = function deserializeAws_restJson1DeleteCustomVerificationEmailTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1DeleteCustomVerificationEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteCustomVerificationEmailTemplateCommandError = function deserializeAws_restJson1DeleteCustomVerificationEmailTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteDedicatedIpPoolCommand = function deserializeAws_restJson1DeleteDedicatedIpPoolCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1DeleteDedicatedIpPoolCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteDedicatedIpPoolCommandError = function deserializeAws_restJson1DeleteDedicatedIpPoolCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"NotFoundException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 6];\n\n            case \"TooManyRequestsException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 8];\n          }\n\n          return [3, 10];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteEmailIdentityCommand = function deserializeAws_restJson1DeleteEmailIdentityCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1DeleteEmailIdentityCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteEmailIdentityCommandError = function deserializeAws_restJson1DeleteEmailIdentityCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"NotFoundException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 6];\n\n            case \"TooManyRequestsException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 8];\n          }\n\n          return [3, 10];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteEmailIdentityPolicyCommand = function deserializeAws_restJson1DeleteEmailIdentityPolicyCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1DeleteEmailIdentityPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteEmailIdentityPolicyCommandError = function deserializeAws_restJson1DeleteEmailIdentityPolicyCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteEmailTemplateCommand = function deserializeAws_restJson1DeleteEmailTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1DeleteEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteEmailTemplateCommandError = function deserializeAws_restJson1DeleteEmailTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteSuppressedDestinationCommand = function deserializeAws_restJson1DeleteSuppressedDestinationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1DeleteSuppressedDestinationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteSuppressedDestinationCommandError = function deserializeAws_restJson1DeleteSuppressedDestinationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetAccountCommand = function deserializeAws_restJson1GetAccountCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetAccountCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DedicatedIpAutoWarmupEnabled: undefined,\n            Details: undefined,\n            EnforcementStatus: undefined,\n            ProductionAccessEnabled: undefined,\n            SendQuota: undefined,\n            SendingEnabled: undefined,\n            SuppressionAttributes: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.DedicatedIpAutoWarmupEnabled !== undefined && data.DedicatedIpAutoWarmupEnabled !== null) {\n            contents.DedicatedIpAutoWarmupEnabled = __expectBoolean(data.DedicatedIpAutoWarmupEnabled);\n          }\n\n          if (data.Details !== undefined && data.Details !== null) {\n            contents.Details = deserializeAws_restJson1AccountDetails(data.Details, context);\n          }\n\n          if (data.EnforcementStatus !== undefined && data.EnforcementStatus !== null) {\n            contents.EnforcementStatus = __expectString(data.EnforcementStatus);\n          }\n\n          if (data.ProductionAccessEnabled !== undefined && data.ProductionAccessEnabled !== null) {\n            contents.ProductionAccessEnabled = __expectBoolean(data.ProductionAccessEnabled);\n          }\n\n          if (data.SendQuota !== undefined && data.SendQuota !== null) {\n            contents.SendQuota = deserializeAws_restJson1SendQuota(data.SendQuota, context);\n          }\n\n          if (data.SendingEnabled !== undefined && data.SendingEnabled !== null) {\n            contents.SendingEnabled = __expectBoolean(data.SendingEnabled);\n          }\n\n          if (data.SuppressionAttributes !== undefined && data.SuppressionAttributes !== null) {\n            contents.SuppressionAttributes = deserializeAws_restJson1SuppressionAttributes(data.SuppressionAttributes, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetAccountCommandError = function deserializeAws_restJson1GetAccountCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"TooManyRequestsException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetBlacklistReportsCommand = function deserializeAws_restJson1GetBlacklistReportsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetBlacklistReportsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BlacklistReport: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.BlacklistReport !== undefined && data.BlacklistReport !== null) {\n            contents.BlacklistReport = deserializeAws_restJson1BlacklistReport(data.BlacklistReport, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetBlacklistReportsCommandError = function deserializeAws_restJson1GetBlacklistReportsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetConfigurationSetCommand = function deserializeAws_restJson1GetConfigurationSetCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetConfigurationSetCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ConfigurationSetName: undefined,\n            DeliveryOptions: undefined,\n            ReputationOptions: undefined,\n            SendingOptions: undefined,\n            SuppressionOptions: undefined,\n            Tags: undefined,\n            TrackingOptions: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.ConfigurationSetName !== undefined && data.ConfigurationSetName !== null) {\n            contents.ConfigurationSetName = __expectString(data.ConfigurationSetName);\n          }\n\n          if (data.DeliveryOptions !== undefined && data.DeliveryOptions !== null) {\n            contents.DeliveryOptions = deserializeAws_restJson1DeliveryOptions(data.DeliveryOptions, context);\n          }\n\n          if (data.ReputationOptions !== undefined && data.ReputationOptions !== null) {\n            contents.ReputationOptions = deserializeAws_restJson1ReputationOptions(data.ReputationOptions, context);\n          }\n\n          if (data.SendingOptions !== undefined && data.SendingOptions !== null) {\n            contents.SendingOptions = deserializeAws_restJson1SendingOptions(data.SendingOptions, context);\n          }\n\n          if (data.SuppressionOptions !== undefined && data.SuppressionOptions !== null) {\n            contents.SuppressionOptions = deserializeAws_restJson1SuppressionOptions(data.SuppressionOptions, context);\n          }\n\n          if (data.Tags !== undefined && data.Tags !== null) {\n            contents.Tags = deserializeAws_restJson1TagList(data.Tags, context);\n          }\n\n          if (data.TrackingOptions !== undefined && data.TrackingOptions !== null) {\n            contents.TrackingOptions = deserializeAws_restJson1TrackingOptions(data.TrackingOptions, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetConfigurationSetCommandError = function deserializeAws_restJson1GetConfigurationSetCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetConfigurationSetEventDestinationsCommand = function deserializeAws_restJson1GetConfigurationSetEventDestinationsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetConfigurationSetEventDestinationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EventDestinations: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.EventDestinations !== undefined && data.EventDestinations !== null) {\n            contents.EventDestinations = deserializeAws_restJson1EventDestinations(data.EventDestinations, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetConfigurationSetEventDestinationsCommandError = function deserializeAws_restJson1GetConfigurationSetEventDestinationsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetContactCommand = function deserializeAws_restJson1GetContactCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetContactCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AttributesData: undefined,\n            ContactListName: undefined,\n            CreatedTimestamp: undefined,\n            EmailAddress: undefined,\n            LastUpdatedTimestamp: undefined,\n            TopicDefaultPreferences: undefined,\n            TopicPreferences: undefined,\n            UnsubscribeAll: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.AttributesData !== undefined && data.AttributesData !== null) {\n            contents.AttributesData = __expectString(data.AttributesData);\n          }\n\n          if (data.ContactListName !== undefined && data.ContactListName !== null) {\n            contents.ContactListName = __expectString(data.ContactListName);\n          }\n\n          if (data.CreatedTimestamp !== undefined && data.CreatedTimestamp !== null) {\n            contents.CreatedTimestamp = __expectNonNull(__parseEpochTimestamp(__expectNumber(data.CreatedTimestamp)));\n          }\n\n          if (data.EmailAddress !== undefined && data.EmailAddress !== null) {\n            contents.EmailAddress = __expectString(data.EmailAddress);\n          }\n\n          if (data.LastUpdatedTimestamp !== undefined && data.LastUpdatedTimestamp !== null) {\n            contents.LastUpdatedTimestamp = __expectNonNull(__parseEpochTimestamp(__expectNumber(data.LastUpdatedTimestamp)));\n          }\n\n          if (data.TopicDefaultPreferences !== undefined && data.TopicDefaultPreferences !== null) {\n            contents.TopicDefaultPreferences = deserializeAws_restJson1TopicPreferenceList(data.TopicDefaultPreferences, context);\n          }\n\n          if (data.TopicPreferences !== undefined && data.TopicPreferences !== null) {\n            contents.TopicPreferences = deserializeAws_restJson1TopicPreferenceList(data.TopicPreferences, context);\n          }\n\n          if (data.UnsubscribeAll !== undefined && data.UnsubscribeAll !== null) {\n            contents.UnsubscribeAll = __expectBoolean(data.UnsubscribeAll);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetContactCommandError = function deserializeAws_restJson1GetContactCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetContactListCommand = function deserializeAws_restJson1GetContactListCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetContactListCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContactListName: undefined,\n            CreatedTimestamp: undefined,\n            Description: undefined,\n            LastUpdatedTimestamp: undefined,\n            Tags: undefined,\n            Topics: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.ContactListName !== undefined && data.ContactListName !== null) {\n            contents.ContactListName = __expectString(data.ContactListName);\n          }\n\n          if (data.CreatedTimestamp !== undefined && data.CreatedTimestamp !== null) {\n            contents.CreatedTimestamp = __expectNonNull(__parseEpochTimestamp(__expectNumber(data.CreatedTimestamp)));\n          }\n\n          if (data.Description !== undefined && data.Description !== null) {\n            contents.Description = __expectString(data.Description);\n          }\n\n          if (data.LastUpdatedTimestamp !== undefined && data.LastUpdatedTimestamp !== null) {\n            contents.LastUpdatedTimestamp = __expectNonNull(__parseEpochTimestamp(__expectNumber(data.LastUpdatedTimestamp)));\n          }\n\n          if (data.Tags !== undefined && data.Tags !== null) {\n            contents.Tags = deserializeAws_restJson1TagList(data.Tags, context);\n          }\n\n          if (data.Topics !== undefined && data.Topics !== null) {\n            contents.Topics = deserializeAws_restJson1Topics(data.Topics, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetContactListCommandError = function deserializeAws_restJson1GetContactListCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetCustomVerificationEmailTemplateCommand = function deserializeAws_restJson1GetCustomVerificationEmailTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetCustomVerificationEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            FailureRedirectionURL: undefined,\n            FromEmailAddress: undefined,\n            SuccessRedirectionURL: undefined,\n            TemplateContent: undefined,\n            TemplateName: undefined,\n            TemplateSubject: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.FailureRedirectionURL !== undefined && data.FailureRedirectionURL !== null) {\n            contents.FailureRedirectionURL = __expectString(data.FailureRedirectionURL);\n          }\n\n          if (data.FromEmailAddress !== undefined && data.FromEmailAddress !== null) {\n            contents.FromEmailAddress = __expectString(data.FromEmailAddress);\n          }\n\n          if (data.SuccessRedirectionURL !== undefined && data.SuccessRedirectionURL !== null) {\n            contents.SuccessRedirectionURL = __expectString(data.SuccessRedirectionURL);\n          }\n\n          if (data.TemplateContent !== undefined && data.TemplateContent !== null) {\n            contents.TemplateContent = __expectString(data.TemplateContent);\n          }\n\n          if (data.TemplateName !== undefined && data.TemplateName !== null) {\n            contents.TemplateName = __expectString(data.TemplateName);\n          }\n\n          if (data.TemplateSubject !== undefined && data.TemplateSubject !== null) {\n            contents.TemplateSubject = __expectString(data.TemplateSubject);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetCustomVerificationEmailTemplateCommandError = function deserializeAws_restJson1GetCustomVerificationEmailTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetDedicatedIpCommand = function deserializeAws_restJson1GetDedicatedIpCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetDedicatedIpCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DedicatedIp: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.DedicatedIp !== undefined && data.DedicatedIp !== null) {\n            contents.DedicatedIp = deserializeAws_restJson1DedicatedIp(data.DedicatedIp, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetDedicatedIpCommandError = function deserializeAws_restJson1GetDedicatedIpCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetDedicatedIpsCommand = function deserializeAws_restJson1GetDedicatedIpsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetDedicatedIpsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DedicatedIps: undefined,\n            NextToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.DedicatedIps !== undefined && data.DedicatedIps !== null) {\n            contents.DedicatedIps = deserializeAws_restJson1DedicatedIpList(data.DedicatedIps, context);\n          }\n\n          if (data.NextToken !== undefined && data.NextToken !== null) {\n            contents.NextToken = __expectString(data.NextToken);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetDedicatedIpsCommandError = function deserializeAws_restJson1GetDedicatedIpsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetDeliverabilityDashboardOptionsCommand = function deserializeAws_restJson1GetDeliverabilityDashboardOptionsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetDeliverabilityDashboardOptionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AccountStatus: undefined,\n            ActiveSubscribedDomains: undefined,\n            DashboardEnabled: undefined,\n            PendingExpirationSubscribedDomains: undefined,\n            SubscriptionExpiryDate: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.AccountStatus !== undefined && data.AccountStatus !== null) {\n            contents.AccountStatus = __expectString(data.AccountStatus);\n          }\n\n          if (data.ActiveSubscribedDomains !== undefined && data.ActiveSubscribedDomains !== null) {\n            contents.ActiveSubscribedDomains = deserializeAws_restJson1DomainDeliverabilityTrackingOptions(data.ActiveSubscribedDomains, context);\n          }\n\n          if (data.DashboardEnabled !== undefined && data.DashboardEnabled !== null) {\n            contents.DashboardEnabled = __expectBoolean(data.DashboardEnabled);\n          }\n\n          if (data.PendingExpirationSubscribedDomains !== undefined && data.PendingExpirationSubscribedDomains !== null) {\n            contents.PendingExpirationSubscribedDomains = deserializeAws_restJson1DomainDeliverabilityTrackingOptions(data.PendingExpirationSubscribedDomains, context);\n          }\n\n          if (data.SubscriptionExpiryDate !== undefined && data.SubscriptionExpiryDate !== null) {\n            contents.SubscriptionExpiryDate = __expectNonNull(__parseEpochTimestamp(__expectNumber(data.SubscriptionExpiryDate)));\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetDeliverabilityDashboardOptionsCommandError = function deserializeAws_restJson1GetDeliverabilityDashboardOptionsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"LimitExceededException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#LimitExceededException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetDeliverabilityTestReportCommand = function deserializeAws_restJson1GetDeliverabilityTestReportCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetDeliverabilityTestReportCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DeliverabilityTestReport: undefined,\n            IspPlacements: undefined,\n            Message: undefined,\n            OverallPlacement: undefined,\n            Tags: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.DeliverabilityTestReport !== undefined && data.DeliverabilityTestReport !== null) {\n            contents.DeliverabilityTestReport = deserializeAws_restJson1DeliverabilityTestReport(data.DeliverabilityTestReport, context);\n          }\n\n          if (data.IspPlacements !== undefined && data.IspPlacements !== null) {\n            contents.IspPlacements = deserializeAws_restJson1IspPlacements(data.IspPlacements, context);\n          }\n\n          if (data.Message !== undefined && data.Message !== null) {\n            contents.Message = __expectString(data.Message);\n          }\n\n          if (data.OverallPlacement !== undefined && data.OverallPlacement !== null) {\n            contents.OverallPlacement = deserializeAws_restJson1PlacementStatistics(data.OverallPlacement, context);\n          }\n\n          if (data.Tags !== undefined && data.Tags !== null) {\n            contents.Tags = deserializeAws_restJson1TagList(data.Tags, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetDeliverabilityTestReportCommandError = function deserializeAws_restJson1GetDeliverabilityTestReportCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetDomainDeliverabilityCampaignCommand = function deserializeAws_restJson1GetDomainDeliverabilityCampaignCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetDomainDeliverabilityCampaignCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DomainDeliverabilityCampaign: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.DomainDeliverabilityCampaign !== undefined && data.DomainDeliverabilityCampaign !== null) {\n            contents.DomainDeliverabilityCampaign = deserializeAws_restJson1DomainDeliverabilityCampaign(data.DomainDeliverabilityCampaign, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetDomainDeliverabilityCampaignCommandError = function deserializeAws_restJson1GetDomainDeliverabilityCampaignCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetDomainStatisticsReportCommand = function deserializeAws_restJson1GetDomainStatisticsReportCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetDomainStatisticsReportCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DailyVolumes: undefined,\n            OverallVolume: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.DailyVolumes !== undefined && data.DailyVolumes !== null) {\n            contents.DailyVolumes = deserializeAws_restJson1DailyVolumes(data.DailyVolumes, context);\n          }\n\n          if (data.OverallVolume !== undefined && data.OverallVolume !== null) {\n            contents.OverallVolume = deserializeAws_restJson1OverallVolume(data.OverallVolume, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetDomainStatisticsReportCommandError = function deserializeAws_restJson1GetDomainStatisticsReportCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetEmailIdentityCommand = function deserializeAws_restJson1GetEmailIdentityCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetEmailIdentityCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ConfigurationSetName: undefined,\n            DkimAttributes: undefined,\n            FeedbackForwardingStatus: undefined,\n            IdentityType: undefined,\n            MailFromAttributes: undefined,\n            Policies: undefined,\n            Tags: undefined,\n            VerifiedForSendingStatus: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.ConfigurationSetName !== undefined && data.ConfigurationSetName !== null) {\n            contents.ConfigurationSetName = __expectString(data.ConfigurationSetName);\n          }\n\n          if (data.DkimAttributes !== undefined && data.DkimAttributes !== null) {\n            contents.DkimAttributes = deserializeAws_restJson1DkimAttributes(data.DkimAttributes, context);\n          }\n\n          if (data.FeedbackForwardingStatus !== undefined && data.FeedbackForwardingStatus !== null) {\n            contents.FeedbackForwardingStatus = __expectBoolean(data.FeedbackForwardingStatus);\n          }\n\n          if (data.IdentityType !== undefined && data.IdentityType !== null) {\n            contents.IdentityType = __expectString(data.IdentityType);\n          }\n\n          if (data.MailFromAttributes !== undefined && data.MailFromAttributes !== null) {\n            contents.MailFromAttributes = deserializeAws_restJson1MailFromAttributes(data.MailFromAttributes, context);\n          }\n\n          if (data.Policies !== undefined && data.Policies !== null) {\n            contents.Policies = deserializeAws_restJson1PolicyMap(data.Policies, context);\n          }\n\n          if (data.Tags !== undefined && data.Tags !== null) {\n            contents.Tags = deserializeAws_restJson1TagList(data.Tags, context);\n          }\n\n          if (data.VerifiedForSendingStatus !== undefined && data.VerifiedForSendingStatus !== null) {\n            contents.VerifiedForSendingStatus = __expectBoolean(data.VerifiedForSendingStatus);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetEmailIdentityCommandError = function deserializeAws_restJson1GetEmailIdentityCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetEmailIdentityPoliciesCommand = function deserializeAws_restJson1GetEmailIdentityPoliciesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetEmailIdentityPoliciesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Policies: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.Policies !== undefined && data.Policies !== null) {\n            contents.Policies = deserializeAws_restJson1PolicyMap(data.Policies, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetEmailIdentityPoliciesCommandError = function deserializeAws_restJson1GetEmailIdentityPoliciesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetEmailTemplateCommand = function deserializeAws_restJson1GetEmailTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TemplateContent: undefined,\n            TemplateName: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.TemplateContent !== undefined && data.TemplateContent !== null) {\n            contents.TemplateContent = deserializeAws_restJson1EmailTemplateContent(data.TemplateContent, context);\n          }\n\n          if (data.TemplateName !== undefined && data.TemplateName !== null) {\n            contents.TemplateName = __expectString(data.TemplateName);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetEmailTemplateCommandError = function deserializeAws_restJson1GetEmailTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetImportJobCommand = function deserializeAws_restJson1GetImportJobCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetImportJobCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CompletedTimestamp: undefined,\n            CreatedTimestamp: undefined,\n            FailedRecordsCount: undefined,\n            FailureInfo: undefined,\n            ImportDataSource: undefined,\n            ImportDestination: undefined,\n            JobId: undefined,\n            JobStatus: undefined,\n            ProcessedRecordsCount: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.CompletedTimestamp !== undefined && data.CompletedTimestamp !== null) {\n            contents.CompletedTimestamp = __expectNonNull(__parseEpochTimestamp(__expectNumber(data.CompletedTimestamp)));\n          }\n\n          if (data.CreatedTimestamp !== undefined && data.CreatedTimestamp !== null) {\n            contents.CreatedTimestamp = __expectNonNull(__parseEpochTimestamp(__expectNumber(data.CreatedTimestamp)));\n          }\n\n          if (data.FailedRecordsCount !== undefined && data.FailedRecordsCount !== null) {\n            contents.FailedRecordsCount = __expectInt32(data.FailedRecordsCount);\n          }\n\n          if (data.FailureInfo !== undefined && data.FailureInfo !== null) {\n            contents.FailureInfo = deserializeAws_restJson1FailureInfo(data.FailureInfo, context);\n          }\n\n          if (data.ImportDataSource !== undefined && data.ImportDataSource !== null) {\n            contents.ImportDataSource = deserializeAws_restJson1ImportDataSource(data.ImportDataSource, context);\n          }\n\n          if (data.ImportDestination !== undefined && data.ImportDestination !== null) {\n            contents.ImportDestination = deserializeAws_restJson1ImportDestination(data.ImportDestination, context);\n          }\n\n          if (data.JobId !== undefined && data.JobId !== null) {\n            contents.JobId = __expectString(data.JobId);\n          }\n\n          if (data.JobStatus !== undefined && data.JobStatus !== null) {\n            contents.JobStatus = __expectString(data.JobStatus);\n          }\n\n          if (data.ProcessedRecordsCount !== undefined && data.ProcessedRecordsCount !== null) {\n            contents.ProcessedRecordsCount = __expectInt32(data.ProcessedRecordsCount);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetImportJobCommandError = function deserializeAws_restJson1GetImportJobCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSuppressedDestinationCommand = function deserializeAws_restJson1GetSuppressedDestinationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetSuppressedDestinationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SuppressedDestination: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.SuppressedDestination !== undefined && data.SuppressedDestination !== null) {\n            contents.SuppressedDestination = deserializeAws_restJson1SuppressedDestination(data.SuppressedDestination, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSuppressedDestinationCommandError = function deserializeAws_restJson1GetSuppressedDestinationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListConfigurationSetsCommand = function deserializeAws_restJson1ListConfigurationSetsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1ListConfigurationSetsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ConfigurationSets: undefined,\n            NextToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.ConfigurationSets !== undefined && data.ConfigurationSets !== null) {\n            contents.ConfigurationSets = deserializeAws_restJson1ConfigurationSetNameList(data.ConfigurationSets, context);\n          }\n\n          if (data.NextToken !== undefined && data.NextToken !== null) {\n            contents.NextToken = __expectString(data.NextToken);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListConfigurationSetsCommandError = function deserializeAws_restJson1ListConfigurationSetsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"TooManyRequestsException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListContactListsCommand = function deserializeAws_restJson1ListContactListsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1ListContactListsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContactLists: undefined,\n            NextToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.ContactLists !== undefined && data.ContactLists !== null) {\n            contents.ContactLists = deserializeAws_restJson1ListOfContactLists(data.ContactLists, context);\n          }\n\n          if (data.NextToken !== undefined && data.NextToken !== null) {\n            contents.NextToken = __expectString(data.NextToken);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListContactListsCommandError = function deserializeAws_restJson1ListContactListsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"TooManyRequestsException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListContactsCommand = function deserializeAws_restJson1ListContactsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1ListContactsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Contacts: undefined,\n            NextToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.Contacts !== undefined && data.Contacts !== null) {\n            contents.Contacts = deserializeAws_restJson1ListOfContacts(data.Contacts, context);\n          }\n\n          if (data.NextToken !== undefined && data.NextToken !== null) {\n            contents.NextToken = __expectString(data.NextToken);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListContactsCommandError = function deserializeAws_restJson1ListContactsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListCustomVerificationEmailTemplatesCommand = function deserializeAws_restJson1ListCustomVerificationEmailTemplatesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1ListCustomVerificationEmailTemplatesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CustomVerificationEmailTemplates: undefined,\n            NextToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.CustomVerificationEmailTemplates !== undefined && data.CustomVerificationEmailTemplates !== null) {\n            contents.CustomVerificationEmailTemplates = deserializeAws_restJson1CustomVerificationEmailTemplatesList(data.CustomVerificationEmailTemplates, context);\n          }\n\n          if (data.NextToken !== undefined && data.NextToken !== null) {\n            contents.NextToken = __expectString(data.NextToken);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListCustomVerificationEmailTemplatesCommandError = function deserializeAws_restJson1ListCustomVerificationEmailTemplatesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"TooManyRequestsException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListDedicatedIpPoolsCommand = function deserializeAws_restJson1ListDedicatedIpPoolsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1ListDedicatedIpPoolsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DedicatedIpPools: undefined,\n            NextToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.DedicatedIpPools !== undefined && data.DedicatedIpPools !== null) {\n            contents.DedicatedIpPools = deserializeAws_restJson1ListOfDedicatedIpPools(data.DedicatedIpPools, context);\n          }\n\n          if (data.NextToken !== undefined && data.NextToken !== null) {\n            contents.NextToken = __expectString(data.NextToken);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListDedicatedIpPoolsCommandError = function deserializeAws_restJson1ListDedicatedIpPoolsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"TooManyRequestsException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListDeliverabilityTestReportsCommand = function deserializeAws_restJson1ListDeliverabilityTestReportsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1ListDeliverabilityTestReportsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DeliverabilityTestReports: undefined,\n            NextToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.DeliverabilityTestReports !== undefined && data.DeliverabilityTestReports !== null) {\n            contents.DeliverabilityTestReports = deserializeAws_restJson1DeliverabilityTestReports(data.DeliverabilityTestReports, context);\n          }\n\n          if (data.NextToken !== undefined && data.NextToken !== null) {\n            contents.NextToken = __expectString(data.NextToken);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListDeliverabilityTestReportsCommandError = function deserializeAws_restJson1ListDeliverabilityTestReportsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListDomainDeliverabilityCampaignsCommand = function deserializeAws_restJson1ListDomainDeliverabilityCampaignsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1ListDomainDeliverabilityCampaignsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DomainDeliverabilityCampaigns: undefined,\n            NextToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.DomainDeliverabilityCampaigns !== undefined && data.DomainDeliverabilityCampaigns !== null) {\n            contents.DomainDeliverabilityCampaigns = deserializeAws_restJson1DomainDeliverabilityCampaignList(data.DomainDeliverabilityCampaigns, context);\n          }\n\n          if (data.NextToken !== undefined && data.NextToken !== null) {\n            contents.NextToken = __expectString(data.NextToken);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListDomainDeliverabilityCampaignsCommandError = function deserializeAws_restJson1ListDomainDeliverabilityCampaignsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListEmailIdentitiesCommand = function deserializeAws_restJson1ListEmailIdentitiesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1ListEmailIdentitiesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EmailIdentities: undefined,\n            NextToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.EmailIdentities !== undefined && data.EmailIdentities !== null) {\n            contents.EmailIdentities = deserializeAws_restJson1IdentityInfoList(data.EmailIdentities, context);\n          }\n\n          if (data.NextToken !== undefined && data.NextToken !== null) {\n            contents.NextToken = __expectString(data.NextToken);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListEmailIdentitiesCommandError = function deserializeAws_restJson1ListEmailIdentitiesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"TooManyRequestsException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListEmailTemplatesCommand = function deserializeAws_restJson1ListEmailTemplatesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1ListEmailTemplatesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            NextToken: undefined,\n            TemplatesMetadata: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.NextToken !== undefined && data.NextToken !== null) {\n            contents.NextToken = __expectString(data.NextToken);\n          }\n\n          if (data.TemplatesMetadata !== undefined && data.TemplatesMetadata !== null) {\n            contents.TemplatesMetadata = deserializeAws_restJson1EmailTemplateMetadataList(data.TemplatesMetadata, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListEmailTemplatesCommandError = function deserializeAws_restJson1ListEmailTemplatesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"TooManyRequestsException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListImportJobsCommand = function deserializeAws_restJson1ListImportJobsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1ListImportJobsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ImportJobs: undefined,\n            NextToken: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.ImportJobs !== undefined && data.ImportJobs !== null) {\n            contents.ImportJobs = deserializeAws_restJson1ImportJobSummaryList(data.ImportJobs, context);\n          }\n\n          if (data.NextToken !== undefined && data.NextToken !== null) {\n            contents.NextToken = __expectString(data.NextToken);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListImportJobsCommandError = function deserializeAws_restJson1ListImportJobsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"TooManyRequestsException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListSuppressedDestinationsCommand = function deserializeAws_restJson1ListSuppressedDestinationsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1ListSuppressedDestinationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            NextToken: undefined,\n            SuppressedDestinationSummaries: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.NextToken !== undefined && data.NextToken !== null) {\n            contents.NextToken = __expectString(data.NextToken);\n          }\n\n          if (data.SuppressedDestinationSummaries !== undefined && data.SuppressedDestinationSummaries !== null) {\n            contents.SuppressedDestinationSummaries = deserializeAws_restJson1SuppressedDestinationSummaries(data.SuppressedDestinationSummaries, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListSuppressedDestinationsCommandError = function deserializeAws_restJson1ListSuppressedDestinationsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"InvalidNextTokenException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#InvalidNextTokenException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1InvalidNextTokenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListTagsForResourceCommand = function deserializeAws_restJson1ListTagsForResourceCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1ListTagsForResourceCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Tags: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.Tags !== undefined && data.Tags !== null) {\n            contents.Tags = deserializeAws_restJson1TagList(data.Tags, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListTagsForResourceCommandError = function deserializeAws_restJson1ListTagsForResourceCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutAccountDedicatedIpWarmupAttributesCommand = function deserializeAws_restJson1PutAccountDedicatedIpWarmupAttributesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutAccountDedicatedIpWarmupAttributesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutAccountDedicatedIpWarmupAttributesCommandError = function deserializeAws_restJson1PutAccountDedicatedIpWarmupAttributesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"TooManyRequestsException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutAccountDetailsCommand = function deserializeAws_restJson1PutAccountDetailsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutAccountDetailsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutAccountDetailsCommandError = function deserializeAws_restJson1PutAccountDetailsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"ConflictException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#ConflictException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutAccountSendingAttributesCommand = function deserializeAws_restJson1PutAccountSendingAttributesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutAccountSendingAttributesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutAccountSendingAttributesCommandError = function deserializeAws_restJson1PutAccountSendingAttributesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"TooManyRequestsException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutAccountSuppressionAttributesCommand = function deserializeAws_restJson1PutAccountSuppressionAttributesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutAccountSuppressionAttributesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutAccountSuppressionAttributesCommandError = function deserializeAws_restJson1PutAccountSuppressionAttributesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"TooManyRequestsException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutConfigurationSetDeliveryOptionsCommand = function deserializeAws_restJson1PutConfigurationSetDeliveryOptionsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutConfigurationSetDeliveryOptionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutConfigurationSetDeliveryOptionsCommandError = function deserializeAws_restJson1PutConfigurationSetDeliveryOptionsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutConfigurationSetReputationOptionsCommand = function deserializeAws_restJson1PutConfigurationSetReputationOptionsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutConfigurationSetReputationOptionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutConfigurationSetReputationOptionsCommandError = function deserializeAws_restJson1PutConfigurationSetReputationOptionsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutConfigurationSetSendingOptionsCommand = function deserializeAws_restJson1PutConfigurationSetSendingOptionsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutConfigurationSetSendingOptionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutConfigurationSetSendingOptionsCommandError = function deserializeAws_restJson1PutConfigurationSetSendingOptionsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutConfigurationSetSuppressionOptionsCommand = function deserializeAws_restJson1PutConfigurationSetSuppressionOptionsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutConfigurationSetSuppressionOptionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutConfigurationSetSuppressionOptionsCommandError = function deserializeAws_restJson1PutConfigurationSetSuppressionOptionsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutConfigurationSetTrackingOptionsCommand = function deserializeAws_restJson1PutConfigurationSetTrackingOptionsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutConfigurationSetTrackingOptionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutConfigurationSetTrackingOptionsCommandError = function deserializeAws_restJson1PutConfigurationSetTrackingOptionsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutDedicatedIpInPoolCommand = function deserializeAws_restJson1PutDedicatedIpInPoolCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutDedicatedIpInPoolCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutDedicatedIpInPoolCommandError = function deserializeAws_restJson1PutDedicatedIpInPoolCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutDedicatedIpWarmupAttributesCommand = function deserializeAws_restJson1PutDedicatedIpWarmupAttributesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutDedicatedIpWarmupAttributesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutDedicatedIpWarmupAttributesCommandError = function deserializeAws_restJson1PutDedicatedIpWarmupAttributesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutDeliverabilityDashboardOptionCommand = function deserializeAws_restJson1PutDeliverabilityDashboardOptionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutDeliverabilityDashboardOptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutDeliverabilityDashboardOptionCommandError = function deserializeAws_restJson1PutDeliverabilityDashboardOptionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AlreadyExistsException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#AlreadyExistsException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 4];\n\n            case \"LimitExceededException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#LimitExceededException\":\n              return [3, 6];\n\n            case \"NotFoundException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 8];\n\n            case \"TooManyRequestsException\":\n              return [3, 10];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 10];\n          }\n\n          return [3, 12];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 10:\n          _g = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutEmailIdentityConfigurationSetAttributesCommand = function deserializeAws_restJson1PutEmailIdentityConfigurationSetAttributesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutEmailIdentityConfigurationSetAttributesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutEmailIdentityConfigurationSetAttributesCommandError = function deserializeAws_restJson1PutEmailIdentityConfigurationSetAttributesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutEmailIdentityDkimAttributesCommand = function deserializeAws_restJson1PutEmailIdentityDkimAttributesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutEmailIdentityDkimAttributesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutEmailIdentityDkimAttributesCommandError = function deserializeAws_restJson1PutEmailIdentityDkimAttributesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutEmailIdentityDkimSigningAttributesCommand = function deserializeAws_restJson1PutEmailIdentityDkimSigningAttributesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutEmailIdentityDkimSigningAttributesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DkimStatus: undefined,\n            DkimTokens: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.DkimStatus !== undefined && data.DkimStatus !== null) {\n            contents.DkimStatus = __expectString(data.DkimStatus);\n          }\n\n          if (data.DkimTokens !== undefined && data.DkimTokens !== null) {\n            contents.DkimTokens = deserializeAws_restJson1DnsTokenList(data.DkimTokens, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutEmailIdentityDkimSigningAttributesCommandError = function deserializeAws_restJson1PutEmailIdentityDkimSigningAttributesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutEmailIdentityFeedbackAttributesCommand = function deserializeAws_restJson1PutEmailIdentityFeedbackAttributesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutEmailIdentityFeedbackAttributesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutEmailIdentityFeedbackAttributesCommandError = function deserializeAws_restJson1PutEmailIdentityFeedbackAttributesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutEmailIdentityMailFromAttributesCommand = function deserializeAws_restJson1PutEmailIdentityMailFromAttributesCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutEmailIdentityMailFromAttributesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutEmailIdentityMailFromAttributesCommandError = function deserializeAws_restJson1PutEmailIdentityMailFromAttributesCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutSuppressedDestinationCommand = function deserializeAws_restJson1PutSuppressedDestinationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1PutSuppressedDestinationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutSuppressedDestinationCommandError = function deserializeAws_restJson1PutSuppressedDestinationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"TooManyRequestsException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 4];\n          }\n\n          return [3, 6];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1SendBulkEmailCommand = function deserializeAws_restJson1SendBulkEmailCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1SendBulkEmailCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BulkEmailEntryResults: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.BulkEmailEntryResults !== undefined && data.BulkEmailEntryResults !== null) {\n            contents.BulkEmailEntryResults = deserializeAws_restJson1BulkEmailEntryResultList(data.BulkEmailEntryResults, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1SendBulkEmailCommandError = function deserializeAws_restJson1SendBulkEmailCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n\n    var _l;\n\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccountSuspendedException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#AccountSuspendedException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 4];\n\n            case \"LimitExceededException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#LimitExceededException\":\n              return [3, 6];\n\n            case \"MailFromDomainNotVerifiedException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#MailFromDomainNotVerifiedException\":\n              return [3, 8];\n\n            case \"MessageRejected\":\n              return [3, 10];\n\n            case \"com.amazonaws.sesv2#MessageRejected\":\n              return [3, 10];\n\n            case \"NotFoundException\":\n              return [3, 12];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 12];\n\n            case \"SendingPausedException\":\n              return [3, 14];\n\n            case \"com.amazonaws.sesv2#SendingPausedException\":\n              return [3, 14];\n\n            case \"TooManyRequestsException\":\n              return [3, 16];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 16];\n          }\n\n          return [3, 18];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1AccountSuspendedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1MailFromDomainNotVerifiedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 10:\n          _g = [{}];\n          return [4, deserializeAws_restJson1MessageRejectedResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 12:\n          _h = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 14:\n          _j = [{}];\n          return [4, deserializeAws_restJson1SendingPausedExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 16:\n          _k = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1SendCustomVerificationEmailCommand = function deserializeAws_restJson1SendCustomVerificationEmailCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1SendCustomVerificationEmailCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageId: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.MessageId !== undefined && data.MessageId !== null) {\n            contents.MessageId = __expectString(data.MessageId);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1SendCustomVerificationEmailCommandError = function deserializeAws_restJson1SendCustomVerificationEmailCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"LimitExceededException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#LimitExceededException\":\n              return [3, 4];\n\n            case \"MailFromDomainNotVerifiedException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#MailFromDomainNotVerifiedException\":\n              return [3, 6];\n\n            case \"MessageRejected\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#MessageRejected\":\n              return [3, 8];\n\n            case \"NotFoundException\":\n              return [3, 10];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 10];\n\n            case \"SendingPausedException\":\n              return [3, 12];\n\n            case \"com.amazonaws.sesv2#SendingPausedException\":\n              return [3, 12];\n\n            case \"TooManyRequestsException\":\n              return [3, 14];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 14];\n          }\n\n          return [3, 16];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 17];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 17];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1MailFromDomainNotVerifiedExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 17];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1MessageRejectedResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 17];\n\n        case 10:\n          _g = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 17];\n\n        case 12:\n          _h = [{}];\n          return [4, deserializeAws_restJson1SendingPausedExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 17];\n\n        case 14:\n          _j = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1SendEmailCommand = function deserializeAws_restJson1SendEmailCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1SendEmailCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageId: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.MessageId !== undefined && data.MessageId !== null) {\n            contents.MessageId = __expectString(data.MessageId);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1SendEmailCommandError = function deserializeAws_restJson1SendEmailCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n\n    var _l;\n\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccountSuspendedException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#AccountSuspendedException\":\n              return [3, 2];\n\n            case \"BadRequestException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 4];\n\n            case \"LimitExceededException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#LimitExceededException\":\n              return [3, 6];\n\n            case \"MailFromDomainNotVerifiedException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#MailFromDomainNotVerifiedException\":\n              return [3, 8];\n\n            case \"MessageRejected\":\n              return [3, 10];\n\n            case \"com.amazonaws.sesv2#MessageRejected\":\n              return [3, 10];\n\n            case \"NotFoundException\":\n              return [3, 12];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 12];\n\n            case \"SendingPausedException\":\n              return [3, 14];\n\n            case \"com.amazonaws.sesv2#SendingPausedException\":\n              return [3, 14];\n\n            case \"TooManyRequestsException\":\n              return [3, 16];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 16];\n          }\n\n          return [3, 18];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1AccountSuspendedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1MailFromDomainNotVerifiedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 10:\n          _g = [{}];\n          return [4, deserializeAws_restJson1MessageRejectedResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 12:\n          _h = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 14:\n          _j = [{}];\n          return [4, deserializeAws_restJson1SendingPausedExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 16:\n          _k = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 19];\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1TagResourceCommand = function deserializeAws_restJson1TagResourceCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1TagResourceCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1TagResourceCommandError = function deserializeAws_restJson1TagResourceCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"NotFoundException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 6];\n\n            case \"TooManyRequestsException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 8];\n          }\n\n          return [3, 10];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1TestRenderEmailTemplateCommand = function deserializeAws_restJson1TestRenderEmailTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1TestRenderEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RenderedTemplate: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.RenderedTemplate !== undefined && data.RenderedTemplate !== null) {\n            contents.RenderedTemplate = __expectString(data.RenderedTemplate);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1TestRenderEmailTemplateCommandError = function deserializeAws_restJson1TestRenderEmailTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UntagResourceCommand = function deserializeAws_restJson1UntagResourceCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1UntagResourceCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UntagResourceCommandError = function deserializeAws_restJson1UntagResourceCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"NotFoundException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 6];\n\n            case \"TooManyRequestsException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 8];\n          }\n\n          return [3, 10];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateConfigurationSetEventDestinationCommand = function deserializeAws_restJson1UpdateConfigurationSetEventDestinationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1UpdateConfigurationSetEventDestinationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateConfigurationSetEventDestinationCommandError = function deserializeAws_restJson1UpdateConfigurationSetEventDestinationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateContactCommand = function deserializeAws_restJson1UpdateContactCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1UpdateContactCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateContactCommandError = function deserializeAws_restJson1UpdateContactCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"NotFoundException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 6];\n\n            case \"TooManyRequestsException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 8];\n          }\n\n          return [3, 10];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateContactListCommand = function deserializeAws_restJson1UpdateContactListCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1UpdateContactListCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateContactListCommandError = function deserializeAws_restJson1UpdateContactListCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#ConcurrentModificationException\":\n              return [3, 4];\n\n            case \"NotFoundException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 6];\n\n            case \"TooManyRequestsException\":\n              return [3, 8];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 8];\n          }\n\n          return [3, 10];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 8:\n          _f = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateCustomVerificationEmailTemplateCommand = function deserializeAws_restJson1UpdateCustomVerificationEmailTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1UpdateCustomVerificationEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateCustomVerificationEmailTemplateCommandError = function deserializeAws_restJson1UpdateCustomVerificationEmailTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateEmailIdentityPolicyCommand = function deserializeAws_restJson1UpdateEmailIdentityPolicyCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1UpdateEmailIdentityPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateEmailIdentityPolicyCommandError = function deserializeAws_restJson1UpdateEmailIdentityPolicyCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateEmailTemplateCommand = function deserializeAws_restJson1UpdateEmailTemplateCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1UpdateEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4, collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateEmailTemplateCommandError = function deserializeAws_restJson1UpdateEmailTemplateCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3, 2];\n\n            case \"com.amazonaws.sesv2#BadRequestException\":\n              return [3, 2];\n\n            case \"NotFoundException\":\n              return [3, 4];\n\n            case \"com.amazonaws.sesv2#NotFoundException\":\n              return [3, 4];\n\n            case \"TooManyRequestsException\":\n              return [3, 6];\n\n            case \"com.amazonaws.sesv2#TooManyRequestsException\":\n              return [3, 6];\n          }\n\n          return [3, 8];\n\n        case 2:\n          _c = [{}];\n          return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 4:\n          _d = [{}];\n          return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 6:\n          _e = [{}];\n          return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3, 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1AccountSuspendedExceptionResponse = function deserializeAws_restJson1AccountSuspendedExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"AccountSuspendedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1AlreadyExistsExceptionResponse = function deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"AlreadyExistsException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1BadRequestExceptionResponse = function deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BadRequestException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ConcurrentModificationExceptionResponse = function deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ConcurrentModificationException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ConflictExceptionResponse = function deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ConflictException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1InvalidNextTokenExceptionResponse = function deserializeAws_restJson1InvalidNextTokenExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InvalidNextTokenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1LimitExceededExceptionResponse = function deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"LimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1MailFromDomainNotVerifiedExceptionResponse = function deserializeAws_restJson1MailFromDomainNotVerifiedExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"MailFromDomainNotVerifiedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1MessageRejectedResponse = function deserializeAws_restJson1MessageRejectedResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"MessageRejected\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1NotFoundExceptionResponse = function deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1SendingPausedExceptionResponse = function deserializeAws_restJson1SendingPausedExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"SendingPausedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2, contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1TooManyRequestsExceptionResponse = function deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"TooManyRequestsException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      return [2, contents];\n    });\n  });\n};\n\nvar serializeAws_restJson1AdditionalContactEmailAddresses = function serializeAws_restJson1AdditionalContactEmailAddresses(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_restJson1Body = function serializeAws_restJson1Body(input, context) {\n  return __assign(__assign({}, input.Html !== undefined && input.Html !== null && {\n    Html: serializeAws_restJson1Content(input.Html, context)\n  }), input.Text !== undefined && input.Text !== null && {\n    Text: serializeAws_restJson1Content(input.Text, context)\n  });\n};\n\nvar serializeAws_restJson1BulkEmailContent = function serializeAws_restJson1BulkEmailContent(input, context) {\n  return __assign({}, input.Template !== undefined && input.Template !== null && {\n    Template: serializeAws_restJson1Template(input.Template, context)\n  });\n};\n\nvar serializeAws_restJson1BulkEmailEntry = function serializeAws_restJson1BulkEmailEntry(input, context) {\n  return __assign(__assign(__assign({}, input.Destination !== undefined && input.Destination !== null && {\n    Destination: serializeAws_restJson1Destination(input.Destination, context)\n  }), input.ReplacementEmailContent !== undefined && input.ReplacementEmailContent !== null && {\n    ReplacementEmailContent: serializeAws_restJson1ReplacementEmailContent(input.ReplacementEmailContent, context)\n  }), input.ReplacementTags !== undefined && input.ReplacementTags !== null && {\n    ReplacementTags: serializeAws_restJson1MessageTagList(input.ReplacementTags, context)\n  });\n};\n\nvar serializeAws_restJson1BulkEmailEntryList = function serializeAws_restJson1BulkEmailEntryList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1BulkEmailEntry(entry, context);\n  });\n};\n\nvar serializeAws_restJson1CloudWatchDestination = function serializeAws_restJson1CloudWatchDestination(input, context) {\n  return __assign({}, input.DimensionConfigurations !== undefined && input.DimensionConfigurations !== null && {\n    DimensionConfigurations: serializeAws_restJson1CloudWatchDimensionConfigurations(input.DimensionConfigurations, context)\n  });\n};\n\nvar serializeAws_restJson1CloudWatchDimensionConfiguration = function serializeAws_restJson1CloudWatchDimensionConfiguration(input, context) {\n  return __assign(__assign(__assign({}, input.DefaultDimensionValue !== undefined && input.DefaultDimensionValue !== null && {\n    DefaultDimensionValue: input.DefaultDimensionValue\n  }), input.DimensionName !== undefined && input.DimensionName !== null && {\n    DimensionName: input.DimensionName\n  }), input.DimensionValueSource !== undefined && input.DimensionValueSource !== null && {\n    DimensionValueSource: input.DimensionValueSource\n  });\n};\n\nvar serializeAws_restJson1CloudWatchDimensionConfigurations = function serializeAws_restJson1CloudWatchDimensionConfigurations(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1CloudWatchDimensionConfiguration(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ContactListDestination = function serializeAws_restJson1ContactListDestination(input, context) {\n  return __assign(__assign({}, input.ContactListImportAction !== undefined && input.ContactListImportAction !== null && {\n    ContactListImportAction: input.ContactListImportAction\n  }), input.ContactListName !== undefined && input.ContactListName !== null && {\n    ContactListName: input.ContactListName\n  });\n};\n\nvar serializeAws_restJson1Content = function serializeAws_restJson1Content(input, context) {\n  return __assign(__assign({}, input.Charset !== undefined && input.Charset !== null && {\n    Charset: input.Charset\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: input.Data\n  });\n};\n\nvar serializeAws_restJson1DeliveryOptions = function serializeAws_restJson1DeliveryOptions(input, context) {\n  return __assign(__assign({}, input.SendingPoolName !== undefined && input.SendingPoolName !== null && {\n    SendingPoolName: input.SendingPoolName\n  }), input.TlsPolicy !== undefined && input.TlsPolicy !== null && {\n    TlsPolicy: input.TlsPolicy\n  });\n};\n\nvar serializeAws_restJson1Destination = function serializeAws_restJson1Destination(input, context) {\n  return __assign(__assign(__assign({}, input.BccAddresses !== undefined && input.BccAddresses !== null && {\n    BccAddresses: serializeAws_restJson1EmailAddressList(input.BccAddresses, context)\n  }), input.CcAddresses !== undefined && input.CcAddresses !== null && {\n    CcAddresses: serializeAws_restJson1EmailAddressList(input.CcAddresses, context)\n  }), input.ToAddresses !== undefined && input.ToAddresses !== null && {\n    ToAddresses: serializeAws_restJson1EmailAddressList(input.ToAddresses, context)\n  });\n};\n\nvar serializeAws_restJson1DkimSigningAttributes = function serializeAws_restJson1DkimSigningAttributes(input, context) {\n  return __assign(__assign(__assign({}, input.DomainSigningPrivateKey !== undefined && input.DomainSigningPrivateKey !== null && {\n    DomainSigningPrivateKey: input.DomainSigningPrivateKey\n  }), input.DomainSigningSelector !== undefined && input.DomainSigningSelector !== null && {\n    DomainSigningSelector: input.DomainSigningSelector\n  }), input.NextSigningKeyLength !== undefined && input.NextSigningKeyLength !== null && {\n    NextSigningKeyLength: input.NextSigningKeyLength\n  });\n};\n\nvar serializeAws_restJson1DomainDeliverabilityTrackingOption = function serializeAws_restJson1DomainDeliverabilityTrackingOption(input, context) {\n  return __assign(__assign(__assign({}, input.Domain !== undefined && input.Domain !== null && {\n    Domain: input.Domain\n  }), input.InboxPlacementTrackingOption !== undefined && input.InboxPlacementTrackingOption !== null && {\n    InboxPlacementTrackingOption: serializeAws_restJson1InboxPlacementTrackingOption(input.InboxPlacementTrackingOption, context)\n  }), input.SubscriptionStartDate !== undefined && input.SubscriptionStartDate !== null && {\n    SubscriptionStartDate: Math.round(input.SubscriptionStartDate.getTime() / 1000)\n  });\n};\n\nvar serializeAws_restJson1DomainDeliverabilityTrackingOptions = function serializeAws_restJson1DomainDeliverabilityTrackingOptions(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1DomainDeliverabilityTrackingOption(entry, context);\n  });\n};\n\nvar serializeAws_restJson1EmailAddressList = function serializeAws_restJson1EmailAddressList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_restJson1EmailContent = function serializeAws_restJson1EmailContent(input, context) {\n  return __assign(__assign(__assign({}, input.Raw !== undefined && input.Raw !== null && {\n    Raw: serializeAws_restJson1RawMessage(input.Raw, context)\n  }), input.Simple !== undefined && input.Simple !== null && {\n    Simple: serializeAws_restJson1Message(input.Simple, context)\n  }), input.Template !== undefined && input.Template !== null && {\n    Template: serializeAws_restJson1Template(input.Template, context)\n  });\n};\n\nvar serializeAws_restJson1EmailTemplateContent = function serializeAws_restJson1EmailTemplateContent(input, context) {\n  return __assign(__assign(__assign({}, input.Html !== undefined && input.Html !== null && {\n    Html: input.Html\n  }), input.Subject !== undefined && input.Subject !== null && {\n    Subject: input.Subject\n  }), input.Text !== undefined && input.Text !== null && {\n    Text: input.Text\n  });\n};\n\nvar serializeAws_restJson1EventDestinationDefinition = function serializeAws_restJson1EventDestinationDefinition(input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.CloudWatchDestination !== undefined && input.CloudWatchDestination !== null && {\n    CloudWatchDestination: serializeAws_restJson1CloudWatchDestination(input.CloudWatchDestination, context)\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.KinesisFirehoseDestination !== undefined && input.KinesisFirehoseDestination !== null && {\n    KinesisFirehoseDestination: serializeAws_restJson1KinesisFirehoseDestination(input.KinesisFirehoseDestination, context)\n  }), input.MatchingEventTypes !== undefined && input.MatchingEventTypes !== null && {\n    MatchingEventTypes: serializeAws_restJson1EventTypes(input.MatchingEventTypes, context)\n  }), input.PinpointDestination !== undefined && input.PinpointDestination !== null && {\n    PinpointDestination: serializeAws_restJson1PinpointDestination(input.PinpointDestination, context)\n  }), input.SnsDestination !== undefined && input.SnsDestination !== null && {\n    SnsDestination: serializeAws_restJson1SnsDestination(input.SnsDestination, context)\n  });\n};\n\nvar serializeAws_restJson1EventTypes = function serializeAws_restJson1EventTypes(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_restJson1ImportDataSource = function serializeAws_restJson1ImportDataSource(input, context) {\n  return __assign(__assign({}, input.DataFormat !== undefined && input.DataFormat !== null && {\n    DataFormat: input.DataFormat\n  }), input.S3Url !== undefined && input.S3Url !== null && {\n    S3Url: input.S3Url\n  });\n};\n\nvar serializeAws_restJson1ImportDestination = function serializeAws_restJson1ImportDestination(input, context) {\n  return __assign(__assign({}, input.ContactListDestination !== undefined && input.ContactListDestination !== null && {\n    ContactListDestination: serializeAws_restJson1ContactListDestination(input.ContactListDestination, context)\n  }), input.SuppressionListDestination !== undefined && input.SuppressionListDestination !== null && {\n    SuppressionListDestination: serializeAws_restJson1SuppressionListDestination(input.SuppressionListDestination, context)\n  });\n};\n\nvar serializeAws_restJson1InboxPlacementTrackingOption = function serializeAws_restJson1InboxPlacementTrackingOption(input, context) {\n  return __assign(__assign({}, input.Global !== undefined && input.Global !== null && {\n    Global: input.Global\n  }), input.TrackedIsps !== undefined && input.TrackedIsps !== null && {\n    TrackedIsps: serializeAws_restJson1IspNameList(input.TrackedIsps, context)\n  });\n};\n\nvar serializeAws_restJson1IspNameList = function serializeAws_restJson1IspNameList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_restJson1KinesisFirehoseDestination = function serializeAws_restJson1KinesisFirehoseDestination(input, context) {\n  return __assign(__assign({}, input.DeliveryStreamArn !== undefined && input.DeliveryStreamArn !== null && {\n    DeliveryStreamArn: input.DeliveryStreamArn\n  }), input.IamRoleArn !== undefined && input.IamRoleArn !== null && {\n    IamRoleArn: input.IamRoleArn\n  });\n};\n\nvar serializeAws_restJson1ListContactsFilter = function serializeAws_restJson1ListContactsFilter(input, context) {\n  return __assign(__assign({}, input.FilteredStatus !== undefined && input.FilteredStatus !== null && {\n    FilteredStatus: input.FilteredStatus\n  }), input.TopicFilter !== undefined && input.TopicFilter !== null && {\n    TopicFilter: serializeAws_restJson1TopicFilter(input.TopicFilter, context)\n  });\n};\n\nvar serializeAws_restJson1ListManagementOptions = function serializeAws_restJson1ListManagementOptions(input, context) {\n  return __assign(__assign({}, input.ContactListName !== undefined && input.ContactListName !== null && {\n    ContactListName: input.ContactListName\n  }), input.TopicName !== undefined && input.TopicName !== null && {\n    TopicName: input.TopicName\n  });\n};\n\nvar serializeAws_restJson1Message = function serializeAws_restJson1Message(input, context) {\n  return __assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: serializeAws_restJson1Body(input.Body, context)\n  }), input.Subject !== undefined && input.Subject !== null && {\n    Subject: serializeAws_restJson1Content(input.Subject, context)\n  });\n};\n\nvar serializeAws_restJson1MessageTag = function serializeAws_restJson1MessageTag(input, context) {\n  return __assign(__assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.Value !== undefined && input.Value !== null && {\n    Value: input.Value\n  });\n};\n\nvar serializeAws_restJson1MessageTagList = function serializeAws_restJson1MessageTagList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1MessageTag(entry, context);\n  });\n};\n\nvar serializeAws_restJson1PinpointDestination = function serializeAws_restJson1PinpointDestination(input, context) {\n  return __assign({}, input.ApplicationArn !== undefined && input.ApplicationArn !== null && {\n    ApplicationArn: input.ApplicationArn\n  });\n};\n\nvar serializeAws_restJson1RawMessage = function serializeAws_restJson1RawMessage(input, context) {\n  return __assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: context.base64Encoder(input.Data)\n  });\n};\n\nvar serializeAws_restJson1ReplacementEmailContent = function serializeAws_restJson1ReplacementEmailContent(input, context) {\n  return __assign({}, input.ReplacementTemplate !== undefined && input.ReplacementTemplate !== null && {\n    ReplacementTemplate: serializeAws_restJson1ReplacementTemplate(input.ReplacementTemplate, context)\n  });\n};\n\nvar serializeAws_restJson1ReplacementTemplate = function serializeAws_restJson1ReplacementTemplate(input, context) {\n  return __assign({}, input.ReplacementTemplateData !== undefined && input.ReplacementTemplateData !== null && {\n    ReplacementTemplateData: input.ReplacementTemplateData\n  });\n};\n\nvar serializeAws_restJson1ReputationOptions = function serializeAws_restJson1ReputationOptions(input, context) {\n  return __assign(__assign({}, input.LastFreshStart !== undefined && input.LastFreshStart !== null && {\n    LastFreshStart: Math.round(input.LastFreshStart.getTime() / 1000)\n  }), input.ReputationMetricsEnabled !== undefined && input.ReputationMetricsEnabled !== null && {\n    ReputationMetricsEnabled: input.ReputationMetricsEnabled\n  });\n};\n\nvar serializeAws_restJson1SendingOptions = function serializeAws_restJson1SendingOptions(input, context) {\n  return __assign({}, input.SendingEnabled !== undefined && input.SendingEnabled !== null && {\n    SendingEnabled: input.SendingEnabled\n  });\n};\n\nvar serializeAws_restJson1SnsDestination = function serializeAws_restJson1SnsDestination(input, context) {\n  return __assign({}, input.TopicArn !== undefined && input.TopicArn !== null && {\n    TopicArn: input.TopicArn\n  });\n};\n\nvar serializeAws_restJson1SuppressionListDestination = function serializeAws_restJson1SuppressionListDestination(input, context) {\n  return __assign({}, input.SuppressionListImportAction !== undefined && input.SuppressionListImportAction !== null && {\n    SuppressionListImportAction: input.SuppressionListImportAction\n  });\n};\n\nvar serializeAws_restJson1SuppressionListReasons = function serializeAws_restJson1SuppressionListReasons(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_restJson1SuppressionOptions = function serializeAws_restJson1SuppressionOptions(input, context) {\n  return __assign({}, input.SuppressedReasons !== undefined && input.SuppressedReasons !== null && {\n    SuppressedReasons: serializeAws_restJson1SuppressionListReasons(input.SuppressedReasons, context)\n  });\n};\n\nvar serializeAws_restJson1Tag = function serializeAws_restJson1Tag(input, context) {\n  return __assign(__assign({}, input.Key !== undefined && input.Key !== null && {\n    Key: input.Key\n  }), input.Value !== undefined && input.Value !== null && {\n    Value: input.Value\n  });\n};\n\nvar serializeAws_restJson1TagList = function serializeAws_restJson1TagList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1Tag(entry, context);\n  });\n};\n\nvar serializeAws_restJson1Template = function serializeAws_restJson1Template(input, context) {\n  return __assign(__assign(__assign({}, input.TemplateArn !== undefined && input.TemplateArn !== null && {\n    TemplateArn: input.TemplateArn\n  }), input.TemplateData !== undefined && input.TemplateData !== null && {\n    TemplateData: input.TemplateData\n  }), input.TemplateName !== undefined && input.TemplateName !== null && {\n    TemplateName: input.TemplateName\n  });\n};\n\nvar serializeAws_restJson1Topic = function serializeAws_restJson1Topic(input, context) {\n  return __assign(__assign(__assign(__assign({}, input.DefaultSubscriptionStatus !== undefined && input.DefaultSubscriptionStatus !== null && {\n    DefaultSubscriptionStatus: input.DefaultSubscriptionStatus\n  }), input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.DisplayName !== undefined && input.DisplayName !== null && {\n    DisplayName: input.DisplayName\n  }), input.TopicName !== undefined && input.TopicName !== null && {\n    TopicName: input.TopicName\n  });\n};\n\nvar serializeAws_restJson1TopicFilter = function serializeAws_restJson1TopicFilter(input, context) {\n  return __assign(__assign({}, input.TopicName !== undefined && input.TopicName !== null && {\n    TopicName: input.TopicName\n  }), input.UseDefaultIfPreferenceUnavailable !== undefined && input.UseDefaultIfPreferenceUnavailable !== null && {\n    UseDefaultIfPreferenceUnavailable: input.UseDefaultIfPreferenceUnavailable\n  });\n};\n\nvar serializeAws_restJson1TopicPreference = function serializeAws_restJson1TopicPreference(input, context) {\n  return __assign(__assign({}, input.SubscriptionStatus !== undefined && input.SubscriptionStatus !== null && {\n    SubscriptionStatus: input.SubscriptionStatus\n  }), input.TopicName !== undefined && input.TopicName !== null && {\n    TopicName: input.TopicName\n  });\n};\n\nvar serializeAws_restJson1TopicPreferenceList = function serializeAws_restJson1TopicPreferenceList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1TopicPreference(entry, context);\n  });\n};\n\nvar serializeAws_restJson1Topics = function serializeAws_restJson1Topics(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1Topic(entry, context);\n  });\n};\n\nvar serializeAws_restJson1TrackingOptions = function serializeAws_restJson1TrackingOptions(input, context) {\n  return __assign({}, input.CustomRedirectDomain !== undefined && input.CustomRedirectDomain !== null && {\n    CustomRedirectDomain: input.CustomRedirectDomain\n  });\n};\n\nvar deserializeAws_restJson1AccountDetails = function deserializeAws_restJson1AccountDetails(output, context) {\n  return {\n    AdditionalContactEmailAddresses: output.AdditionalContactEmailAddresses !== undefined && output.AdditionalContactEmailAddresses !== null ? deserializeAws_restJson1AdditionalContactEmailAddresses(output.AdditionalContactEmailAddresses, context) : undefined,\n    ContactLanguage: __expectString(output.ContactLanguage),\n    MailType: __expectString(output.MailType),\n    ReviewDetails: output.ReviewDetails !== undefined && output.ReviewDetails !== null ? deserializeAws_restJson1ReviewDetails(output.ReviewDetails, context) : undefined,\n    UseCaseDescription: __expectString(output.UseCaseDescription),\n    WebsiteURL: __expectString(output.WebsiteURL)\n  };\n};\n\nvar deserializeAws_restJson1AdditionalContactEmailAddresses = function deserializeAws_restJson1AdditionalContactEmailAddresses(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restJson1BlacklistEntries = function deserializeAws_restJson1BlacklistEntries(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1BlacklistEntry(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1BlacklistEntry = function deserializeAws_restJson1BlacklistEntry(output, context) {\n  return {\n    Description: __expectString(output.Description),\n    ListingTime: output.ListingTime !== undefined && output.ListingTime !== null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ListingTime))) : undefined,\n    RblName: __expectString(output.RblName)\n  };\n};\n\nvar deserializeAws_restJson1BlacklistReport = function deserializeAws_restJson1BlacklistReport(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1BlacklistEntries(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1BulkEmailEntryResult = function deserializeAws_restJson1BulkEmailEntryResult(output, context) {\n  return {\n    Error: __expectString(output.Error),\n    MessageId: __expectString(output.MessageId),\n    Status: __expectString(output.Status)\n  };\n};\n\nvar deserializeAws_restJson1BulkEmailEntryResultList = function deserializeAws_restJson1BulkEmailEntryResultList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1BulkEmailEntryResult(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1CloudWatchDestination = function deserializeAws_restJson1CloudWatchDestination(output, context) {\n  return {\n    DimensionConfigurations: output.DimensionConfigurations !== undefined && output.DimensionConfigurations !== null ? deserializeAws_restJson1CloudWatchDimensionConfigurations(output.DimensionConfigurations, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1CloudWatchDimensionConfiguration = function deserializeAws_restJson1CloudWatchDimensionConfiguration(output, context) {\n  return {\n    DefaultDimensionValue: __expectString(output.DefaultDimensionValue),\n    DimensionName: __expectString(output.DimensionName),\n    DimensionValueSource: __expectString(output.DimensionValueSource)\n  };\n};\n\nvar deserializeAws_restJson1CloudWatchDimensionConfigurations = function deserializeAws_restJson1CloudWatchDimensionConfigurations(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1CloudWatchDimensionConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ConfigurationSetNameList = function deserializeAws_restJson1ConfigurationSetNameList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restJson1Contact = function deserializeAws_restJson1Contact(output, context) {\n  return {\n    EmailAddress: __expectString(output.EmailAddress),\n    LastUpdatedTimestamp: output.LastUpdatedTimestamp !== undefined && output.LastUpdatedTimestamp !== null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdatedTimestamp))) : undefined,\n    TopicDefaultPreferences: output.TopicDefaultPreferences !== undefined && output.TopicDefaultPreferences !== null ? deserializeAws_restJson1TopicPreferenceList(output.TopicDefaultPreferences, context) : undefined,\n    TopicPreferences: output.TopicPreferences !== undefined && output.TopicPreferences !== null ? deserializeAws_restJson1TopicPreferenceList(output.TopicPreferences, context) : undefined,\n    UnsubscribeAll: __expectBoolean(output.UnsubscribeAll)\n  };\n};\n\nvar deserializeAws_restJson1ContactList = function deserializeAws_restJson1ContactList(output, context) {\n  return {\n    ContactListName: __expectString(output.ContactListName),\n    LastUpdatedTimestamp: output.LastUpdatedTimestamp !== undefined && output.LastUpdatedTimestamp !== null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdatedTimestamp))) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ContactListDestination = function deserializeAws_restJson1ContactListDestination(output, context) {\n  return {\n    ContactListImportAction: __expectString(output.ContactListImportAction),\n    ContactListName: __expectString(output.ContactListName)\n  };\n};\n\nvar deserializeAws_restJson1CustomVerificationEmailTemplateMetadata = function deserializeAws_restJson1CustomVerificationEmailTemplateMetadata(output, context) {\n  return {\n    FailureRedirectionURL: __expectString(output.FailureRedirectionURL),\n    FromEmailAddress: __expectString(output.FromEmailAddress),\n    SuccessRedirectionURL: __expectString(output.SuccessRedirectionURL),\n    TemplateName: __expectString(output.TemplateName),\n    TemplateSubject: __expectString(output.TemplateSubject)\n  };\n};\n\nvar deserializeAws_restJson1CustomVerificationEmailTemplatesList = function deserializeAws_restJson1CustomVerificationEmailTemplatesList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1CustomVerificationEmailTemplateMetadata(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1DailyVolume = function deserializeAws_restJson1DailyVolume(output, context) {\n  return {\n    DomainIspPlacements: output.DomainIspPlacements !== undefined && output.DomainIspPlacements !== null ? deserializeAws_restJson1DomainIspPlacements(output.DomainIspPlacements, context) : undefined,\n    StartDate: output.StartDate !== undefined && output.StartDate !== null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.StartDate))) : undefined,\n    VolumeStatistics: output.VolumeStatistics !== undefined && output.VolumeStatistics !== null ? deserializeAws_restJson1VolumeStatistics(output.VolumeStatistics, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1DailyVolumes = function deserializeAws_restJson1DailyVolumes(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1DailyVolume(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1DedicatedIp = function deserializeAws_restJson1DedicatedIp(output, context) {\n  return {\n    Ip: __expectString(output.Ip),\n    PoolName: __expectString(output.PoolName),\n    WarmupPercentage: __expectInt32(output.WarmupPercentage),\n    WarmupStatus: __expectString(output.WarmupStatus)\n  };\n};\n\nvar deserializeAws_restJson1DedicatedIpList = function deserializeAws_restJson1DedicatedIpList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1DedicatedIp(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1DeliverabilityTestReport = function deserializeAws_restJson1DeliverabilityTestReport(output, context) {\n  return {\n    CreateDate: output.CreateDate !== undefined && output.CreateDate !== null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreateDate))) : undefined,\n    DeliverabilityTestStatus: __expectString(output.DeliverabilityTestStatus),\n    FromEmailAddress: __expectString(output.FromEmailAddress),\n    ReportId: __expectString(output.ReportId),\n    ReportName: __expectString(output.ReportName),\n    Subject: __expectString(output.Subject)\n  };\n};\n\nvar deserializeAws_restJson1DeliverabilityTestReports = function deserializeAws_restJson1DeliverabilityTestReports(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1DeliverabilityTestReport(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1DeliveryOptions = function deserializeAws_restJson1DeliveryOptions(output, context) {\n  return {\n    SendingPoolName: __expectString(output.SendingPoolName),\n    TlsPolicy: __expectString(output.TlsPolicy)\n  };\n};\n\nvar deserializeAws_restJson1DkimAttributes = function deserializeAws_restJson1DkimAttributes(output, context) {\n  return {\n    CurrentSigningKeyLength: __expectString(output.CurrentSigningKeyLength),\n    LastKeyGenerationTimestamp: output.LastKeyGenerationTimestamp !== undefined && output.LastKeyGenerationTimestamp !== null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastKeyGenerationTimestamp))) : undefined,\n    NextSigningKeyLength: __expectString(output.NextSigningKeyLength),\n    SigningAttributesOrigin: __expectString(output.SigningAttributesOrigin),\n    SigningEnabled: __expectBoolean(output.SigningEnabled),\n    Status: __expectString(output.Status),\n    Tokens: output.Tokens !== undefined && output.Tokens !== null ? deserializeAws_restJson1DnsTokenList(output.Tokens, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1DnsTokenList = function deserializeAws_restJson1DnsTokenList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restJson1DomainDeliverabilityCampaign = function deserializeAws_restJson1DomainDeliverabilityCampaign(output, context) {\n  return {\n    CampaignId: __expectString(output.CampaignId),\n    DeleteRate: __limitedParseDouble(output.DeleteRate),\n    Esps: output.Esps !== undefined && output.Esps !== null ? deserializeAws_restJson1Esps(output.Esps, context) : undefined,\n    FirstSeenDateTime: output.FirstSeenDateTime !== undefined && output.FirstSeenDateTime !== null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.FirstSeenDateTime))) : undefined,\n    FromAddress: __expectString(output.FromAddress),\n    ImageUrl: __expectString(output.ImageUrl),\n    InboxCount: __expectLong(output.InboxCount),\n    LastSeenDateTime: output.LastSeenDateTime !== undefined && output.LastSeenDateTime !== null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastSeenDateTime))) : undefined,\n    ProjectedVolume: __expectLong(output.ProjectedVolume),\n    ReadDeleteRate: __limitedParseDouble(output.ReadDeleteRate),\n    ReadRate: __limitedParseDouble(output.ReadRate),\n    SendingIps: output.SendingIps !== undefined && output.SendingIps !== null ? deserializeAws_restJson1IpList(output.SendingIps, context) : undefined,\n    SpamCount: __expectLong(output.SpamCount),\n    Subject: __expectString(output.Subject)\n  };\n};\n\nvar deserializeAws_restJson1DomainDeliverabilityCampaignList = function deserializeAws_restJson1DomainDeliverabilityCampaignList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1DomainDeliverabilityCampaign(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1DomainDeliverabilityTrackingOption = function deserializeAws_restJson1DomainDeliverabilityTrackingOption(output, context) {\n  return {\n    Domain: __expectString(output.Domain),\n    InboxPlacementTrackingOption: output.InboxPlacementTrackingOption !== undefined && output.InboxPlacementTrackingOption !== null ? deserializeAws_restJson1InboxPlacementTrackingOption(output.InboxPlacementTrackingOption, context) : undefined,\n    SubscriptionStartDate: output.SubscriptionStartDate !== undefined && output.SubscriptionStartDate !== null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.SubscriptionStartDate))) : undefined\n  };\n};\n\nvar deserializeAws_restJson1DomainDeliverabilityTrackingOptions = function deserializeAws_restJson1DomainDeliverabilityTrackingOptions(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1DomainDeliverabilityTrackingOption(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1DomainIspPlacement = function deserializeAws_restJson1DomainIspPlacement(output, context) {\n  return {\n    InboxPercentage: __limitedParseDouble(output.InboxPercentage),\n    InboxRawCount: __expectLong(output.InboxRawCount),\n    IspName: __expectString(output.IspName),\n    SpamPercentage: __limitedParseDouble(output.SpamPercentage),\n    SpamRawCount: __expectLong(output.SpamRawCount)\n  };\n};\n\nvar deserializeAws_restJson1DomainIspPlacements = function deserializeAws_restJson1DomainIspPlacements(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1DomainIspPlacement(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1EmailTemplateContent = function deserializeAws_restJson1EmailTemplateContent(output, context) {\n  return {\n    Html: __expectString(output.Html),\n    Subject: __expectString(output.Subject),\n    Text: __expectString(output.Text)\n  };\n};\n\nvar deserializeAws_restJson1EmailTemplateMetadata = function deserializeAws_restJson1EmailTemplateMetadata(output, context) {\n  return {\n    CreatedTimestamp: output.CreatedTimestamp !== undefined && output.CreatedTimestamp !== null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreatedTimestamp))) : undefined,\n    TemplateName: __expectString(output.TemplateName)\n  };\n};\n\nvar deserializeAws_restJson1EmailTemplateMetadataList = function deserializeAws_restJson1EmailTemplateMetadataList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1EmailTemplateMetadata(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1Esps = function deserializeAws_restJson1Esps(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restJson1EventDestination = function deserializeAws_restJson1EventDestination(output, context) {\n  return {\n    CloudWatchDestination: output.CloudWatchDestination !== undefined && output.CloudWatchDestination !== null ? deserializeAws_restJson1CloudWatchDestination(output.CloudWatchDestination, context) : undefined,\n    Enabled: __expectBoolean(output.Enabled),\n    KinesisFirehoseDestination: output.KinesisFirehoseDestination !== undefined && output.KinesisFirehoseDestination !== null ? deserializeAws_restJson1KinesisFirehoseDestination(output.KinesisFirehoseDestination, context) : undefined,\n    MatchingEventTypes: output.MatchingEventTypes !== undefined && output.MatchingEventTypes !== null ? deserializeAws_restJson1EventTypes(output.MatchingEventTypes, context) : undefined,\n    Name: __expectString(output.Name),\n    PinpointDestination: output.PinpointDestination !== undefined && output.PinpointDestination !== null ? deserializeAws_restJson1PinpointDestination(output.PinpointDestination, context) : undefined,\n    SnsDestination: output.SnsDestination !== undefined && output.SnsDestination !== null ? deserializeAws_restJson1SnsDestination(output.SnsDestination, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1EventDestinations = function deserializeAws_restJson1EventDestinations(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1EventDestination(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1EventTypes = function deserializeAws_restJson1EventTypes(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restJson1FailureInfo = function deserializeAws_restJson1FailureInfo(output, context) {\n  return {\n    ErrorMessage: __expectString(output.ErrorMessage),\n    FailedRecordsS3Url: __expectString(output.FailedRecordsS3Url)\n  };\n};\n\nvar deserializeAws_restJson1IdentityInfo = function deserializeAws_restJson1IdentityInfo(output, context) {\n  return {\n    IdentityName: __expectString(output.IdentityName),\n    IdentityType: __expectString(output.IdentityType),\n    SendingEnabled: __expectBoolean(output.SendingEnabled)\n  };\n};\n\nvar deserializeAws_restJson1IdentityInfoList = function deserializeAws_restJson1IdentityInfoList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1IdentityInfo(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ImportDataSource = function deserializeAws_restJson1ImportDataSource(output, context) {\n  return {\n    DataFormat: __expectString(output.DataFormat),\n    S3Url: __expectString(output.S3Url)\n  };\n};\n\nvar deserializeAws_restJson1ImportDestination = function deserializeAws_restJson1ImportDestination(output, context) {\n  return {\n    ContactListDestination: output.ContactListDestination !== undefined && output.ContactListDestination !== null ? deserializeAws_restJson1ContactListDestination(output.ContactListDestination, context) : undefined,\n    SuppressionListDestination: output.SuppressionListDestination !== undefined && output.SuppressionListDestination !== null ? deserializeAws_restJson1SuppressionListDestination(output.SuppressionListDestination, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ImportJobSummary = function deserializeAws_restJson1ImportJobSummary(output, context) {\n  return {\n    CreatedTimestamp: output.CreatedTimestamp !== undefined && output.CreatedTimestamp !== null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreatedTimestamp))) : undefined,\n    ImportDestination: output.ImportDestination !== undefined && output.ImportDestination !== null ? deserializeAws_restJson1ImportDestination(output.ImportDestination, context) : undefined,\n    JobId: __expectString(output.JobId),\n    JobStatus: __expectString(output.JobStatus)\n  };\n};\n\nvar deserializeAws_restJson1ImportJobSummaryList = function deserializeAws_restJson1ImportJobSummaryList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ImportJobSummary(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1InboxPlacementTrackingOption = function deserializeAws_restJson1InboxPlacementTrackingOption(output, context) {\n  return {\n    Global: __expectBoolean(output.Global),\n    TrackedIsps: output.TrackedIsps !== undefined && output.TrackedIsps !== null ? deserializeAws_restJson1IspNameList(output.TrackedIsps, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1IpList = function deserializeAws_restJson1IpList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restJson1IspNameList = function deserializeAws_restJson1IspNameList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restJson1IspPlacement = function deserializeAws_restJson1IspPlacement(output, context) {\n  return {\n    IspName: __expectString(output.IspName),\n    PlacementStatistics: output.PlacementStatistics !== undefined && output.PlacementStatistics !== null ? deserializeAws_restJson1PlacementStatistics(output.PlacementStatistics, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1IspPlacements = function deserializeAws_restJson1IspPlacements(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1IspPlacement(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1KinesisFirehoseDestination = function deserializeAws_restJson1KinesisFirehoseDestination(output, context) {\n  return {\n    DeliveryStreamArn: __expectString(output.DeliveryStreamArn),\n    IamRoleArn: __expectString(output.IamRoleArn)\n  };\n};\n\nvar deserializeAws_restJson1ListOfContactLists = function deserializeAws_restJson1ListOfContactLists(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ContactList(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfContacts = function deserializeAws_restJson1ListOfContacts(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1Contact(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfDedicatedIpPools = function deserializeAws_restJson1ListOfDedicatedIpPools(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restJson1MailFromAttributes = function deserializeAws_restJson1MailFromAttributes(output, context) {\n  return {\n    BehaviorOnMxFailure: __expectString(output.BehaviorOnMxFailure),\n    MailFromDomain: __expectString(output.MailFromDomain),\n    MailFromDomainStatus: __expectString(output.MailFromDomainStatus)\n  };\n};\n\nvar deserializeAws_restJson1OverallVolume = function deserializeAws_restJson1OverallVolume(output, context) {\n  return {\n    DomainIspPlacements: output.DomainIspPlacements !== undefined && output.DomainIspPlacements !== null ? deserializeAws_restJson1DomainIspPlacements(output.DomainIspPlacements, context) : undefined,\n    ReadRatePercent: __limitedParseDouble(output.ReadRatePercent),\n    VolumeStatistics: output.VolumeStatistics !== undefined && output.VolumeStatistics !== null ? deserializeAws_restJson1VolumeStatistics(output.VolumeStatistics, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1PinpointDestination = function deserializeAws_restJson1PinpointDestination(output, context) {\n  return {\n    ApplicationArn: __expectString(output.ApplicationArn)\n  };\n};\n\nvar deserializeAws_restJson1PlacementStatistics = function deserializeAws_restJson1PlacementStatistics(output, context) {\n  return {\n    DkimPercentage: __limitedParseDouble(output.DkimPercentage),\n    InboxPercentage: __limitedParseDouble(output.InboxPercentage),\n    MissingPercentage: __limitedParseDouble(output.MissingPercentage),\n    SpamPercentage: __limitedParseDouble(output.SpamPercentage),\n    SpfPercentage: __limitedParseDouble(output.SpfPercentage)\n  };\n};\n\nvar deserializeAws_restJson1PolicyMap = function deserializeAws_restJson1PolicyMap(output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1ReputationOptions = function deserializeAws_restJson1ReputationOptions(output, context) {\n  return {\n    LastFreshStart: output.LastFreshStart !== undefined && output.LastFreshStart !== null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastFreshStart))) : undefined,\n    ReputationMetricsEnabled: __expectBoolean(output.ReputationMetricsEnabled)\n  };\n};\n\nvar deserializeAws_restJson1ReviewDetails = function deserializeAws_restJson1ReviewDetails(output, context) {\n  return {\n    CaseId: __expectString(output.CaseId),\n    Status: __expectString(output.Status)\n  };\n};\n\nvar deserializeAws_restJson1SendingOptions = function deserializeAws_restJson1SendingOptions(output, context) {\n  return {\n    SendingEnabled: __expectBoolean(output.SendingEnabled)\n  };\n};\n\nvar deserializeAws_restJson1SendQuota = function deserializeAws_restJson1SendQuota(output, context) {\n  return {\n    Max24HourSend: __limitedParseDouble(output.Max24HourSend),\n    MaxSendRate: __limitedParseDouble(output.MaxSendRate),\n    SentLast24Hours: __limitedParseDouble(output.SentLast24Hours)\n  };\n};\n\nvar deserializeAws_restJson1SnsDestination = function deserializeAws_restJson1SnsDestination(output, context) {\n  return {\n    TopicArn: __expectString(output.TopicArn)\n  };\n};\n\nvar deserializeAws_restJson1SuppressedDestination = function deserializeAws_restJson1SuppressedDestination(output, context) {\n  return {\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1SuppressedDestinationAttributes(output.Attributes, context) : undefined,\n    EmailAddress: __expectString(output.EmailAddress),\n    LastUpdateTime: output.LastUpdateTime !== undefined && output.LastUpdateTime !== null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdateTime))) : undefined,\n    Reason: __expectString(output.Reason)\n  };\n};\n\nvar deserializeAws_restJson1SuppressedDestinationAttributes = function deserializeAws_restJson1SuppressedDestinationAttributes(output, context) {\n  return {\n    FeedbackId: __expectString(output.FeedbackId),\n    MessageId: __expectString(output.MessageId)\n  };\n};\n\nvar deserializeAws_restJson1SuppressedDestinationSummaries = function deserializeAws_restJson1SuppressedDestinationSummaries(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1SuppressedDestinationSummary(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1SuppressedDestinationSummary = function deserializeAws_restJson1SuppressedDestinationSummary(output, context) {\n  return {\n    EmailAddress: __expectString(output.EmailAddress),\n    LastUpdateTime: output.LastUpdateTime !== undefined && output.LastUpdateTime !== null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdateTime))) : undefined,\n    Reason: __expectString(output.Reason)\n  };\n};\n\nvar deserializeAws_restJson1SuppressionAttributes = function deserializeAws_restJson1SuppressionAttributes(output, context) {\n  return {\n    SuppressedReasons: output.SuppressedReasons !== undefined && output.SuppressedReasons !== null ? deserializeAws_restJson1SuppressionListReasons(output.SuppressedReasons, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SuppressionListDestination = function deserializeAws_restJson1SuppressionListDestination(output, context) {\n  return {\n    SuppressionListImportAction: __expectString(output.SuppressionListImportAction)\n  };\n};\n\nvar deserializeAws_restJson1SuppressionListReasons = function deserializeAws_restJson1SuppressionListReasons(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n};\n\nvar deserializeAws_restJson1SuppressionOptions = function deserializeAws_restJson1SuppressionOptions(output, context) {\n  return {\n    SuppressedReasons: output.SuppressedReasons !== undefined && output.SuppressedReasons !== null ? deserializeAws_restJson1SuppressionListReasons(output.SuppressedReasons, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1Tag = function deserializeAws_restJson1Tag(output, context) {\n  return {\n    Key: __expectString(output.Key),\n    Value: __expectString(output.Value)\n  };\n};\n\nvar deserializeAws_restJson1TagList = function deserializeAws_restJson1TagList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1Tag(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1Topic = function deserializeAws_restJson1Topic(output, context) {\n  return {\n    DefaultSubscriptionStatus: __expectString(output.DefaultSubscriptionStatus),\n    Description: __expectString(output.Description),\n    DisplayName: __expectString(output.DisplayName),\n    TopicName: __expectString(output.TopicName)\n  };\n};\n\nvar deserializeAws_restJson1TopicPreference = function deserializeAws_restJson1TopicPreference(output, context) {\n  return {\n    SubscriptionStatus: __expectString(output.SubscriptionStatus),\n    TopicName: __expectString(output.TopicName)\n  };\n};\n\nvar deserializeAws_restJson1TopicPreferenceList = function deserializeAws_restJson1TopicPreferenceList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1TopicPreference(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1Topics = function deserializeAws_restJson1Topics(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1Topic(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1TrackingOptions = function deserializeAws_restJson1TrackingOptions(output, context) {\n  return {\n    CustomRedirectDomain: __expectString(output.CustomRedirectDomain)\n  };\n};\n\nvar deserializeAws_restJson1VolumeStatistics = function deserializeAws_restJson1VolumeStatistics(output, context) {\n  return {\n    InboxRawCount: __expectLong(output.InboxRawCount),\n    ProjectedInbox: __expectLong(output.ProjectedInbox),\n    ProjectedSpam: __expectLong(output.ProjectedSpam),\n    SpamRawCount: __expectLong(output.SpamRawCount)\n  };\n};\n\nvar deserializeMetadata = function deserializeMetadata(output) {\n  var _a;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n};\n\nvar collectBody = function collectBody(streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\nvar collectBodyString = function collectBodyString(streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar isSerializableHeaderValue = function isSerializableHeaderValue(value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\n\nvar parseBody = function parseBody(streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};\n\nvar loadRestJsonErrorCode = function loadRestJsonErrorCode(output, data) {\n  var findKey = function findKey(object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n\n  var sanitizeErrorCode = function sanitizeErrorCode(rawValue) {\n    var cleanValue = rawValue;\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};","map":{"version":3,"sources":["C:/Users/AHSAN PC/Desktop/digitsu/gamp/js/node_modules/@aws-sdk/client-sesv2/dist-es/protocols/Aws_restJson1.js"],"names":["__assign","__awaiter","__generator","__read","HttpRequest","__HttpRequest","expectBoolean","__expectBoolean","expectInt32","__expectInt32","expectLong","__expectLong","expectNonNull","__expectNonNull","expectNumber","__expectNumber","expectObject","__expectObject","expectString","__expectString","extendedEncodeURIComponent","__extendedEncodeURIComponent","limitedParseDouble","__limitedParseDouble","parseEpochTimestamp","__parseEpochTimestamp","serializeAws_restJson1CreateConfigurationSetCommand","input","context","_a","hostname","_b","protocol","port","basePath","headers","resolvedPath","body","_c","label","endpoint","sent","path","endsWith","slice","JSON","stringify","ConfigurationSetName","undefined","DeliveryOptions","serializeAws_restJson1DeliveryOptions","ReputationOptions","serializeAws_restJson1ReputationOptions","SendingOptions","serializeAws_restJson1SendingOptions","SuppressionOptions","serializeAws_restJson1SuppressionOptions","Tags","serializeAws_restJson1TagList","TrackingOptions","serializeAws_restJson1TrackingOptions","method","serializeAws_restJson1CreateConfigurationSetEventDestinationCommand","labelValue","length","Error","replace","EventDestination","serializeAws_restJson1EventDestinationDefinition","EventDestinationName","serializeAws_restJson1CreateContactCommand","ContactListName","AttributesData","EmailAddress","TopicPreferences","serializeAws_restJson1TopicPreferenceList","UnsubscribeAll","serializeAws_restJson1CreateContactListCommand","Description","Topics","serializeAws_restJson1Topics","serializeAws_restJson1CreateCustomVerificationEmailTemplateCommand","FailureRedirectionURL","FromEmailAddress","SuccessRedirectionURL","TemplateContent","TemplateName","TemplateSubject","serializeAws_restJson1CreateDedicatedIpPoolCommand","PoolName","serializeAws_restJson1CreateDeliverabilityTestReportCommand","Content","serializeAws_restJson1EmailContent","ReportName","serializeAws_restJson1CreateEmailIdentityCommand","DkimSigningAttributes","serializeAws_restJson1DkimSigningAttributes","EmailIdentity","serializeAws_restJson1CreateEmailIdentityPolicyCommand","PolicyName","Policy","serializeAws_restJson1CreateEmailTemplateCommand","serializeAws_restJson1EmailTemplateContent","serializeAws_restJson1CreateImportJobCommand","ImportDataSource","serializeAws_restJson1ImportDataSource","ImportDestination","serializeAws_restJson1ImportDestination","serializeAws_restJson1DeleteConfigurationSetCommand","serializeAws_restJson1DeleteConfigurationSetEventDestinationCommand","serializeAws_restJson1DeleteContactCommand","serializeAws_restJson1DeleteContactListCommand","serializeAws_restJson1DeleteCustomVerificationEmailTemplateCommand","serializeAws_restJson1DeleteDedicatedIpPoolCommand","serializeAws_restJson1DeleteEmailIdentityCommand","serializeAws_restJson1DeleteEmailIdentityPolicyCommand","serializeAws_restJson1DeleteEmailTemplateCommand","serializeAws_restJson1DeleteSuppressedDestinationCommand","serializeAws_restJson1GetAccountCommand","serializeAws_restJson1GetBlacklistReportsCommand","query","BlacklistItemNames","map","_entry","serializeAws_restJson1GetConfigurationSetCommand","serializeAws_restJson1GetConfigurationSetEventDestinationsCommand","serializeAws_restJson1GetContactCommand","serializeAws_restJson1GetContactListCommand","serializeAws_restJson1GetCustomVerificationEmailTemplateCommand","serializeAws_restJson1GetDedicatedIpCommand","Ip","serializeAws_restJson1GetDedicatedIpsCommand","NextToken","PageSize","toString","serializeAws_restJson1GetDeliverabilityDashboardOptionsCommand","serializeAws_restJson1GetDeliverabilityTestReportCommand","ReportId","serializeAws_restJson1GetDomainDeliverabilityCampaignCommand","CampaignId","serializeAws_restJson1GetDomainStatisticsReportCommand","Domain","StartDate","toISOString","split","EndDate","serializeAws_restJson1GetEmailIdentityCommand","serializeAws_restJson1GetEmailIdentityPoliciesCommand","serializeAws_restJson1GetEmailTemplateCommand","serializeAws_restJson1GetImportJobCommand","JobId","serializeAws_restJson1GetSuppressedDestinationCommand","serializeAws_restJson1ListConfigurationSetsCommand","serializeAws_restJson1ListContactListsCommand","serializeAws_restJson1ListContactsCommand","Filter","serializeAws_restJson1ListContactsFilter","serializeAws_restJson1ListCustomVerificationEmailTemplatesCommand","serializeAws_restJson1ListDedicatedIpPoolsCommand","serializeAws_restJson1ListDeliverabilityTestReportsCommand","serializeAws_restJson1ListDomainDeliverabilityCampaignsCommand","SubscribedDomain","serializeAws_restJson1ListEmailIdentitiesCommand","serializeAws_restJson1ListEmailTemplatesCommand","serializeAws_restJson1ListImportJobsCommand","ImportDestinationType","serializeAws_restJson1ListSuppressedDestinationsCommand","Reasons","Reason","serializeAws_restJson1ListTagsForResourceCommand","ResourceArn","serializeAws_restJson1PutAccountDedicatedIpWarmupAttributesCommand","AutoWarmupEnabled","serializeAws_restJson1PutAccountDetailsCommand","AdditionalContactEmailAddresses","serializeAws_restJson1AdditionalContactEmailAddresses","ContactLanguage","MailType","ProductionAccessEnabled","UseCaseDescription","WebsiteURL","serializeAws_restJson1PutAccountSendingAttributesCommand","SendingEnabled","serializeAws_restJson1PutAccountSuppressionAttributesCommand","SuppressedReasons","serializeAws_restJson1SuppressionListReasons","serializeAws_restJson1PutConfigurationSetDeliveryOptionsCommand","SendingPoolName","TlsPolicy","serializeAws_restJson1PutConfigurationSetReputationOptionsCommand","ReputationMetricsEnabled","serializeAws_restJson1PutConfigurationSetSendingOptionsCommand","serializeAws_restJson1PutConfigurationSetSuppressionOptionsCommand","serializeAws_restJson1PutConfigurationSetTrackingOptionsCommand","CustomRedirectDomain","serializeAws_restJson1PutDedicatedIpInPoolCommand","DestinationPoolName","serializeAws_restJson1PutDedicatedIpWarmupAttributesCommand","WarmupPercentage","serializeAws_restJson1PutDeliverabilityDashboardOptionCommand","DashboardEnabled","SubscribedDomains","serializeAws_restJson1DomainDeliverabilityTrackingOptions","serializeAws_restJson1PutEmailIdentityConfigurationSetAttributesCommand","serializeAws_restJson1PutEmailIdentityDkimAttributesCommand","SigningEnabled","serializeAws_restJson1PutEmailIdentityDkimSigningAttributesCommand","SigningAttributes","SigningAttributesOrigin","serializeAws_restJson1PutEmailIdentityFeedbackAttributesCommand","EmailForwardingEnabled","serializeAws_restJson1PutEmailIdentityMailFromAttributesCommand","BehaviorOnMxFailure","MailFromDomain","serializeAws_restJson1PutSuppressedDestinationCommand","serializeAws_restJson1SendBulkEmailCommand","BulkEmailEntries","serializeAws_restJson1BulkEmailEntryList","DefaultContent","serializeAws_restJson1BulkEmailContent","DefaultEmailTags","serializeAws_restJson1MessageTagList","FeedbackForwardingEmailAddress","FeedbackForwardingEmailAddressIdentityArn","FromEmailAddressIdentityArn","ReplyToAddresses","serializeAws_restJson1EmailAddressList","serializeAws_restJson1SendCustomVerificationEmailCommand","serializeAws_restJson1SendEmailCommand","Destination","serializeAws_restJson1Destination","EmailTags","ListManagementOptions","serializeAws_restJson1ListManagementOptions","serializeAws_restJson1TagResourceCommand","serializeAws_restJson1TestRenderEmailTemplateCommand","TemplateData","serializeAws_restJson1UntagResourceCommand","TagKeys","serializeAws_restJson1UpdateConfigurationSetEventDestinationCommand","serializeAws_restJson1UpdateContactCommand","serializeAws_restJson1UpdateContactListCommand","serializeAws_restJson1UpdateCustomVerificationEmailTemplateCommand","serializeAws_restJson1UpdateEmailIdentityPolicyCommand","serializeAws_restJson1UpdateEmailTemplateCommand","deserializeAws_restJson1CreateConfigurationSetCommand","output","contents","statusCode","deserializeAws_restJson1CreateConfigurationSetCommandError","$metadata","deserializeMetadata","collectBody","Promise","resolve","parsedOutput","response","errorCode","_d","_e","_f","_g","_h","parsedBody","message","_j","_k","parseBody","apply","concat","loadRestJsonErrorCode","deserializeAws_restJson1AlreadyExistsExceptionResponse","name","deserializeAws_restJson1BadRequestExceptionResponse","deserializeAws_restJson1ConcurrentModificationExceptionResponse","deserializeAws_restJson1LimitExceededExceptionResponse","deserializeAws_restJson1NotFoundExceptionResponse","deserializeAws_restJson1TooManyRequestsExceptionResponse","code","Code","Message","$fault","reject","Object","assign","deserializeAws_restJson1CreateConfigurationSetEventDestinationCommand","deserializeAws_restJson1CreateConfigurationSetEventDestinationCommandError","deserializeAws_restJson1CreateContactCommand","deserializeAws_restJson1CreateContactCommandError","deserializeAws_restJson1CreateContactListCommand","deserializeAws_restJson1CreateContactListCommandError","deserializeAws_restJson1CreateCustomVerificationEmailTemplateCommand","deserializeAws_restJson1CreateCustomVerificationEmailTemplateCommandError","deserializeAws_restJson1CreateDedicatedIpPoolCommand","deserializeAws_restJson1CreateDedicatedIpPoolCommandError","deserializeAws_restJson1CreateDeliverabilityTestReportCommand","data","deserializeAws_restJson1CreateDeliverabilityTestReportCommandError","DeliverabilityTestStatus","_l","_m","_o","deserializeAws_restJson1AccountSuspendedExceptionResponse","deserializeAws_restJson1MailFromDomainNotVerifiedExceptionResponse","deserializeAws_restJson1MessageRejectedResponse","deserializeAws_restJson1SendingPausedExceptionResponse","deserializeAws_restJson1CreateEmailIdentityCommand","deserializeAws_restJson1CreateEmailIdentityCommandError","DkimAttributes","IdentityType","VerifiedForSendingStatus","deserializeAws_restJson1DkimAttributes","deserializeAws_restJson1CreateEmailIdentityPolicyCommand","deserializeAws_restJson1CreateEmailIdentityPolicyCommandError","deserializeAws_restJson1CreateEmailTemplateCommand","deserializeAws_restJson1CreateEmailTemplateCommandError","deserializeAws_restJson1CreateImportJobCommand","deserializeAws_restJson1CreateImportJobCommandError","deserializeAws_restJson1DeleteConfigurationSetCommand","deserializeAws_restJson1DeleteConfigurationSetCommandError","deserializeAws_restJson1DeleteConfigurationSetEventDestinationCommand","deserializeAws_restJson1DeleteConfigurationSetEventDestinationCommandError","deserializeAws_restJson1DeleteContactCommand","deserializeAws_restJson1DeleteContactCommandError","deserializeAws_restJson1DeleteContactListCommand","deserializeAws_restJson1DeleteContactListCommandError","deserializeAws_restJson1DeleteCustomVerificationEmailTemplateCommand","deserializeAws_restJson1DeleteCustomVerificationEmailTemplateCommandError","deserializeAws_restJson1DeleteDedicatedIpPoolCommand","deserializeAws_restJson1DeleteDedicatedIpPoolCommandError","deserializeAws_restJson1DeleteEmailIdentityCommand","deserializeAws_restJson1DeleteEmailIdentityCommandError","deserializeAws_restJson1DeleteEmailIdentityPolicyCommand","deserializeAws_restJson1DeleteEmailIdentityPolicyCommandError","deserializeAws_restJson1DeleteEmailTemplateCommand","deserializeAws_restJson1DeleteEmailTemplateCommandError","deserializeAws_restJson1DeleteSuppressedDestinationCommand","deserializeAws_restJson1DeleteSuppressedDestinationCommandError","deserializeAws_restJson1GetAccountCommand","deserializeAws_restJson1GetAccountCommandError","DedicatedIpAutoWarmupEnabled","Details","EnforcementStatus","SendQuota","SuppressionAttributes","deserializeAws_restJson1AccountDetails","deserializeAws_restJson1SendQuota","deserializeAws_restJson1SuppressionAttributes","deserializeAws_restJson1GetBlacklistReportsCommand","deserializeAws_restJson1GetBlacklistReportsCommandError","BlacklistReport","deserializeAws_restJson1BlacklistReport","deserializeAws_restJson1GetConfigurationSetCommand","deserializeAws_restJson1GetConfigurationSetCommandError","deserializeAws_restJson1DeliveryOptions","deserializeAws_restJson1ReputationOptions","deserializeAws_restJson1SendingOptions","deserializeAws_restJson1SuppressionOptions","deserializeAws_restJson1TagList","deserializeAws_restJson1TrackingOptions","deserializeAws_restJson1GetConfigurationSetEventDestinationsCommand","deserializeAws_restJson1GetConfigurationSetEventDestinationsCommandError","EventDestinations","deserializeAws_restJson1EventDestinations","deserializeAws_restJson1GetContactCommand","deserializeAws_restJson1GetContactCommandError","CreatedTimestamp","LastUpdatedTimestamp","TopicDefaultPreferences","deserializeAws_restJson1TopicPreferenceList","deserializeAws_restJson1GetContactListCommand","deserializeAws_restJson1GetContactListCommandError","deserializeAws_restJson1Topics","deserializeAws_restJson1GetCustomVerificationEmailTemplateCommand","deserializeAws_restJson1GetCustomVerificationEmailTemplateCommandError","deserializeAws_restJson1GetDedicatedIpCommand","deserializeAws_restJson1GetDedicatedIpCommandError","DedicatedIp","deserializeAws_restJson1DedicatedIp","deserializeAws_restJson1GetDedicatedIpsCommand","deserializeAws_restJson1GetDedicatedIpsCommandError","DedicatedIps","deserializeAws_restJson1DedicatedIpList","deserializeAws_restJson1GetDeliverabilityDashboardOptionsCommand","deserializeAws_restJson1GetDeliverabilityDashboardOptionsCommandError","AccountStatus","ActiveSubscribedDomains","PendingExpirationSubscribedDomains","SubscriptionExpiryDate","deserializeAws_restJson1DomainDeliverabilityTrackingOptions","deserializeAws_restJson1GetDeliverabilityTestReportCommand","deserializeAws_restJson1GetDeliverabilityTestReportCommandError","DeliverabilityTestReport","IspPlacements","OverallPlacement","deserializeAws_restJson1DeliverabilityTestReport","deserializeAws_restJson1IspPlacements","deserializeAws_restJson1PlacementStatistics","deserializeAws_restJson1GetDomainDeliverabilityCampaignCommand","deserializeAws_restJson1GetDomainDeliverabilityCampaignCommandError","DomainDeliverabilityCampaign","deserializeAws_restJson1DomainDeliverabilityCampaign","deserializeAws_restJson1GetDomainStatisticsReportCommand","deserializeAws_restJson1GetDomainStatisticsReportCommandError","DailyVolumes","OverallVolume","deserializeAws_restJson1DailyVolumes","deserializeAws_restJson1OverallVolume","deserializeAws_restJson1GetEmailIdentityCommand","deserializeAws_restJson1GetEmailIdentityCommandError","FeedbackForwardingStatus","MailFromAttributes","Policies","deserializeAws_restJson1MailFromAttributes","deserializeAws_restJson1PolicyMap","deserializeAws_restJson1GetEmailIdentityPoliciesCommand","deserializeAws_restJson1GetEmailIdentityPoliciesCommandError","deserializeAws_restJson1GetEmailTemplateCommand","deserializeAws_restJson1GetEmailTemplateCommandError","deserializeAws_restJson1EmailTemplateContent","deserializeAws_restJson1GetImportJobCommand","deserializeAws_restJson1GetImportJobCommandError","CompletedTimestamp","FailedRecordsCount","FailureInfo","JobStatus","ProcessedRecordsCount","deserializeAws_restJson1FailureInfo","deserializeAws_restJson1ImportDataSource","deserializeAws_restJson1ImportDestination","deserializeAws_restJson1GetSuppressedDestinationCommand","deserializeAws_restJson1GetSuppressedDestinationCommandError","SuppressedDestination","deserializeAws_restJson1SuppressedDestination","deserializeAws_restJson1ListConfigurationSetsCommand","deserializeAws_restJson1ListConfigurationSetsCommandError","ConfigurationSets","deserializeAws_restJson1ConfigurationSetNameList","deserializeAws_restJson1ListContactListsCommand","deserializeAws_restJson1ListContactListsCommandError","ContactLists","deserializeAws_restJson1ListOfContactLists","deserializeAws_restJson1ListContactsCommand","deserializeAws_restJson1ListContactsCommandError","Contacts","deserializeAws_restJson1ListOfContacts","deserializeAws_restJson1ListCustomVerificationEmailTemplatesCommand","deserializeAws_restJson1ListCustomVerificationEmailTemplatesCommandError","CustomVerificationEmailTemplates","deserializeAws_restJson1CustomVerificationEmailTemplatesList","deserializeAws_restJson1ListDedicatedIpPoolsCommand","deserializeAws_restJson1ListDedicatedIpPoolsCommandError","DedicatedIpPools","deserializeAws_restJson1ListOfDedicatedIpPools","deserializeAws_restJson1ListDeliverabilityTestReportsCommand","deserializeAws_restJson1ListDeliverabilityTestReportsCommandError","DeliverabilityTestReports","deserializeAws_restJson1DeliverabilityTestReports","deserializeAws_restJson1ListDomainDeliverabilityCampaignsCommand","deserializeAws_restJson1ListDomainDeliverabilityCampaignsCommandError","DomainDeliverabilityCampaigns","deserializeAws_restJson1DomainDeliverabilityCampaignList","deserializeAws_restJson1ListEmailIdentitiesCommand","deserializeAws_restJson1ListEmailIdentitiesCommandError","EmailIdentities","deserializeAws_restJson1IdentityInfoList","deserializeAws_restJson1ListEmailTemplatesCommand","deserializeAws_restJson1ListEmailTemplatesCommandError","TemplatesMetadata","deserializeAws_restJson1EmailTemplateMetadataList","deserializeAws_restJson1ListImportJobsCommand","deserializeAws_restJson1ListImportJobsCommandError","ImportJobs","deserializeAws_restJson1ImportJobSummaryList","deserializeAws_restJson1ListSuppressedDestinationsCommand","deserializeAws_restJson1ListSuppressedDestinationsCommandError","SuppressedDestinationSummaries","deserializeAws_restJson1SuppressedDestinationSummaries","deserializeAws_restJson1InvalidNextTokenExceptionResponse","deserializeAws_restJson1ListTagsForResourceCommand","deserializeAws_restJson1ListTagsForResourceCommandError","deserializeAws_restJson1PutAccountDedicatedIpWarmupAttributesCommand","deserializeAws_restJson1PutAccountDedicatedIpWarmupAttributesCommandError","deserializeAws_restJson1PutAccountDetailsCommand","deserializeAws_restJson1PutAccountDetailsCommandError","deserializeAws_restJson1ConflictExceptionResponse","deserializeAws_restJson1PutAccountSendingAttributesCommand","deserializeAws_restJson1PutAccountSendingAttributesCommandError","deserializeAws_restJson1PutAccountSuppressionAttributesCommand","deserializeAws_restJson1PutAccountSuppressionAttributesCommandError","deserializeAws_restJson1PutConfigurationSetDeliveryOptionsCommand","deserializeAws_restJson1PutConfigurationSetDeliveryOptionsCommandError","deserializeAws_restJson1PutConfigurationSetReputationOptionsCommand","deserializeAws_restJson1PutConfigurationSetReputationOptionsCommandError","deserializeAws_restJson1PutConfigurationSetSendingOptionsCommand","deserializeAws_restJson1PutConfigurationSetSendingOptionsCommandError","deserializeAws_restJson1PutConfigurationSetSuppressionOptionsCommand","deserializeAws_restJson1PutConfigurationSetSuppressionOptionsCommandError","deserializeAws_restJson1PutConfigurationSetTrackingOptionsCommand","deserializeAws_restJson1PutConfigurationSetTrackingOptionsCommandError","deserializeAws_restJson1PutDedicatedIpInPoolCommand","deserializeAws_restJson1PutDedicatedIpInPoolCommandError","deserializeAws_restJson1PutDedicatedIpWarmupAttributesCommand","deserializeAws_restJson1PutDedicatedIpWarmupAttributesCommandError","deserializeAws_restJson1PutDeliverabilityDashboardOptionCommand","deserializeAws_restJson1PutDeliverabilityDashboardOptionCommandError","deserializeAws_restJson1PutEmailIdentityConfigurationSetAttributesCommand","deserializeAws_restJson1PutEmailIdentityConfigurationSetAttributesCommandError","deserializeAws_restJson1PutEmailIdentityDkimAttributesCommand","deserializeAws_restJson1PutEmailIdentityDkimAttributesCommandError","deserializeAws_restJson1PutEmailIdentityDkimSigningAttributesCommand","deserializeAws_restJson1PutEmailIdentityDkimSigningAttributesCommandError","DkimStatus","DkimTokens","deserializeAws_restJson1DnsTokenList","deserializeAws_restJson1PutEmailIdentityFeedbackAttributesCommand","deserializeAws_restJson1PutEmailIdentityFeedbackAttributesCommandError","deserializeAws_restJson1PutEmailIdentityMailFromAttributesCommand","deserializeAws_restJson1PutEmailIdentityMailFromAttributesCommandError","deserializeAws_restJson1PutSuppressedDestinationCommand","deserializeAws_restJson1PutSuppressedDestinationCommandError","deserializeAws_restJson1SendBulkEmailCommand","deserializeAws_restJson1SendBulkEmailCommandError","BulkEmailEntryResults","deserializeAws_restJson1BulkEmailEntryResultList","deserializeAws_restJson1SendCustomVerificationEmailCommand","deserializeAws_restJson1SendCustomVerificationEmailCommandError","MessageId","deserializeAws_restJson1SendEmailCommand","deserializeAws_restJson1SendEmailCommandError","deserializeAws_restJson1TagResourceCommand","deserializeAws_restJson1TagResourceCommandError","deserializeAws_restJson1TestRenderEmailTemplateCommand","deserializeAws_restJson1TestRenderEmailTemplateCommandError","RenderedTemplate","deserializeAws_restJson1UntagResourceCommand","deserializeAws_restJson1UntagResourceCommandError","deserializeAws_restJson1UpdateConfigurationSetEventDestinationCommand","deserializeAws_restJson1UpdateConfigurationSetEventDestinationCommandError","deserializeAws_restJson1UpdateContactCommand","deserializeAws_restJson1UpdateContactCommandError","deserializeAws_restJson1UpdateContactListCommand","deserializeAws_restJson1UpdateContactListCommandError","deserializeAws_restJson1UpdateCustomVerificationEmailTemplateCommand","deserializeAws_restJson1UpdateCustomVerificationEmailTemplateCommandError","deserializeAws_restJson1UpdateEmailIdentityPolicyCommand","deserializeAws_restJson1UpdateEmailIdentityPolicyCommandError","deserializeAws_restJson1UpdateEmailTemplateCommand","deserializeAws_restJson1UpdateEmailTemplateCommandError","filter","e","entry","serializeAws_restJson1Body","Html","serializeAws_restJson1Content","Text","Template","serializeAws_restJson1Template","serializeAws_restJson1BulkEmailEntry","ReplacementEmailContent","serializeAws_restJson1ReplacementEmailContent","ReplacementTags","serializeAws_restJson1CloudWatchDestination","DimensionConfigurations","serializeAws_restJson1CloudWatchDimensionConfigurations","serializeAws_restJson1CloudWatchDimensionConfiguration","DefaultDimensionValue","DimensionName","DimensionValueSource","serializeAws_restJson1ContactListDestination","ContactListImportAction","Charset","Data","BccAddresses","CcAddresses","ToAddresses","DomainSigningPrivateKey","DomainSigningSelector","NextSigningKeyLength","serializeAws_restJson1DomainDeliverabilityTrackingOption","InboxPlacementTrackingOption","serializeAws_restJson1InboxPlacementTrackingOption","SubscriptionStartDate","Math","round","getTime","Raw","serializeAws_restJson1RawMessage","Simple","serializeAws_restJson1Message","Subject","CloudWatchDestination","Enabled","KinesisFirehoseDestination","serializeAws_restJson1KinesisFirehoseDestination","MatchingEventTypes","serializeAws_restJson1EventTypes","PinpointDestination","serializeAws_restJson1PinpointDestination","SnsDestination","serializeAws_restJson1SnsDestination","DataFormat","S3Url","ContactListDestination","SuppressionListDestination","serializeAws_restJson1SuppressionListDestination","Global","TrackedIsps","serializeAws_restJson1IspNameList","DeliveryStreamArn","IamRoleArn","FilteredStatus","TopicFilter","serializeAws_restJson1TopicFilter","TopicName","Body","serializeAws_restJson1MessageTag","Name","Value","ApplicationArn","base64Encoder","ReplacementTemplate","serializeAws_restJson1ReplacementTemplate","ReplacementTemplateData","LastFreshStart","TopicArn","SuppressionListImportAction","serializeAws_restJson1Tag","Key","TemplateArn","serializeAws_restJson1Topic","DefaultSubscriptionStatus","DisplayName","UseDefaultIfPreferenceUnavailable","serializeAws_restJson1TopicPreference","SubscriptionStatus","deserializeAws_restJson1AdditionalContactEmailAddresses","ReviewDetails","deserializeAws_restJson1ReviewDetails","deserializeAws_restJson1BlacklistEntries","deserializeAws_restJson1BlacklistEntry","ListingTime","RblName","entries","reduce","acc","key","value","deserializeAws_restJson1BulkEmailEntryResult","Status","deserializeAws_restJson1CloudWatchDestination","deserializeAws_restJson1CloudWatchDimensionConfigurations","deserializeAws_restJson1CloudWatchDimensionConfiguration","deserializeAws_restJson1Contact","deserializeAws_restJson1ContactList","deserializeAws_restJson1ContactListDestination","deserializeAws_restJson1CustomVerificationEmailTemplateMetadata","deserializeAws_restJson1DailyVolume","DomainIspPlacements","deserializeAws_restJson1DomainIspPlacements","VolumeStatistics","deserializeAws_restJson1VolumeStatistics","WarmupStatus","CreateDate","CurrentSigningKeyLength","LastKeyGenerationTimestamp","Tokens","DeleteRate","Esps","deserializeAws_restJson1Esps","FirstSeenDateTime","FromAddress","ImageUrl","InboxCount","LastSeenDateTime","ProjectedVolume","ReadDeleteRate","ReadRate","SendingIps","deserializeAws_restJson1IpList","SpamCount","deserializeAws_restJson1DomainDeliverabilityTrackingOption","deserializeAws_restJson1InboxPlacementTrackingOption","deserializeAws_restJson1DomainIspPlacement","InboxPercentage","InboxRawCount","IspName","SpamPercentage","SpamRawCount","deserializeAws_restJson1EmailTemplateMetadata","deserializeAws_restJson1EventDestination","deserializeAws_restJson1KinesisFirehoseDestination","deserializeAws_restJson1EventTypes","deserializeAws_restJson1PinpointDestination","deserializeAws_restJson1SnsDestination","ErrorMessage","FailedRecordsS3Url","deserializeAws_restJson1IdentityInfo","IdentityName","deserializeAws_restJson1SuppressionListDestination","deserializeAws_restJson1ImportJobSummary","deserializeAws_restJson1IspNameList","deserializeAws_restJson1IspPlacement","PlacementStatistics","MailFromDomainStatus","ReadRatePercent","DkimPercentage","MissingPercentage","SpfPercentage","CaseId","Max24HourSend","MaxSendRate","SentLast24Hours","Attributes","deserializeAws_restJson1SuppressedDestinationAttributes","LastUpdateTime","FeedbackId","deserializeAws_restJson1SuppressedDestinationSummary","deserializeAws_restJson1SuppressionListReasons","deserializeAws_restJson1Tag","deserializeAws_restJson1Topic","deserializeAws_restJson1TopicPreference","ProjectedInbox","ProjectedSpam","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","isSerializableHeaderValue","getOwnPropertyNames","includes","size","encoded","parse","findKey","object","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","indexOf","headerKey"],"mappings":"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","sourcesContent":["import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { expectBoolean as __expectBoolean, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectObject as __expectObject, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, limitedParseDouble as __limitedParseDouble, parseEpochTimestamp as __parseEpochTimestamp, } from \"@aws-sdk/smithy-client\";\nexport var serializeAws_restJson1CreateConfigurationSetCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/configuration-sets\";\n                body = JSON.stringify(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.ConfigurationSetName !== undefined &&\n                    input.ConfigurationSetName !== null && { ConfigurationSetName: input.ConfigurationSetName })), (input.DeliveryOptions !== undefined &&\n                    input.DeliveryOptions !== null && {\n                    DeliveryOptions: serializeAws_restJson1DeliveryOptions(input.DeliveryOptions, context),\n                })), (input.ReputationOptions !== undefined &&\n                    input.ReputationOptions !== null && {\n                    ReputationOptions: serializeAws_restJson1ReputationOptions(input.ReputationOptions, context),\n                })), (input.SendingOptions !== undefined &&\n                    input.SendingOptions !== null && {\n                    SendingOptions: serializeAws_restJson1SendingOptions(input.SendingOptions, context),\n                })), (input.SuppressionOptions !== undefined &&\n                    input.SuppressionOptions !== null && {\n                    SuppressionOptions: serializeAws_restJson1SuppressionOptions(input.SuppressionOptions, context),\n                })), (input.Tags !== undefined &&\n                    input.Tags !== null && { Tags: serializeAws_restJson1TagList(input.Tags, context) })), (input.TrackingOptions !== undefined &&\n                    input.TrackingOptions !== null && {\n                    TrackingOptions: serializeAws_restJson1TrackingOptions(input.TrackingOptions, context),\n                })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1CreateConfigurationSetEventDestinationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/configuration-sets/{ConfigurationSetName}/event-destinations\";\n                if (input.ConfigurationSetName !== undefined) {\n                    labelValue = input.ConfigurationSetName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n                }\n                body = JSON.stringify(__assign(__assign({}, (input.EventDestination !== undefined &&\n                    input.EventDestination !== null && {\n                    EventDestination: serializeAws_restJson1EventDestinationDefinition(input.EventDestination, context),\n                })), (input.EventDestinationName !== undefined &&\n                    input.EventDestinationName !== null && { EventDestinationName: input.EventDestinationName })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1CreateContactCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/contact-lists/{ContactListName}/contacts\";\n                if (input.ContactListName !== undefined) {\n                    labelValue = input.ContactListName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n                }\n                body = JSON.stringify(__assign(__assign(__assign(__assign({}, (input.AttributesData !== undefined &&\n                    input.AttributesData !== null && { AttributesData: input.AttributesData })), (input.EmailAddress !== undefined && input.EmailAddress !== null && { EmailAddress: input.EmailAddress })), (input.TopicPreferences !== undefined &&\n                    input.TopicPreferences !== null && {\n                    TopicPreferences: serializeAws_restJson1TopicPreferenceList(input.TopicPreferences, context),\n                })), (input.UnsubscribeAll !== undefined &&\n                    input.UnsubscribeAll !== null && { UnsubscribeAll: input.UnsubscribeAll })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1CreateContactListCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/contact-lists\";\n                body = JSON.stringify(__assign(__assign(__assign(__assign({}, (input.ContactListName !== undefined &&\n                    input.ContactListName !== null && { ContactListName: input.ContactListName })), (input.Description !== undefined && input.Description !== null && { Description: input.Description })), (input.Tags !== undefined &&\n                    input.Tags !== null && { Tags: serializeAws_restJson1TagList(input.Tags, context) })), (input.Topics !== undefined &&\n                    input.Topics !== null && { Topics: serializeAws_restJson1Topics(input.Topics, context) })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1CreateCustomVerificationEmailTemplateCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/custom-verification-email-templates\";\n                body = JSON.stringify(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.FailureRedirectionURL !== undefined &&\n                    input.FailureRedirectionURL !== null && { FailureRedirectionURL: input.FailureRedirectionURL })), (input.FromEmailAddress !== undefined &&\n                    input.FromEmailAddress !== null && { FromEmailAddress: input.FromEmailAddress })), (input.SuccessRedirectionURL !== undefined &&\n                    input.SuccessRedirectionURL !== null && { SuccessRedirectionURL: input.SuccessRedirectionURL })), (input.TemplateContent !== undefined &&\n                    input.TemplateContent !== null && { TemplateContent: input.TemplateContent })), (input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName })), (input.TemplateSubject !== undefined &&\n                    input.TemplateSubject !== null && { TemplateSubject: input.TemplateSubject })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1CreateDedicatedIpPoolCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/dedicated-ip-pools\";\n                body = JSON.stringify(__assign(__assign({}, (input.PoolName !== undefined && input.PoolName !== null && { PoolName: input.PoolName })), (input.Tags !== undefined &&\n                    input.Tags !== null && { Tags: serializeAws_restJson1TagList(input.Tags, context) })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1CreateDeliverabilityTestReportCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/deliverability-dashboard/test\";\n                body = JSON.stringify(__assign(__assign(__assign(__assign({}, (input.Content !== undefined &&\n                    input.Content !== null && { Content: serializeAws_restJson1EmailContent(input.Content, context) })), (input.FromEmailAddress !== undefined &&\n                    input.FromEmailAddress !== null && { FromEmailAddress: input.FromEmailAddress })), (input.ReportName !== undefined && input.ReportName !== null && { ReportName: input.ReportName })), (input.Tags !== undefined &&\n                    input.Tags !== null && { Tags: serializeAws_restJson1TagList(input.Tags, context) })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1CreateEmailIdentityCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities\";\n                body = JSON.stringify(__assign(__assign(__assign(__assign({}, (input.ConfigurationSetName !== undefined &&\n                    input.ConfigurationSetName !== null && { ConfigurationSetName: input.ConfigurationSetName })), (input.DkimSigningAttributes !== undefined &&\n                    input.DkimSigningAttributes !== null && {\n                    DkimSigningAttributes: serializeAws_restJson1DkimSigningAttributes(input.DkimSigningAttributes, context),\n                })), (input.EmailIdentity !== undefined && input.EmailIdentity !== null && { EmailIdentity: input.EmailIdentity })), (input.Tags !== undefined &&\n                    input.Tags !== null && { Tags: serializeAws_restJson1TagList(input.Tags, context) })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1CreateEmailIdentityPolicyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/identities/{EmailIdentity}/policies/{PolicyName}\";\n                if (input.EmailIdentity !== undefined) {\n                    labelValue = input.EmailIdentity;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n                }\n                if (input.PolicyName !== undefined) {\n                    labelValue = input.PolicyName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: PolicyName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{PolicyName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: PolicyName.\");\n                }\n                body = JSON.stringify(__assign({}, (input.Policy !== undefined && input.Policy !== null && { Policy: input.Policy })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1CreateEmailTemplateCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/templates\";\n                body = JSON.stringify(__assign(__assign({}, (input.TemplateContent !== undefined &&\n                    input.TemplateContent !== null && {\n                    TemplateContent: serializeAws_restJson1EmailTemplateContent(input.TemplateContent, context),\n                })), (input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1CreateImportJobCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/import-jobs\";\n                body = JSON.stringify(__assign(__assign({}, (input.ImportDataSource !== undefined &&\n                    input.ImportDataSource !== null && {\n                    ImportDataSource: serializeAws_restJson1ImportDataSource(input.ImportDataSource, context),\n                })), (input.ImportDestination !== undefined &&\n                    input.ImportDestination !== null && {\n                    ImportDestination: serializeAws_restJson1ImportDestination(input.ImportDestination, context),\n                })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1DeleteConfigurationSetCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/configuration-sets/{ConfigurationSetName}\";\n                if (input.ConfigurationSetName !== undefined) {\n                    labelValue = input.ConfigurationSetName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1DeleteConfigurationSetEventDestinationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}\";\n                if (input.ConfigurationSetName !== undefined) {\n                    labelValue = input.ConfigurationSetName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n                }\n                if (input.EventDestinationName !== undefined) {\n                    labelValue = input.EventDestinationName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EventDestinationName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EventDestinationName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EventDestinationName.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1DeleteContactCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/contact-lists/{ContactListName}/contacts/{EmailAddress}\";\n                if (input.ContactListName !== undefined) {\n                    labelValue = input.ContactListName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n                }\n                if (input.EmailAddress !== undefined) {\n                    labelValue = input.EmailAddress;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailAddress.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailAddress}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailAddress.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1DeleteContactListCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/contact-lists/{ContactListName}\";\n                if (input.ContactListName !== undefined) {\n                    labelValue = input.ContactListName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1DeleteCustomVerificationEmailTemplateCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/custom-verification-email-templates/{TemplateName}\";\n                if (input.TemplateName !== undefined) {\n                    labelValue = input.TemplateName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1DeleteDedicatedIpPoolCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/dedicated-ip-pools/{PoolName}\";\n                if (input.PoolName !== undefined) {\n                    labelValue = input.PoolName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: PoolName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{PoolName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: PoolName.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1DeleteEmailIdentityCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities/{EmailIdentity}\";\n                if (input.EmailIdentity !== undefined) {\n                    labelValue = input.EmailIdentity;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1DeleteEmailIdentityPolicyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/identities/{EmailIdentity}/policies/{PolicyName}\";\n                if (input.EmailIdentity !== undefined) {\n                    labelValue = input.EmailIdentity;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n                }\n                if (input.PolicyName !== undefined) {\n                    labelValue = input.PolicyName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: PolicyName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{PolicyName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: PolicyName.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1DeleteEmailTemplateCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/templates/{TemplateName}\";\n                if (input.TemplateName !== undefined) {\n                    labelValue = input.TemplateName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1DeleteSuppressedDestinationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/suppression/addresses/{EmailAddress}\";\n                if (input.EmailAddress !== undefined) {\n                    labelValue = input.EmailAddress;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailAddress.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailAddress}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailAddress.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetAccountCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/account\";\n                body = \"\";\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetBlacklistReportsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/deliverability-dashboard/blacklist-report\";\n                query = __assign({}, (input.BlacklistItemNames !== undefined && {\n                    BlacklistItemNames: (input.BlacklistItemNames || []).map(function (_entry) { return _entry; }),\n                }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetConfigurationSetCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/configuration-sets/{ConfigurationSetName}\";\n                if (input.ConfigurationSetName !== undefined) {\n                    labelValue = input.ConfigurationSetName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetConfigurationSetEventDestinationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/configuration-sets/{ConfigurationSetName}/event-destinations\";\n                if (input.ConfigurationSetName !== undefined) {\n                    labelValue = input.ConfigurationSetName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetContactCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/contact-lists/{ContactListName}/contacts/{EmailAddress}\";\n                if (input.ContactListName !== undefined) {\n                    labelValue = input.ContactListName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n                }\n                if (input.EmailAddress !== undefined) {\n                    labelValue = input.EmailAddress;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailAddress.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailAddress}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailAddress.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetContactListCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/contact-lists/{ContactListName}\";\n                if (input.ContactListName !== undefined) {\n                    labelValue = input.ContactListName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetCustomVerificationEmailTemplateCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/custom-verification-email-templates/{TemplateName}\";\n                if (input.TemplateName !== undefined) {\n                    labelValue = input.TemplateName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetDedicatedIpCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/dedicated-ips/{Ip}\";\n                if (input.Ip !== undefined) {\n                    labelValue = input.Ip;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Ip.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Ip}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Ip.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetDedicatedIpsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/dedicated-ips\";\n                query = __assign(__assign(__assign({}, (input.PoolName !== undefined && { PoolName: input.PoolName })), (input.NextToken !== undefined && { NextToken: input.NextToken })), (input.PageSize !== undefined && { PageSize: input.PageSize.toString() }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetDeliverabilityDashboardOptionsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/deliverability-dashboard\";\n                body = \"\";\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetDeliverabilityTestReportCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/deliverability-dashboard/test-reports/{ReportId}\";\n                if (input.ReportId !== undefined) {\n                    labelValue = input.ReportId;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ReportId.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ReportId}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ReportId.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetDomainDeliverabilityCampaignCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/deliverability-dashboard/campaigns/{CampaignId}\";\n                if (input.CampaignId !== undefined) {\n                    labelValue = input.CampaignId;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetDomainStatisticsReportCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/deliverability-dashboard/statistics-report/{Domain}\";\n                if (input.Domain !== undefined) {\n                    labelValue = input.Domain;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Domain.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Domain}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Domain.\");\n                }\n                query = __assign(__assign({}, (input.StartDate !== undefined && { StartDate: (input.StartDate.toISOString().split(\".\")[0] + \"Z\").toString() })), (input.EndDate !== undefined && { EndDate: (input.EndDate.toISOString().split(\".\")[0] + \"Z\").toString() }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetEmailIdentityCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities/{EmailIdentity}\";\n                if (input.EmailIdentity !== undefined) {\n                    labelValue = input.EmailIdentity;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetEmailIdentityPoliciesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/identities/{EmailIdentity}/policies\";\n                if (input.EmailIdentity !== undefined) {\n                    labelValue = input.EmailIdentity;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetEmailTemplateCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/templates/{TemplateName}\";\n                if (input.TemplateName !== undefined) {\n                    labelValue = input.TemplateName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetImportJobCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/import-jobs/{JobId}\";\n                if (input.JobId !== undefined) {\n                    labelValue = input.JobId;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: JobId.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetSuppressedDestinationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/suppression/addresses/{EmailAddress}\";\n                if (input.EmailAddress !== undefined) {\n                    labelValue = input.EmailAddress;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailAddress.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailAddress}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailAddress.\");\n                }\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1ListConfigurationSetsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/configuration-sets\";\n                query = __assign(__assign({}, (input.NextToken !== undefined && { NextToken: input.NextToken })), (input.PageSize !== undefined && { PageSize: input.PageSize.toString() }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1ListContactListsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/contact-lists\";\n                query = __assign(__assign({}, (input.PageSize !== undefined && { PageSize: input.PageSize.toString() })), (input.NextToken !== undefined && { NextToken: input.NextToken }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1ListContactsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/contact-lists/{ContactListName}/contacts\";\n                if (input.ContactListName !== undefined) {\n                    labelValue = input.ContactListName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n                }\n                query = __assign(__assign({}, (input.PageSize !== undefined && { PageSize: input.PageSize.toString() })), (input.NextToken !== undefined && { NextToken: input.NextToken }));\n                body = JSON.stringify(__assign({}, (input.Filter !== undefined &&\n                    input.Filter !== null && { Filter: serializeAws_restJson1ListContactsFilter(input.Filter, context) })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1ListCustomVerificationEmailTemplatesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/custom-verification-email-templates\";\n                query = __assign(__assign({}, (input.NextToken !== undefined && { NextToken: input.NextToken })), (input.PageSize !== undefined && { PageSize: input.PageSize.toString() }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1ListDedicatedIpPoolsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/dedicated-ip-pools\";\n                query = __assign(__assign({}, (input.NextToken !== undefined && { NextToken: input.NextToken })), (input.PageSize !== undefined && { PageSize: input.PageSize.toString() }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1ListDeliverabilityTestReportsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/deliverability-dashboard/test-reports\";\n                query = __assign(__assign({}, (input.NextToken !== undefined && { NextToken: input.NextToken })), (input.PageSize !== undefined && { PageSize: input.PageSize.toString() }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1ListDomainDeliverabilityCampaignsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/deliverability-dashboard/domains/{SubscribedDomain}/campaigns\";\n                if (input.SubscribedDomain !== undefined) {\n                    labelValue = input.SubscribedDomain;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: SubscribedDomain.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{SubscribedDomain}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: SubscribedDomain.\");\n                }\n                query = __assign(__assign(__assign(__assign({}, (input.StartDate !== undefined && { StartDate: (input.StartDate.toISOString().split(\".\")[0] + \"Z\").toString() })), (input.EndDate !== undefined && { EndDate: (input.EndDate.toISOString().split(\".\")[0] + \"Z\").toString() })), (input.NextToken !== undefined && { NextToken: input.NextToken })), (input.PageSize !== undefined && { PageSize: input.PageSize.toString() }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1ListEmailIdentitiesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities\";\n                query = __assign(__assign({}, (input.NextToken !== undefined && { NextToken: input.NextToken })), (input.PageSize !== undefined && { PageSize: input.PageSize.toString() }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1ListEmailTemplatesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/templates\";\n                query = __assign(__assign({}, (input.NextToken !== undefined && { NextToken: input.NextToken })), (input.PageSize !== undefined && { PageSize: input.PageSize.toString() }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1ListImportJobsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/import-jobs\";\n                query = __assign(__assign({}, (input.NextToken !== undefined && { NextToken: input.NextToken })), (input.PageSize !== undefined && { PageSize: input.PageSize.toString() }));\n                body = JSON.stringify(__assign({}, (input.ImportDestinationType !== undefined &&\n                    input.ImportDestinationType !== null && { ImportDestinationType: input.ImportDestinationType })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1ListSuppressedDestinationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/suppression/addresses\";\n                query = __assign(__assign(__assign(__assign(__assign({}, (input.Reasons !== undefined && { Reason: (input.Reasons || []).map(function (_entry) { return _entry; }) })), (input.StartDate !== undefined && { StartDate: (input.StartDate.toISOString().split(\".\")[0] + \"Z\").toString() })), (input.EndDate !== undefined && { EndDate: (input.EndDate.toISOString().split(\".\")[0] + \"Z\").toString() })), (input.NextToken !== undefined && { NextToken: input.NextToken })), (input.PageSize !== undefined && { PageSize: input.PageSize.toString() }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1ListTagsForResourceCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/tags\";\n                query = __assign({}, (input.ResourceArn !== undefined && { ResourceArn: input.ResourceArn }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutAccountDedicatedIpWarmupAttributesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/account/dedicated-ips/warmup\";\n                body = JSON.stringify(__assign({}, (input.AutoWarmupEnabled !== undefined &&\n                    input.AutoWarmupEnabled !== null && { AutoWarmupEnabled: input.AutoWarmupEnabled })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutAccountDetailsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/account/details\";\n                body = JSON.stringify(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.AdditionalContactEmailAddresses !== undefined &&\n                    input.AdditionalContactEmailAddresses !== null && {\n                    AdditionalContactEmailAddresses: serializeAws_restJson1AdditionalContactEmailAddresses(input.AdditionalContactEmailAddresses, context),\n                })), (input.ContactLanguage !== undefined &&\n                    input.ContactLanguage !== null && { ContactLanguage: input.ContactLanguage })), (input.MailType !== undefined && input.MailType !== null && { MailType: input.MailType })), (input.ProductionAccessEnabled !== undefined &&\n                    input.ProductionAccessEnabled !== null && { ProductionAccessEnabled: input.ProductionAccessEnabled })), (input.UseCaseDescription !== undefined &&\n                    input.UseCaseDescription !== null && { UseCaseDescription: input.UseCaseDescription })), (input.WebsiteURL !== undefined && input.WebsiteURL !== null && { WebsiteURL: input.WebsiteURL })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutAccountSendingAttributesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/account/sending\";\n                body = JSON.stringify(__assign({}, (input.SendingEnabled !== undefined &&\n                    input.SendingEnabled !== null && { SendingEnabled: input.SendingEnabled })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutAccountSuppressionAttributesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/account/suppression\";\n                body = JSON.stringify(__assign({}, (input.SuppressedReasons !== undefined &&\n                    input.SuppressedReasons !== null && {\n                    SuppressedReasons: serializeAws_restJson1SuppressionListReasons(input.SuppressedReasons, context),\n                })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutConfigurationSetDeliveryOptionsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/configuration-sets/{ConfigurationSetName}/delivery-options\";\n                if (input.ConfigurationSetName !== undefined) {\n                    labelValue = input.ConfigurationSetName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n                }\n                body = JSON.stringify(__assign(__assign({}, (input.SendingPoolName !== undefined &&\n                    input.SendingPoolName !== null && { SendingPoolName: input.SendingPoolName })), (input.TlsPolicy !== undefined && input.TlsPolicy !== null && { TlsPolicy: input.TlsPolicy })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutConfigurationSetReputationOptionsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/configuration-sets/{ConfigurationSetName}/reputation-options\";\n                if (input.ConfigurationSetName !== undefined) {\n                    labelValue = input.ConfigurationSetName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n                }\n                body = JSON.stringify(__assign({}, (input.ReputationMetricsEnabled !== undefined &&\n                    input.ReputationMetricsEnabled !== null && { ReputationMetricsEnabled: input.ReputationMetricsEnabled })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutConfigurationSetSendingOptionsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/configuration-sets/{ConfigurationSetName}/sending\";\n                if (input.ConfigurationSetName !== undefined) {\n                    labelValue = input.ConfigurationSetName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n                }\n                body = JSON.stringify(__assign({}, (input.SendingEnabled !== undefined &&\n                    input.SendingEnabled !== null && { SendingEnabled: input.SendingEnabled })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutConfigurationSetSuppressionOptionsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/configuration-sets/{ConfigurationSetName}/suppression-options\";\n                if (input.ConfigurationSetName !== undefined) {\n                    labelValue = input.ConfigurationSetName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n                }\n                body = JSON.stringify(__assign({}, (input.SuppressedReasons !== undefined &&\n                    input.SuppressedReasons !== null && {\n                    SuppressedReasons: serializeAws_restJson1SuppressionListReasons(input.SuppressedReasons, context),\n                })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutConfigurationSetTrackingOptionsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/configuration-sets/{ConfigurationSetName}/tracking-options\";\n                if (input.ConfigurationSetName !== undefined) {\n                    labelValue = input.ConfigurationSetName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n                }\n                body = JSON.stringify(__assign({}, (input.CustomRedirectDomain !== undefined &&\n                    input.CustomRedirectDomain !== null && { CustomRedirectDomain: input.CustomRedirectDomain })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutDedicatedIpInPoolCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/dedicated-ips/{Ip}/pool\";\n                if (input.Ip !== undefined) {\n                    labelValue = input.Ip;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Ip.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Ip}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Ip.\");\n                }\n                body = JSON.stringify(__assign({}, (input.DestinationPoolName !== undefined &&\n                    input.DestinationPoolName !== null && { DestinationPoolName: input.DestinationPoolName })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutDedicatedIpWarmupAttributesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/dedicated-ips/{Ip}/warmup\";\n                if (input.Ip !== undefined) {\n                    labelValue = input.Ip;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: Ip.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{Ip}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: Ip.\");\n                }\n                body = JSON.stringify(__assign({}, (input.WarmupPercentage !== undefined &&\n                    input.WarmupPercentage !== null && { WarmupPercentage: input.WarmupPercentage })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutDeliverabilityDashboardOptionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/deliverability-dashboard\";\n                body = JSON.stringify(__assign(__assign({}, (input.DashboardEnabled !== undefined &&\n                    input.DashboardEnabled !== null && { DashboardEnabled: input.DashboardEnabled })), (input.SubscribedDomains !== undefined &&\n                    input.SubscribedDomains !== null && {\n                    SubscribedDomains: serializeAws_restJson1DomainDeliverabilityTrackingOptions(input.SubscribedDomains, context),\n                })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutEmailIdentityConfigurationSetAttributesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/identities/{EmailIdentity}/configuration-set\";\n                if (input.EmailIdentity !== undefined) {\n                    labelValue = input.EmailIdentity;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n                }\n                body = JSON.stringify(__assign({}, (input.ConfigurationSetName !== undefined &&\n                    input.ConfigurationSetName !== null && { ConfigurationSetName: input.ConfigurationSetName })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutEmailIdentityDkimAttributesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/identities/{EmailIdentity}/dkim\";\n                if (input.EmailIdentity !== undefined) {\n                    labelValue = input.EmailIdentity;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n                }\n                body = JSON.stringify(__assign({}, (input.SigningEnabled !== undefined &&\n                    input.SigningEnabled !== null && { SigningEnabled: input.SigningEnabled })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutEmailIdentityDkimSigningAttributesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v1/email/identities/{EmailIdentity}/dkim/signing\";\n                if (input.EmailIdentity !== undefined) {\n                    labelValue = input.EmailIdentity;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n                }\n                body = JSON.stringify(__assign(__assign({}, (input.SigningAttributes !== undefined &&\n                    input.SigningAttributes !== null && {\n                    SigningAttributes: serializeAws_restJson1DkimSigningAttributes(input.SigningAttributes, context),\n                })), (input.SigningAttributesOrigin !== undefined &&\n                    input.SigningAttributesOrigin !== null && { SigningAttributesOrigin: input.SigningAttributesOrigin })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutEmailIdentityFeedbackAttributesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/identities/{EmailIdentity}/feedback\";\n                if (input.EmailIdentity !== undefined) {\n                    labelValue = input.EmailIdentity;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n                }\n                body = JSON.stringify(__assign({}, (input.EmailForwardingEnabled !== undefined &&\n                    input.EmailForwardingEnabled !== null && { EmailForwardingEnabled: input.EmailForwardingEnabled })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutEmailIdentityMailFromAttributesCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/identities/{EmailIdentity}/mail-from\";\n                if (input.EmailIdentity !== undefined) {\n                    labelValue = input.EmailIdentity;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n                }\n                body = JSON.stringify(__assign(__assign({}, (input.BehaviorOnMxFailure !== undefined &&\n                    input.BehaviorOnMxFailure !== null && { BehaviorOnMxFailure: input.BehaviorOnMxFailure })), (input.MailFromDomain !== undefined &&\n                    input.MailFromDomain !== null && { MailFromDomain: input.MailFromDomain })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutSuppressedDestinationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/suppression/addresses\";\n                body = JSON.stringify(__assign(__assign({}, (input.EmailAddress !== undefined && input.EmailAddress !== null && { EmailAddress: input.EmailAddress })), (input.Reason !== undefined && input.Reason !== null && { Reason: input.Reason })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1SendBulkEmailCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/outbound-bulk-emails\";\n                body = JSON.stringify(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.BulkEmailEntries !== undefined &&\n                    input.BulkEmailEntries !== null && {\n                    BulkEmailEntries: serializeAws_restJson1BulkEmailEntryList(input.BulkEmailEntries, context),\n                })), (input.ConfigurationSetName !== undefined &&\n                    input.ConfigurationSetName !== null && { ConfigurationSetName: input.ConfigurationSetName })), (input.DefaultContent !== undefined &&\n                    input.DefaultContent !== null && {\n                    DefaultContent: serializeAws_restJson1BulkEmailContent(input.DefaultContent, context),\n                })), (input.DefaultEmailTags !== undefined &&\n                    input.DefaultEmailTags !== null && {\n                    DefaultEmailTags: serializeAws_restJson1MessageTagList(input.DefaultEmailTags, context),\n                })), (input.FeedbackForwardingEmailAddress !== undefined &&\n                    input.FeedbackForwardingEmailAddress !== null && {\n                    FeedbackForwardingEmailAddress: input.FeedbackForwardingEmailAddress,\n                })), (input.FeedbackForwardingEmailAddressIdentityArn !== undefined &&\n                    input.FeedbackForwardingEmailAddressIdentityArn !== null && {\n                    FeedbackForwardingEmailAddressIdentityArn: input.FeedbackForwardingEmailAddressIdentityArn,\n                })), (input.FromEmailAddress !== undefined &&\n                    input.FromEmailAddress !== null && { FromEmailAddress: input.FromEmailAddress })), (input.FromEmailAddressIdentityArn !== undefined &&\n                    input.FromEmailAddressIdentityArn !== null && { FromEmailAddressIdentityArn: input.FromEmailAddressIdentityArn })), (input.ReplyToAddresses !== undefined &&\n                    input.ReplyToAddresses !== null && {\n                    ReplyToAddresses: serializeAws_restJson1EmailAddressList(input.ReplyToAddresses, context),\n                })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1SendCustomVerificationEmailCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/outbound-custom-verification-emails\";\n                body = JSON.stringify(__assign(__assign(__assign({}, (input.ConfigurationSetName !== undefined &&\n                    input.ConfigurationSetName !== null && { ConfigurationSetName: input.ConfigurationSetName })), (input.EmailAddress !== undefined && input.EmailAddress !== null && { EmailAddress: input.EmailAddress })), (input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1SendEmailCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/outbound-emails\";\n                body = JSON.stringify(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.ConfigurationSetName !== undefined &&\n                    input.ConfigurationSetName !== null && { ConfigurationSetName: input.ConfigurationSetName })), (input.Content !== undefined &&\n                    input.Content !== null && { Content: serializeAws_restJson1EmailContent(input.Content, context) })), (input.Destination !== undefined &&\n                    input.Destination !== null && { Destination: serializeAws_restJson1Destination(input.Destination, context) })), (input.EmailTags !== undefined &&\n                    input.EmailTags !== null && { EmailTags: serializeAws_restJson1MessageTagList(input.EmailTags, context) })), (input.FeedbackForwardingEmailAddress !== undefined &&\n                    input.FeedbackForwardingEmailAddress !== null && {\n                    FeedbackForwardingEmailAddress: input.FeedbackForwardingEmailAddress,\n                })), (input.FeedbackForwardingEmailAddressIdentityArn !== undefined &&\n                    input.FeedbackForwardingEmailAddressIdentityArn !== null && {\n                    FeedbackForwardingEmailAddressIdentityArn: input.FeedbackForwardingEmailAddressIdentityArn,\n                })), (input.FromEmailAddress !== undefined &&\n                    input.FromEmailAddress !== null && { FromEmailAddress: input.FromEmailAddress })), (input.FromEmailAddressIdentityArn !== undefined &&\n                    input.FromEmailAddressIdentityArn !== null && { FromEmailAddressIdentityArn: input.FromEmailAddressIdentityArn })), (input.ListManagementOptions !== undefined &&\n                    input.ListManagementOptions !== null && {\n                    ListManagementOptions: serializeAws_restJson1ListManagementOptions(input.ListManagementOptions, context),\n                })), (input.ReplyToAddresses !== undefined &&\n                    input.ReplyToAddresses !== null && {\n                    ReplyToAddresses: serializeAws_restJson1EmailAddressList(input.ReplyToAddresses, context),\n                })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1TagResourceCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/tags\";\n                body = JSON.stringify(__assign(__assign({}, (input.ResourceArn !== undefined && input.ResourceArn !== null && { ResourceArn: input.ResourceArn })), (input.Tags !== undefined &&\n                    input.Tags !== null && { Tags: serializeAws_restJson1TagList(input.Tags, context) })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1TestRenderEmailTemplateCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/templates/{TemplateName}/render\";\n                if (input.TemplateName !== undefined) {\n                    labelValue = input.TemplateName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n                }\n                body = JSON.stringify(__assign({}, (input.TemplateData !== undefined && input.TemplateData !== null && { TemplateData: input.TemplateData })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1UntagResourceCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, query, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {};\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/tags\";\n                query = __assign(__assign({}, (input.ResourceArn !== undefined && { ResourceArn: input.ResourceArn })), (input.TagKeys !== undefined && { TagKeys: (input.TagKeys || []).map(function (_entry) { return _entry; }) }));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1UpdateConfigurationSetEventDestinationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}\";\n                if (input.ConfigurationSetName !== undefined) {\n                    labelValue = input.ConfigurationSetName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ConfigurationSetName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ConfigurationSetName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ConfigurationSetName.\");\n                }\n                if (input.EventDestinationName !== undefined) {\n                    labelValue = input.EventDestinationName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EventDestinationName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EventDestinationName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EventDestinationName.\");\n                }\n                body = JSON.stringify(__assign({}, (input.EventDestination !== undefined &&\n                    input.EventDestination !== null && {\n                    EventDestination: serializeAws_restJson1EventDestinationDefinition(input.EventDestination, context),\n                })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1UpdateContactCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/contact-lists/{ContactListName}/contacts/{EmailAddress}\";\n                if (input.ContactListName !== undefined) {\n                    labelValue = input.ContactListName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n                }\n                if (input.EmailAddress !== undefined) {\n                    labelValue = input.EmailAddress;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailAddress.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailAddress}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailAddress.\");\n                }\n                body = JSON.stringify(__assign(__assign(__assign({}, (input.AttributesData !== undefined &&\n                    input.AttributesData !== null && { AttributesData: input.AttributesData })), (input.TopicPreferences !== undefined &&\n                    input.TopicPreferences !== null && {\n                    TopicPreferences: serializeAws_restJson1TopicPreferenceList(input.TopicPreferences, context),\n                })), (input.UnsubscribeAll !== undefined &&\n                    input.UnsubscribeAll !== null && { UnsubscribeAll: input.UnsubscribeAll })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1UpdateContactListCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/contact-lists/{ContactListName}\";\n                if (input.ContactListName !== undefined) {\n                    labelValue = input.ContactListName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: ContactListName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{ContactListName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: ContactListName.\");\n                }\n                body = JSON.stringify(__assign(__assign({}, (input.Description !== undefined && input.Description !== null && { Description: input.Description })), (input.Topics !== undefined &&\n                    input.Topics !== null && { Topics: serializeAws_restJson1Topics(input.Topics, context) })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1UpdateCustomVerificationEmailTemplateCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/custom-verification-email-templates/{TemplateName}\";\n                if (input.TemplateName !== undefined) {\n                    labelValue = input.TemplateName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n                }\n                body = JSON.stringify(__assign(__assign(__assign(__assign(__assign({}, (input.FailureRedirectionURL !== undefined &&\n                    input.FailureRedirectionURL !== null && { FailureRedirectionURL: input.FailureRedirectionURL })), (input.FromEmailAddress !== undefined &&\n                    input.FromEmailAddress !== null && { FromEmailAddress: input.FromEmailAddress })), (input.SuccessRedirectionURL !== undefined &&\n                    input.SuccessRedirectionURL !== null && { SuccessRedirectionURL: input.SuccessRedirectionURL })), (input.TemplateContent !== undefined &&\n                    input.TemplateContent !== null && { TemplateContent: input.TemplateContent })), (input.TemplateSubject !== undefined &&\n                    input.TemplateSubject !== null && { TemplateSubject: input.TemplateSubject })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1UpdateEmailIdentityPolicyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") +\n                    \"/v2/email/identities/{EmailIdentity}/policies/{PolicyName}\";\n                if (input.EmailIdentity !== undefined) {\n                    labelValue = input.EmailIdentity;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: EmailIdentity.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{EmailIdentity}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: EmailIdentity.\");\n                }\n                if (input.PolicyName !== undefined) {\n                    labelValue = input.PolicyName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: PolicyName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{PolicyName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: PolicyName.\");\n                }\n                body = JSON.stringify(__assign({}, (input.Policy !== undefined && input.Policy !== null && { Policy: input.Policy })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1UpdateEmailTemplateCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, body;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n                headers = {\n                    \"content-type\": \"application/json\",\n                };\n                resolvedPath = \"\" + ((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/v2/email/templates/{TemplateName}\";\n                if (input.TemplateName !== undefined) {\n                    labelValue = input.TemplateName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n                }\n                body = JSON.stringify(__assign({}, (input.TemplateContent !== undefined &&\n                    input.TemplateContent !== null && {\n                    TemplateContent: serializeAws_restJson1EmailTemplateContent(input.TemplateContent, context),\n                })));\n                return [2, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"PUT\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1CreateConfigurationSetCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1CreateConfigurationSetCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1CreateConfigurationSetCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;\n    var _j;\n    return __generator(this, function (_k) {\n        switch (_k.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _j = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"AlreadyExistsException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#AlreadyExistsException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 4];\n                    case \"ConcurrentModificationException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#ConcurrentModificationException\": return [3, 6];\n                    case \"LimitExceededException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#LimitExceededException\": return [3, 8];\n                    case \"NotFoundException\": return [3, 10];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 10];\n                    case \"TooManyRequestsException\": return [3, 12];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 12];\n                }\n                return [3, 14];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 15];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 15];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 15];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 15];\n            case 10:\n                _g = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 15];\n            case 12:\n                _h = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 15];\n            case 14:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _k.label = 15;\n            case 15:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1CreateConfigurationSetEventDestinationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1CreateConfigurationSetEventDestinationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1CreateConfigurationSetEventDestinationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _h = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"AlreadyExistsException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#AlreadyExistsException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 4];\n                    case \"LimitExceededException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#LimitExceededException\": return [3, 6];\n                    case \"NotFoundException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 8];\n                    case \"TooManyRequestsException\": return [3, 10];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 10];\n                }\n                return [3, 12];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 10:\n                _g = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1CreateContactCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1CreateContactCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1CreateContactCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _g = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"AlreadyExistsException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#AlreadyExistsException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 4];\n                    case \"NotFoundException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 6];\n                    case \"TooManyRequestsException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 8];\n                }\n                return [3, 10];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1CreateContactListCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1CreateContactListCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1CreateContactListCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _g = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"AlreadyExistsException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#AlreadyExistsException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 4];\n                    case \"LimitExceededException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#LimitExceededException\": return [3, 6];\n                    case \"TooManyRequestsException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 8];\n                }\n                return [3, 10];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1CreateCustomVerificationEmailTemplateCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1CreateCustomVerificationEmailTemplateCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1CreateCustomVerificationEmailTemplateCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _h = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"AlreadyExistsException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#AlreadyExistsException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 4];\n                    case \"LimitExceededException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#LimitExceededException\": return [3, 6];\n                    case \"NotFoundException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 8];\n                    case \"TooManyRequestsException\": return [3, 10];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 10];\n                }\n                return [3, 12];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 10:\n                _g = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1CreateDedicatedIpPoolCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1CreateDedicatedIpPoolCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1CreateDedicatedIpPoolCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _h = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"AlreadyExistsException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#AlreadyExistsException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 4];\n                    case \"ConcurrentModificationException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#ConcurrentModificationException\": return [3, 6];\n                    case \"LimitExceededException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#LimitExceededException\": return [3, 8];\n                    case \"TooManyRequestsException\": return [3, 10];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 10];\n                }\n                return [3, 12];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 10:\n                _g = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1CreateDeliverabilityTestReportCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1CreateDeliverabilityTestReportCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    DeliverabilityTestStatus: undefined,\n                    ReportId: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.DeliverabilityTestStatus !== undefined && data.DeliverabilityTestStatus !== null) {\n                    contents.DeliverabilityTestStatus = __expectString(data.DeliverabilityTestStatus);\n                }\n                if (data.ReportId !== undefined && data.ReportId !== null) {\n                    contents.ReportId = __expectString(data.ReportId);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1CreateDeliverabilityTestReportCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;\n    var _m;\n    return __generator(this, function (_o) {\n        switch (_o.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _m = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_m.body = _o.sent(), _m)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"AccountSuspendedException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#AccountSuspendedException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 4];\n                    case \"ConcurrentModificationException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#ConcurrentModificationException\": return [3, 6];\n                    case \"LimitExceededException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#LimitExceededException\": return [3, 8];\n                    case \"MailFromDomainNotVerifiedException\": return [3, 10];\n                    case \"com.amazonaws.sesv2#MailFromDomainNotVerifiedException\": return [3, 10];\n                    case \"MessageRejected\": return [3, 12];\n                    case \"com.amazonaws.sesv2#MessageRejected\": return [3, 12];\n                    case \"NotFoundException\": return [3, 14];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 14];\n                    case \"SendingPausedException\": return [3, 16];\n                    case \"com.amazonaws.sesv2#SendingPausedException\": return [3, 16];\n                    case \"TooManyRequestsException\": return [3, 18];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 18];\n                }\n                return [3, 20];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1AccountSuspendedExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 21];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 21];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 21];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 21];\n            case 10:\n                _g = [{}];\n                return [4, deserializeAws_restJson1MailFromDomainNotVerifiedExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 21];\n            case 12:\n                _h = [{}];\n                return [4, deserializeAws_restJson1MessageRejectedResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 21];\n            case 14:\n                _j = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 21];\n            case 16:\n                _k = [{}];\n                return [4, deserializeAws_restJson1SendingPausedExceptionResponse(parsedOutput, context)];\n            case 17:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 21];\n            case 18:\n                _l = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 19:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 21];\n            case 20:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _o.label = 21;\n            case 21:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1CreateEmailIdentityCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1CreateEmailIdentityCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    DkimAttributes: undefined,\n                    IdentityType: undefined,\n                    VerifiedForSendingStatus: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.DkimAttributes !== undefined && data.DkimAttributes !== null) {\n                    contents.DkimAttributes = deserializeAws_restJson1DkimAttributes(data.DkimAttributes, context);\n                }\n                if (data.IdentityType !== undefined && data.IdentityType !== null) {\n                    contents.IdentityType = __expectString(data.IdentityType);\n                }\n                if (data.VerifiedForSendingStatus !== undefined && data.VerifiedForSendingStatus !== null) {\n                    contents.VerifiedForSendingStatus = __expectBoolean(data.VerifiedForSendingStatus);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1CreateEmailIdentityCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;\n    var _j;\n    return __generator(this, function (_k) {\n        switch (_k.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _j = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"AlreadyExistsException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#AlreadyExistsException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 4];\n                    case \"ConcurrentModificationException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#ConcurrentModificationException\": return [3, 6];\n                    case \"LimitExceededException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#LimitExceededException\": return [3, 8];\n                    case \"NotFoundException\": return [3, 10];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 10];\n                    case \"TooManyRequestsException\": return [3, 12];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 12];\n                }\n                return [3, 14];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 15];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 15];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 15];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 15];\n            case 10:\n                _g = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 15];\n            case 12:\n                _h = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_k.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 15];\n            case 14:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _k.label = 15;\n            case 15:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1CreateEmailIdentityPolicyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1CreateEmailIdentityPolicyCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1CreateEmailIdentityPolicyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _h = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"AlreadyExistsException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#AlreadyExistsException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 4];\n                    case \"LimitExceededException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#LimitExceededException\": return [3, 6];\n                    case \"NotFoundException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 8];\n                    case \"TooManyRequestsException\": return [3, 10];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 10];\n                }\n                return [3, 12];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 10:\n                _g = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1CreateEmailTemplateCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1CreateEmailTemplateCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1CreateEmailTemplateCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _g = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"AlreadyExistsException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#AlreadyExistsException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 4];\n                    case \"LimitExceededException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#LimitExceededException\": return [3, 6];\n                    case \"TooManyRequestsException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 8];\n                }\n                return [3, 10];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1CreateImportJobCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1CreateImportJobCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    JobId: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.JobId !== undefined && data.JobId !== null) {\n                    contents.JobId = __expectString(data.JobId);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1CreateImportJobCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"LimitExceededException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#LimitExceededException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1DeleteConfigurationSetCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1DeleteConfigurationSetCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1DeleteConfigurationSetCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _g = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"ConcurrentModificationException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#ConcurrentModificationException\": return [3, 4];\n                    case \"NotFoundException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 6];\n                    case \"TooManyRequestsException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 8];\n                }\n                return [3, 10];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1DeleteConfigurationSetEventDestinationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1DeleteConfigurationSetEventDestinationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1DeleteConfigurationSetEventDestinationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1DeleteContactCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1DeleteContactCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1DeleteContactCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1DeleteContactListCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1DeleteContactListCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1DeleteContactListCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _g = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"ConcurrentModificationException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#ConcurrentModificationException\": return [3, 4];\n                    case \"NotFoundException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 6];\n                    case \"TooManyRequestsException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 8];\n                }\n                return [3, 10];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1DeleteCustomVerificationEmailTemplateCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1DeleteCustomVerificationEmailTemplateCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1DeleteCustomVerificationEmailTemplateCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1DeleteDedicatedIpPoolCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1DeleteDedicatedIpPoolCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1DeleteDedicatedIpPoolCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _g = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"ConcurrentModificationException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#ConcurrentModificationException\": return [3, 4];\n                    case \"NotFoundException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 6];\n                    case \"TooManyRequestsException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 8];\n                }\n                return [3, 10];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1DeleteEmailIdentityCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1DeleteEmailIdentityCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1DeleteEmailIdentityCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _g = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"ConcurrentModificationException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#ConcurrentModificationException\": return [3, 4];\n                    case \"NotFoundException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 6];\n                    case \"TooManyRequestsException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 8];\n                }\n                return [3, 10];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1DeleteEmailIdentityPolicyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1DeleteEmailIdentityPolicyCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1DeleteEmailIdentityPolicyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1DeleteEmailTemplateCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1DeleteEmailTemplateCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1DeleteEmailTemplateCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1DeleteSuppressedDestinationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1DeleteSuppressedDestinationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1DeleteSuppressedDestinationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetAccountCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetAccountCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    DedicatedIpAutoWarmupEnabled: undefined,\n                    Details: undefined,\n                    EnforcementStatus: undefined,\n                    ProductionAccessEnabled: undefined,\n                    SendQuota: undefined,\n                    SendingEnabled: undefined,\n                    SuppressionAttributes: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.DedicatedIpAutoWarmupEnabled !== undefined && data.DedicatedIpAutoWarmupEnabled !== null) {\n                    contents.DedicatedIpAutoWarmupEnabled = __expectBoolean(data.DedicatedIpAutoWarmupEnabled);\n                }\n                if (data.Details !== undefined && data.Details !== null) {\n                    contents.Details = deserializeAws_restJson1AccountDetails(data.Details, context);\n                }\n                if (data.EnforcementStatus !== undefined && data.EnforcementStatus !== null) {\n                    contents.EnforcementStatus = __expectString(data.EnforcementStatus);\n                }\n                if (data.ProductionAccessEnabled !== undefined && data.ProductionAccessEnabled !== null) {\n                    contents.ProductionAccessEnabled = __expectBoolean(data.ProductionAccessEnabled);\n                }\n                if (data.SendQuota !== undefined && data.SendQuota !== null) {\n                    contents.SendQuota = deserializeAws_restJson1SendQuota(data.SendQuota, context);\n                }\n                if (data.SendingEnabled !== undefined && data.SendingEnabled !== null) {\n                    contents.SendingEnabled = __expectBoolean(data.SendingEnabled);\n                }\n                if (data.SuppressionAttributes !== undefined && data.SuppressionAttributes !== null) {\n                    contents.SuppressionAttributes = deserializeAws_restJson1SuppressionAttributes(data.SuppressionAttributes, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetAccountCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"TooManyRequestsException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 4];\n                }\n                return [3, 6];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetBlacklistReportsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetBlacklistReportsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    BlacklistReport: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.BlacklistReport !== undefined && data.BlacklistReport !== null) {\n                    contents.BlacklistReport = deserializeAws_restJson1BlacklistReport(data.BlacklistReport, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetBlacklistReportsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetConfigurationSetCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetConfigurationSetCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ConfigurationSetName: undefined,\n                    DeliveryOptions: undefined,\n                    ReputationOptions: undefined,\n                    SendingOptions: undefined,\n                    SuppressionOptions: undefined,\n                    Tags: undefined,\n                    TrackingOptions: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.ConfigurationSetName !== undefined && data.ConfigurationSetName !== null) {\n                    contents.ConfigurationSetName = __expectString(data.ConfigurationSetName);\n                }\n                if (data.DeliveryOptions !== undefined && data.DeliveryOptions !== null) {\n                    contents.DeliveryOptions = deserializeAws_restJson1DeliveryOptions(data.DeliveryOptions, context);\n                }\n                if (data.ReputationOptions !== undefined && data.ReputationOptions !== null) {\n                    contents.ReputationOptions = deserializeAws_restJson1ReputationOptions(data.ReputationOptions, context);\n                }\n                if (data.SendingOptions !== undefined && data.SendingOptions !== null) {\n                    contents.SendingOptions = deserializeAws_restJson1SendingOptions(data.SendingOptions, context);\n                }\n                if (data.SuppressionOptions !== undefined && data.SuppressionOptions !== null) {\n                    contents.SuppressionOptions = deserializeAws_restJson1SuppressionOptions(data.SuppressionOptions, context);\n                }\n                if (data.Tags !== undefined && data.Tags !== null) {\n                    contents.Tags = deserializeAws_restJson1TagList(data.Tags, context);\n                }\n                if (data.TrackingOptions !== undefined && data.TrackingOptions !== null) {\n                    contents.TrackingOptions = deserializeAws_restJson1TrackingOptions(data.TrackingOptions, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetConfigurationSetCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetConfigurationSetEventDestinationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetConfigurationSetEventDestinationsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    EventDestinations: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.EventDestinations !== undefined && data.EventDestinations !== null) {\n                    contents.EventDestinations = deserializeAws_restJson1EventDestinations(data.EventDestinations, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetConfigurationSetEventDestinationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetContactCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetContactCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AttributesData: undefined,\n                    ContactListName: undefined,\n                    CreatedTimestamp: undefined,\n                    EmailAddress: undefined,\n                    LastUpdatedTimestamp: undefined,\n                    TopicDefaultPreferences: undefined,\n                    TopicPreferences: undefined,\n                    UnsubscribeAll: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.AttributesData !== undefined && data.AttributesData !== null) {\n                    contents.AttributesData = __expectString(data.AttributesData);\n                }\n                if (data.ContactListName !== undefined && data.ContactListName !== null) {\n                    contents.ContactListName = __expectString(data.ContactListName);\n                }\n                if (data.CreatedTimestamp !== undefined && data.CreatedTimestamp !== null) {\n                    contents.CreatedTimestamp = __expectNonNull(__parseEpochTimestamp(__expectNumber(data.CreatedTimestamp)));\n                }\n                if (data.EmailAddress !== undefined && data.EmailAddress !== null) {\n                    contents.EmailAddress = __expectString(data.EmailAddress);\n                }\n                if (data.LastUpdatedTimestamp !== undefined && data.LastUpdatedTimestamp !== null) {\n                    contents.LastUpdatedTimestamp = __expectNonNull(__parseEpochTimestamp(__expectNumber(data.LastUpdatedTimestamp)));\n                }\n                if (data.TopicDefaultPreferences !== undefined && data.TopicDefaultPreferences !== null) {\n                    contents.TopicDefaultPreferences = deserializeAws_restJson1TopicPreferenceList(data.TopicDefaultPreferences, context);\n                }\n                if (data.TopicPreferences !== undefined && data.TopicPreferences !== null) {\n                    contents.TopicPreferences = deserializeAws_restJson1TopicPreferenceList(data.TopicPreferences, context);\n                }\n                if (data.UnsubscribeAll !== undefined && data.UnsubscribeAll !== null) {\n                    contents.UnsubscribeAll = __expectBoolean(data.UnsubscribeAll);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetContactCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetContactListCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetContactListCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ContactListName: undefined,\n                    CreatedTimestamp: undefined,\n                    Description: undefined,\n                    LastUpdatedTimestamp: undefined,\n                    Tags: undefined,\n                    Topics: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.ContactListName !== undefined && data.ContactListName !== null) {\n                    contents.ContactListName = __expectString(data.ContactListName);\n                }\n                if (data.CreatedTimestamp !== undefined && data.CreatedTimestamp !== null) {\n                    contents.CreatedTimestamp = __expectNonNull(__parseEpochTimestamp(__expectNumber(data.CreatedTimestamp)));\n                }\n                if (data.Description !== undefined && data.Description !== null) {\n                    contents.Description = __expectString(data.Description);\n                }\n                if (data.LastUpdatedTimestamp !== undefined && data.LastUpdatedTimestamp !== null) {\n                    contents.LastUpdatedTimestamp = __expectNonNull(__parseEpochTimestamp(__expectNumber(data.LastUpdatedTimestamp)));\n                }\n                if (data.Tags !== undefined && data.Tags !== null) {\n                    contents.Tags = deserializeAws_restJson1TagList(data.Tags, context);\n                }\n                if (data.Topics !== undefined && data.Topics !== null) {\n                    contents.Topics = deserializeAws_restJson1Topics(data.Topics, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetContactListCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetCustomVerificationEmailTemplateCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetCustomVerificationEmailTemplateCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    FailureRedirectionURL: undefined,\n                    FromEmailAddress: undefined,\n                    SuccessRedirectionURL: undefined,\n                    TemplateContent: undefined,\n                    TemplateName: undefined,\n                    TemplateSubject: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.FailureRedirectionURL !== undefined && data.FailureRedirectionURL !== null) {\n                    contents.FailureRedirectionURL = __expectString(data.FailureRedirectionURL);\n                }\n                if (data.FromEmailAddress !== undefined && data.FromEmailAddress !== null) {\n                    contents.FromEmailAddress = __expectString(data.FromEmailAddress);\n                }\n                if (data.SuccessRedirectionURL !== undefined && data.SuccessRedirectionURL !== null) {\n                    contents.SuccessRedirectionURL = __expectString(data.SuccessRedirectionURL);\n                }\n                if (data.TemplateContent !== undefined && data.TemplateContent !== null) {\n                    contents.TemplateContent = __expectString(data.TemplateContent);\n                }\n                if (data.TemplateName !== undefined && data.TemplateName !== null) {\n                    contents.TemplateName = __expectString(data.TemplateName);\n                }\n                if (data.TemplateSubject !== undefined && data.TemplateSubject !== null) {\n                    contents.TemplateSubject = __expectString(data.TemplateSubject);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetCustomVerificationEmailTemplateCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetDedicatedIpCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetDedicatedIpCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    DedicatedIp: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.DedicatedIp !== undefined && data.DedicatedIp !== null) {\n                    contents.DedicatedIp = deserializeAws_restJson1DedicatedIp(data.DedicatedIp, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetDedicatedIpCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetDedicatedIpsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetDedicatedIpsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    DedicatedIps: undefined,\n                    NextToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.DedicatedIps !== undefined && data.DedicatedIps !== null) {\n                    contents.DedicatedIps = deserializeAws_restJson1DedicatedIpList(data.DedicatedIps, context);\n                }\n                if (data.NextToken !== undefined && data.NextToken !== null) {\n                    contents.NextToken = __expectString(data.NextToken);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetDedicatedIpsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetDeliverabilityDashboardOptionsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetDeliverabilityDashboardOptionsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    AccountStatus: undefined,\n                    ActiveSubscribedDomains: undefined,\n                    DashboardEnabled: undefined,\n                    PendingExpirationSubscribedDomains: undefined,\n                    SubscriptionExpiryDate: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.AccountStatus !== undefined && data.AccountStatus !== null) {\n                    contents.AccountStatus = __expectString(data.AccountStatus);\n                }\n                if (data.ActiveSubscribedDomains !== undefined && data.ActiveSubscribedDomains !== null) {\n                    contents.ActiveSubscribedDomains = deserializeAws_restJson1DomainDeliverabilityTrackingOptions(data.ActiveSubscribedDomains, context);\n                }\n                if (data.DashboardEnabled !== undefined && data.DashboardEnabled !== null) {\n                    contents.DashboardEnabled = __expectBoolean(data.DashboardEnabled);\n                }\n                if (data.PendingExpirationSubscribedDomains !== undefined && data.PendingExpirationSubscribedDomains !== null) {\n                    contents.PendingExpirationSubscribedDomains = deserializeAws_restJson1DomainDeliverabilityTrackingOptions(data.PendingExpirationSubscribedDomains, context);\n                }\n                if (data.SubscriptionExpiryDate !== undefined && data.SubscriptionExpiryDate !== null) {\n                    contents.SubscriptionExpiryDate = __expectNonNull(__parseEpochTimestamp(__expectNumber(data.SubscriptionExpiryDate)));\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetDeliverabilityDashboardOptionsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"LimitExceededException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#LimitExceededException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetDeliverabilityTestReportCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetDeliverabilityTestReportCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    DeliverabilityTestReport: undefined,\n                    IspPlacements: undefined,\n                    Message: undefined,\n                    OverallPlacement: undefined,\n                    Tags: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.DeliverabilityTestReport !== undefined && data.DeliverabilityTestReport !== null) {\n                    contents.DeliverabilityTestReport = deserializeAws_restJson1DeliverabilityTestReport(data.DeliverabilityTestReport, context);\n                }\n                if (data.IspPlacements !== undefined && data.IspPlacements !== null) {\n                    contents.IspPlacements = deserializeAws_restJson1IspPlacements(data.IspPlacements, context);\n                }\n                if (data.Message !== undefined && data.Message !== null) {\n                    contents.Message = __expectString(data.Message);\n                }\n                if (data.OverallPlacement !== undefined && data.OverallPlacement !== null) {\n                    contents.OverallPlacement = deserializeAws_restJson1PlacementStatistics(data.OverallPlacement, context);\n                }\n                if (data.Tags !== undefined && data.Tags !== null) {\n                    contents.Tags = deserializeAws_restJson1TagList(data.Tags, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetDeliverabilityTestReportCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetDomainDeliverabilityCampaignCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetDomainDeliverabilityCampaignCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    DomainDeliverabilityCampaign: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.DomainDeliverabilityCampaign !== undefined && data.DomainDeliverabilityCampaign !== null) {\n                    contents.DomainDeliverabilityCampaign = deserializeAws_restJson1DomainDeliverabilityCampaign(data.DomainDeliverabilityCampaign, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetDomainDeliverabilityCampaignCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetDomainStatisticsReportCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetDomainStatisticsReportCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    DailyVolumes: undefined,\n                    OverallVolume: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.DailyVolumes !== undefined && data.DailyVolumes !== null) {\n                    contents.DailyVolumes = deserializeAws_restJson1DailyVolumes(data.DailyVolumes, context);\n                }\n                if (data.OverallVolume !== undefined && data.OverallVolume !== null) {\n                    contents.OverallVolume = deserializeAws_restJson1OverallVolume(data.OverallVolume, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetDomainStatisticsReportCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetEmailIdentityCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetEmailIdentityCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ConfigurationSetName: undefined,\n                    DkimAttributes: undefined,\n                    FeedbackForwardingStatus: undefined,\n                    IdentityType: undefined,\n                    MailFromAttributes: undefined,\n                    Policies: undefined,\n                    Tags: undefined,\n                    VerifiedForSendingStatus: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.ConfigurationSetName !== undefined && data.ConfigurationSetName !== null) {\n                    contents.ConfigurationSetName = __expectString(data.ConfigurationSetName);\n                }\n                if (data.DkimAttributes !== undefined && data.DkimAttributes !== null) {\n                    contents.DkimAttributes = deserializeAws_restJson1DkimAttributes(data.DkimAttributes, context);\n                }\n                if (data.FeedbackForwardingStatus !== undefined && data.FeedbackForwardingStatus !== null) {\n                    contents.FeedbackForwardingStatus = __expectBoolean(data.FeedbackForwardingStatus);\n                }\n                if (data.IdentityType !== undefined && data.IdentityType !== null) {\n                    contents.IdentityType = __expectString(data.IdentityType);\n                }\n                if (data.MailFromAttributes !== undefined && data.MailFromAttributes !== null) {\n                    contents.MailFromAttributes = deserializeAws_restJson1MailFromAttributes(data.MailFromAttributes, context);\n                }\n                if (data.Policies !== undefined && data.Policies !== null) {\n                    contents.Policies = deserializeAws_restJson1PolicyMap(data.Policies, context);\n                }\n                if (data.Tags !== undefined && data.Tags !== null) {\n                    contents.Tags = deserializeAws_restJson1TagList(data.Tags, context);\n                }\n                if (data.VerifiedForSendingStatus !== undefined && data.VerifiedForSendingStatus !== null) {\n                    contents.VerifiedForSendingStatus = __expectBoolean(data.VerifiedForSendingStatus);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetEmailIdentityCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetEmailIdentityPoliciesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetEmailIdentityPoliciesCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Policies: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.Policies !== undefined && data.Policies !== null) {\n                    contents.Policies = deserializeAws_restJson1PolicyMap(data.Policies, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetEmailIdentityPoliciesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetEmailTemplateCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetEmailTemplateCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    TemplateContent: undefined,\n                    TemplateName: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.TemplateContent !== undefined && data.TemplateContent !== null) {\n                    contents.TemplateContent = deserializeAws_restJson1EmailTemplateContent(data.TemplateContent, context);\n                }\n                if (data.TemplateName !== undefined && data.TemplateName !== null) {\n                    contents.TemplateName = __expectString(data.TemplateName);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetEmailTemplateCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetImportJobCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetImportJobCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    CompletedTimestamp: undefined,\n                    CreatedTimestamp: undefined,\n                    FailedRecordsCount: undefined,\n                    FailureInfo: undefined,\n                    ImportDataSource: undefined,\n                    ImportDestination: undefined,\n                    JobId: undefined,\n                    JobStatus: undefined,\n                    ProcessedRecordsCount: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.CompletedTimestamp !== undefined && data.CompletedTimestamp !== null) {\n                    contents.CompletedTimestamp = __expectNonNull(__parseEpochTimestamp(__expectNumber(data.CompletedTimestamp)));\n                }\n                if (data.CreatedTimestamp !== undefined && data.CreatedTimestamp !== null) {\n                    contents.CreatedTimestamp = __expectNonNull(__parseEpochTimestamp(__expectNumber(data.CreatedTimestamp)));\n                }\n                if (data.FailedRecordsCount !== undefined && data.FailedRecordsCount !== null) {\n                    contents.FailedRecordsCount = __expectInt32(data.FailedRecordsCount);\n                }\n                if (data.FailureInfo !== undefined && data.FailureInfo !== null) {\n                    contents.FailureInfo = deserializeAws_restJson1FailureInfo(data.FailureInfo, context);\n                }\n                if (data.ImportDataSource !== undefined && data.ImportDataSource !== null) {\n                    contents.ImportDataSource = deserializeAws_restJson1ImportDataSource(data.ImportDataSource, context);\n                }\n                if (data.ImportDestination !== undefined && data.ImportDestination !== null) {\n                    contents.ImportDestination = deserializeAws_restJson1ImportDestination(data.ImportDestination, context);\n                }\n                if (data.JobId !== undefined && data.JobId !== null) {\n                    contents.JobId = __expectString(data.JobId);\n                }\n                if (data.JobStatus !== undefined && data.JobStatus !== null) {\n                    contents.JobStatus = __expectString(data.JobStatus);\n                }\n                if (data.ProcessedRecordsCount !== undefined && data.ProcessedRecordsCount !== null) {\n                    contents.ProcessedRecordsCount = __expectInt32(data.ProcessedRecordsCount);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetImportJobCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetSuppressedDestinationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1GetSuppressedDestinationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    SuppressedDestination: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.SuppressedDestination !== undefined && data.SuppressedDestination !== null) {\n                    contents.SuppressedDestination = deserializeAws_restJson1SuppressedDestination(data.SuppressedDestination, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetSuppressedDestinationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1ListConfigurationSetsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1ListConfigurationSetsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ConfigurationSets: undefined,\n                    NextToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.ConfigurationSets !== undefined && data.ConfigurationSets !== null) {\n                    contents.ConfigurationSets = deserializeAws_restJson1ConfigurationSetNameList(data.ConfigurationSets, context);\n                }\n                if (data.NextToken !== undefined && data.NextToken !== null) {\n                    contents.NextToken = __expectString(data.NextToken);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1ListConfigurationSetsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"TooManyRequestsException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 4];\n                }\n                return [3, 6];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1ListContactListsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1ListContactListsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ContactLists: undefined,\n                    NextToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.ContactLists !== undefined && data.ContactLists !== null) {\n                    contents.ContactLists = deserializeAws_restJson1ListOfContactLists(data.ContactLists, context);\n                }\n                if (data.NextToken !== undefined && data.NextToken !== null) {\n                    contents.NextToken = __expectString(data.NextToken);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1ListContactListsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"TooManyRequestsException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 4];\n                }\n                return [3, 6];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1ListContactsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1ListContactsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Contacts: undefined,\n                    NextToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.Contacts !== undefined && data.Contacts !== null) {\n                    contents.Contacts = deserializeAws_restJson1ListOfContacts(data.Contacts, context);\n                }\n                if (data.NextToken !== undefined && data.NextToken !== null) {\n                    contents.NextToken = __expectString(data.NextToken);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1ListContactsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1ListCustomVerificationEmailTemplatesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1ListCustomVerificationEmailTemplatesCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    CustomVerificationEmailTemplates: undefined,\n                    NextToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.CustomVerificationEmailTemplates !== undefined && data.CustomVerificationEmailTemplates !== null) {\n                    contents.CustomVerificationEmailTemplates = deserializeAws_restJson1CustomVerificationEmailTemplatesList(data.CustomVerificationEmailTemplates, context);\n                }\n                if (data.NextToken !== undefined && data.NextToken !== null) {\n                    contents.NextToken = __expectString(data.NextToken);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1ListCustomVerificationEmailTemplatesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"TooManyRequestsException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 4];\n                }\n                return [3, 6];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1ListDedicatedIpPoolsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1ListDedicatedIpPoolsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    DedicatedIpPools: undefined,\n                    NextToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.DedicatedIpPools !== undefined && data.DedicatedIpPools !== null) {\n                    contents.DedicatedIpPools = deserializeAws_restJson1ListOfDedicatedIpPools(data.DedicatedIpPools, context);\n                }\n                if (data.NextToken !== undefined && data.NextToken !== null) {\n                    contents.NextToken = __expectString(data.NextToken);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1ListDedicatedIpPoolsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"TooManyRequestsException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 4];\n                }\n                return [3, 6];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1ListDeliverabilityTestReportsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1ListDeliverabilityTestReportsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    DeliverabilityTestReports: undefined,\n                    NextToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.DeliverabilityTestReports !== undefined && data.DeliverabilityTestReports !== null) {\n                    contents.DeliverabilityTestReports = deserializeAws_restJson1DeliverabilityTestReports(data.DeliverabilityTestReports, context);\n                }\n                if (data.NextToken !== undefined && data.NextToken !== null) {\n                    contents.NextToken = __expectString(data.NextToken);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1ListDeliverabilityTestReportsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1ListDomainDeliverabilityCampaignsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1ListDomainDeliverabilityCampaignsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    DomainDeliverabilityCampaigns: undefined,\n                    NextToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.DomainDeliverabilityCampaigns !== undefined && data.DomainDeliverabilityCampaigns !== null) {\n                    contents.DomainDeliverabilityCampaigns = deserializeAws_restJson1DomainDeliverabilityCampaignList(data.DomainDeliverabilityCampaigns, context);\n                }\n                if (data.NextToken !== undefined && data.NextToken !== null) {\n                    contents.NextToken = __expectString(data.NextToken);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1ListDomainDeliverabilityCampaignsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1ListEmailIdentitiesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1ListEmailIdentitiesCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    EmailIdentities: undefined,\n                    NextToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.EmailIdentities !== undefined && data.EmailIdentities !== null) {\n                    contents.EmailIdentities = deserializeAws_restJson1IdentityInfoList(data.EmailIdentities, context);\n                }\n                if (data.NextToken !== undefined && data.NextToken !== null) {\n                    contents.NextToken = __expectString(data.NextToken);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1ListEmailIdentitiesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"TooManyRequestsException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 4];\n                }\n                return [3, 6];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1ListEmailTemplatesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1ListEmailTemplatesCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    NextToken: undefined,\n                    TemplatesMetadata: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.NextToken !== undefined && data.NextToken !== null) {\n                    contents.NextToken = __expectString(data.NextToken);\n                }\n                if (data.TemplatesMetadata !== undefined && data.TemplatesMetadata !== null) {\n                    contents.TemplatesMetadata = deserializeAws_restJson1EmailTemplateMetadataList(data.TemplatesMetadata, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1ListEmailTemplatesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"TooManyRequestsException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 4];\n                }\n                return [3, 6];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1ListImportJobsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1ListImportJobsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    ImportJobs: undefined,\n                    NextToken: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.ImportJobs !== undefined && data.ImportJobs !== null) {\n                    contents.ImportJobs = deserializeAws_restJson1ImportJobSummaryList(data.ImportJobs, context);\n                }\n                if (data.NextToken !== undefined && data.NextToken !== null) {\n                    contents.NextToken = __expectString(data.NextToken);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1ListImportJobsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"TooManyRequestsException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 4];\n                }\n                return [3, 6];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1ListSuppressedDestinationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1ListSuppressedDestinationsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    NextToken: undefined,\n                    SuppressedDestinationSummaries: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.NextToken !== undefined && data.NextToken !== null) {\n                    contents.NextToken = __expectString(data.NextToken);\n                }\n                if (data.SuppressedDestinationSummaries !== undefined && data.SuppressedDestinationSummaries !== null) {\n                    contents.SuppressedDestinationSummaries = deserializeAws_restJson1SuppressedDestinationSummaries(data.SuppressedDestinationSummaries, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1ListSuppressedDestinationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"InvalidNextTokenException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#InvalidNextTokenException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1InvalidNextTokenExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1ListTagsForResourceCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1ListTagsForResourceCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    Tags: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.Tags !== undefined && data.Tags !== null) {\n                    contents.Tags = deserializeAws_restJson1TagList(data.Tags, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1ListTagsForResourceCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutAccountDedicatedIpWarmupAttributesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutAccountDedicatedIpWarmupAttributesCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutAccountDedicatedIpWarmupAttributesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"TooManyRequestsException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 4];\n                }\n                return [3, 6];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutAccountDetailsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutAccountDetailsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutAccountDetailsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"ConflictException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#ConflictException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutAccountSendingAttributesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutAccountSendingAttributesCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutAccountSendingAttributesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"TooManyRequestsException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 4];\n                }\n                return [3, 6];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutAccountSuppressionAttributesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutAccountSuppressionAttributesCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutAccountSuppressionAttributesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"TooManyRequestsException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 4];\n                }\n                return [3, 6];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutConfigurationSetDeliveryOptionsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutConfigurationSetDeliveryOptionsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutConfigurationSetDeliveryOptionsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutConfigurationSetReputationOptionsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutConfigurationSetReputationOptionsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutConfigurationSetReputationOptionsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutConfigurationSetSendingOptionsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutConfigurationSetSendingOptionsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutConfigurationSetSendingOptionsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutConfigurationSetSuppressionOptionsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutConfigurationSetSuppressionOptionsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutConfigurationSetSuppressionOptionsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutConfigurationSetTrackingOptionsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutConfigurationSetTrackingOptionsCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutConfigurationSetTrackingOptionsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutDedicatedIpInPoolCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutDedicatedIpInPoolCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutDedicatedIpInPoolCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutDedicatedIpWarmupAttributesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutDedicatedIpWarmupAttributesCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutDedicatedIpWarmupAttributesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutDeliverabilityDashboardOptionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutDeliverabilityDashboardOptionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutDeliverabilityDashboardOptionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _h = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"AlreadyExistsException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#AlreadyExistsException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 4];\n                    case \"LimitExceededException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#LimitExceededException\": return [3, 6];\n                    case \"NotFoundException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 8];\n                    case \"TooManyRequestsException\": return [3, 10];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 10];\n                }\n                return [3, 12];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1AlreadyExistsExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 10:\n                _g = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutEmailIdentityConfigurationSetAttributesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutEmailIdentityConfigurationSetAttributesCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutEmailIdentityConfigurationSetAttributesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutEmailIdentityDkimAttributesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutEmailIdentityDkimAttributesCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutEmailIdentityDkimAttributesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutEmailIdentityDkimSigningAttributesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutEmailIdentityDkimSigningAttributesCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    DkimStatus: undefined,\n                    DkimTokens: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.DkimStatus !== undefined && data.DkimStatus !== null) {\n                    contents.DkimStatus = __expectString(data.DkimStatus);\n                }\n                if (data.DkimTokens !== undefined && data.DkimTokens !== null) {\n                    contents.DkimTokens = deserializeAws_restJson1DnsTokenList(data.DkimTokens, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutEmailIdentityDkimSigningAttributesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutEmailIdentityFeedbackAttributesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutEmailIdentityFeedbackAttributesCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutEmailIdentityFeedbackAttributesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutEmailIdentityMailFromAttributesCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutEmailIdentityMailFromAttributesCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutEmailIdentityMailFromAttributesCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutSuppressedDestinationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1PutSuppressedDestinationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PutSuppressedDestinationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _e = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"TooManyRequestsException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 4];\n                }\n                return [3, 6];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1SendBulkEmailCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1SendBulkEmailCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    BulkEmailEntryResults: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.BulkEmailEntryResults !== undefined && data.BulkEmailEntryResults !== null) {\n                    contents.BulkEmailEntryResults = deserializeAws_restJson1BulkEmailEntryResultList(data.BulkEmailEntryResults, context);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1SendBulkEmailCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n    var _l;\n    return __generator(this, function (_m) {\n        switch (_m.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _l = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"AccountSuspendedException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#AccountSuspendedException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 4];\n                    case \"LimitExceededException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#LimitExceededException\": return [3, 6];\n                    case \"MailFromDomainNotVerifiedException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#MailFromDomainNotVerifiedException\": return [3, 8];\n                    case \"MessageRejected\": return [3, 10];\n                    case \"com.amazonaws.sesv2#MessageRejected\": return [3, 10];\n                    case \"NotFoundException\": return [3, 12];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 12];\n                    case \"SendingPausedException\": return [3, 14];\n                    case \"com.amazonaws.sesv2#SendingPausedException\": return [3, 14];\n                    case \"TooManyRequestsException\": return [3, 16];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 16];\n                }\n                return [3, 18];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1AccountSuspendedExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1MailFromDomainNotVerifiedExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 10:\n                _g = [{}];\n                return [4, deserializeAws_restJson1MessageRejectedResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 12:\n                _h = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 14:\n                _j = [{}];\n                return [4, deserializeAws_restJson1SendingPausedExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 16:\n                _k = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 17:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 18:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _m.label = 19;\n            case 19:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1SendCustomVerificationEmailCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1SendCustomVerificationEmailCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    MessageId: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.MessageId !== undefined && data.MessageId !== null) {\n                    contents.MessageId = __expectString(data.MessageId);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1SendCustomVerificationEmailCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n    var _k;\n    return __generator(this, function (_l) {\n        switch (_l.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _k = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"LimitExceededException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#LimitExceededException\": return [3, 4];\n                    case \"MailFromDomainNotVerifiedException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#MailFromDomainNotVerifiedException\": return [3, 6];\n                    case \"MessageRejected\": return [3, 8];\n                    case \"com.amazonaws.sesv2#MessageRejected\": return [3, 8];\n                    case \"NotFoundException\": return [3, 10];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 10];\n                    case \"SendingPausedException\": return [3, 12];\n                    case \"com.amazonaws.sesv2#SendingPausedException\": return [3, 12];\n                    case \"TooManyRequestsException\": return [3, 14];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 14];\n                }\n                return [3, 16];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 17];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 17];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1MailFromDomainNotVerifiedExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 17];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1MessageRejectedResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 17];\n            case 10:\n                _g = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 17];\n            case 12:\n                _h = [{}];\n                return [4, deserializeAws_restJson1SendingPausedExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 17];\n            case 14:\n                _j = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_l.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 17];\n            case 16:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _l.label = 17;\n            case 17:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1SendEmailCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1SendEmailCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    MessageId: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.MessageId !== undefined && data.MessageId !== null) {\n                    contents.MessageId = __expectString(data.MessageId);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1SendEmailCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n    var _l;\n    return __generator(this, function (_m) {\n        switch (_m.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _l = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"AccountSuspendedException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#AccountSuspendedException\": return [3, 2];\n                    case \"BadRequestException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 4];\n                    case \"LimitExceededException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#LimitExceededException\": return [3, 6];\n                    case \"MailFromDomainNotVerifiedException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#MailFromDomainNotVerifiedException\": return [3, 8];\n                    case \"MessageRejected\": return [3, 10];\n                    case \"com.amazonaws.sesv2#MessageRejected\": return [3, 10];\n                    case \"NotFoundException\": return [3, 12];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 12];\n                    case \"SendingPausedException\": return [3, 14];\n                    case \"com.amazonaws.sesv2#SendingPausedException\": return [3, 14];\n                    case \"TooManyRequestsException\": return [3, 16];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 16];\n                }\n                return [3, 18];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1AccountSuspendedExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1MailFromDomainNotVerifiedExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 10:\n                _g = [{}];\n                return [4, deserializeAws_restJson1MessageRejectedResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 12:\n                _h = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 14:\n                _j = [{}];\n                return [4, deserializeAws_restJson1SendingPausedExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 16:\n                _k = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 17:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 19];\n            case 18:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _m.label = 19;\n            case 19:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1TagResourceCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1TagResourceCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1TagResourceCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _g = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"ConcurrentModificationException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#ConcurrentModificationException\": return [3, 4];\n                    case \"NotFoundException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 6];\n                    case \"TooManyRequestsException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 8];\n                }\n                return [3, 10];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1TestRenderEmailTemplateCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1TestRenderEmailTemplateCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    RenderedTemplate: undefined,\n                };\n                _a = __expectNonNull;\n                _b = __expectObject;\n                return [4, parseBody(output.body, context)];\n            case 1:\n                data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n                if (data.RenderedTemplate !== undefined && data.RenderedTemplate !== null) {\n                    contents.RenderedTemplate = __expectString(data.RenderedTemplate);\n                }\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1TestRenderEmailTemplateCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1UntagResourceCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1UntagResourceCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1UntagResourceCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _g = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"ConcurrentModificationException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#ConcurrentModificationException\": return [3, 4];\n                    case \"NotFoundException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 6];\n                    case \"TooManyRequestsException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 8];\n                }\n                return [3, 10];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1UpdateConfigurationSetEventDestinationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1UpdateConfigurationSetEventDestinationCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1UpdateConfigurationSetEventDestinationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1UpdateContactCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1UpdateContactCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1UpdateContactCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _g = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"ConcurrentModificationException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#ConcurrentModificationException\": return [3, 4];\n                    case \"NotFoundException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 6];\n                    case \"TooManyRequestsException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 8];\n                }\n                return [3, 10];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1UpdateContactListCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1UpdateContactListCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1UpdateContactListCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _g = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"ConcurrentModificationException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#ConcurrentModificationException\": return [3, 4];\n                    case \"NotFoundException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 6];\n                    case \"TooManyRequestsException\": return [3, 8];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 8];\n                }\n                return [3, 10];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 8:\n                _f = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1UpdateCustomVerificationEmailTemplateCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1UpdateCustomVerificationEmailTemplateCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1UpdateCustomVerificationEmailTemplateCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1UpdateEmailIdentityPolicyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1UpdateEmailIdentityPolicyCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1UpdateEmailIdentityPolicyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1UpdateEmailTemplateCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 300) {\n                    return [2, deserializeAws_restJson1UpdateEmailTemplateCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [4, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                return [2, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1UpdateEmailTemplateCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _f = {};\n                return [4, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _b = errorCode;\n                switch (_b) {\n                    case \"BadRequestException\": return [3, 2];\n                    case \"com.amazonaws.sesv2#BadRequestException\": return [3, 2];\n                    case \"NotFoundException\": return [3, 4];\n                    case \"com.amazonaws.sesv2#NotFoundException\": return [3, 4];\n                    case \"TooManyRequestsException\": return [3, 6];\n                    case \"com.amazonaws.sesv2#TooManyRequestsException\": return [3, 6];\n                }\n                return [3, 8];\n            case 2:\n                _c = [{}];\n                return [4, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 4:\n                _d = [{}];\n                return [4, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 6:\n                _e = [{}];\n                return [4, deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_restJson1AccountSuspendedExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"AccountSuspendedException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = __expectString(data.message);\n        }\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restJson1AlreadyExistsExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"AlreadyExistsException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = __expectString(data.message);\n        }\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restJson1BadRequestExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"BadRequestException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = __expectString(data.message);\n        }\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restJson1ConcurrentModificationExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"ConcurrentModificationException\",\n            $fault: \"server\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = __expectString(data.message);\n        }\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restJson1ConflictExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"ConflictException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = __expectString(data.message);\n        }\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restJson1InvalidNextTokenExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"InvalidNextTokenException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = __expectString(data.message);\n        }\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restJson1LimitExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = __expectString(data.message);\n        }\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restJson1MailFromDomainNotVerifiedExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"MailFromDomainNotVerifiedException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = __expectString(data.message);\n        }\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restJson1MessageRejectedResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"MessageRejected\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = __expectString(data.message);\n        }\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restJson1NotFoundExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"NotFoundException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = __expectString(data.message);\n        }\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restJson1SendingPausedExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"SendingPausedException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = __expectString(data.message);\n        }\n        return [2, contents];\n    });\n}); };\nvar deserializeAws_restJson1TooManyRequestsExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = __expectString(data.message);\n        }\n        return [2, contents];\n    });\n}); };\nvar serializeAws_restJson1AdditionalContactEmailAddresses = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar serializeAws_restJson1Body = function (input, context) {\n    return __assign(__assign({}, (input.Html !== undefined &&\n        input.Html !== null && { Html: serializeAws_restJson1Content(input.Html, context) })), (input.Text !== undefined &&\n        input.Text !== null && { Text: serializeAws_restJson1Content(input.Text, context) }));\n};\nvar serializeAws_restJson1BulkEmailContent = function (input, context) {\n    return __assign({}, (input.Template !== undefined &&\n        input.Template !== null && { Template: serializeAws_restJson1Template(input.Template, context) }));\n};\nvar serializeAws_restJson1BulkEmailEntry = function (input, context) {\n    return __assign(__assign(__assign({}, (input.Destination !== undefined &&\n        input.Destination !== null && { Destination: serializeAws_restJson1Destination(input.Destination, context) })), (input.ReplacementEmailContent !== undefined &&\n        input.ReplacementEmailContent !== null && {\n        ReplacementEmailContent: serializeAws_restJson1ReplacementEmailContent(input.ReplacementEmailContent, context),\n    })), (input.ReplacementTags !== undefined &&\n        input.ReplacementTags !== null && {\n        ReplacementTags: serializeAws_restJson1MessageTagList(input.ReplacementTags, context),\n    }));\n};\nvar serializeAws_restJson1BulkEmailEntryList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_restJson1BulkEmailEntry(entry, context);\n    });\n};\nvar serializeAws_restJson1CloudWatchDestination = function (input, context) {\n    return __assign({}, (input.DimensionConfigurations !== undefined &&\n        input.DimensionConfigurations !== null && {\n        DimensionConfigurations: serializeAws_restJson1CloudWatchDimensionConfigurations(input.DimensionConfigurations, context),\n    }));\n};\nvar serializeAws_restJson1CloudWatchDimensionConfiguration = function (input, context) {\n    return __assign(__assign(__assign({}, (input.DefaultDimensionValue !== undefined &&\n        input.DefaultDimensionValue !== null && { DefaultDimensionValue: input.DefaultDimensionValue })), (input.DimensionName !== undefined && input.DimensionName !== null && { DimensionName: input.DimensionName })), (input.DimensionValueSource !== undefined &&\n        input.DimensionValueSource !== null && { DimensionValueSource: input.DimensionValueSource }));\n};\nvar serializeAws_restJson1CloudWatchDimensionConfigurations = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_restJson1CloudWatchDimensionConfiguration(entry, context);\n    });\n};\nvar serializeAws_restJson1ContactListDestination = function (input, context) {\n    return __assign(__assign({}, (input.ContactListImportAction !== undefined &&\n        input.ContactListImportAction !== null && { ContactListImportAction: input.ContactListImportAction })), (input.ContactListName !== undefined &&\n        input.ContactListName !== null && { ContactListName: input.ContactListName }));\n};\nvar serializeAws_restJson1Content = function (input, context) {\n    return __assign(__assign({}, (input.Charset !== undefined && input.Charset !== null && { Charset: input.Charset })), (input.Data !== undefined && input.Data !== null && { Data: input.Data }));\n};\nvar serializeAws_restJson1DeliveryOptions = function (input, context) {\n    return __assign(__assign({}, (input.SendingPoolName !== undefined &&\n        input.SendingPoolName !== null && { SendingPoolName: input.SendingPoolName })), (input.TlsPolicy !== undefined && input.TlsPolicy !== null && { TlsPolicy: input.TlsPolicy }));\n};\nvar serializeAws_restJson1Destination = function (input, context) {\n    return __assign(__assign(__assign({}, (input.BccAddresses !== undefined &&\n        input.BccAddresses !== null && {\n        BccAddresses: serializeAws_restJson1EmailAddressList(input.BccAddresses, context),\n    })), (input.CcAddresses !== undefined &&\n        input.CcAddresses !== null && {\n        CcAddresses: serializeAws_restJson1EmailAddressList(input.CcAddresses, context),\n    })), (input.ToAddresses !== undefined &&\n        input.ToAddresses !== null && {\n        ToAddresses: serializeAws_restJson1EmailAddressList(input.ToAddresses, context),\n    }));\n};\nvar serializeAws_restJson1DkimSigningAttributes = function (input, context) {\n    return __assign(__assign(__assign({}, (input.DomainSigningPrivateKey !== undefined &&\n        input.DomainSigningPrivateKey !== null && { DomainSigningPrivateKey: input.DomainSigningPrivateKey })), (input.DomainSigningSelector !== undefined &&\n        input.DomainSigningSelector !== null && { DomainSigningSelector: input.DomainSigningSelector })), (input.NextSigningKeyLength !== undefined &&\n        input.NextSigningKeyLength !== null && { NextSigningKeyLength: input.NextSigningKeyLength }));\n};\nvar serializeAws_restJson1DomainDeliverabilityTrackingOption = function (input, context) {\n    return __assign(__assign(__assign({}, (input.Domain !== undefined && input.Domain !== null && { Domain: input.Domain })), (input.InboxPlacementTrackingOption !== undefined &&\n        input.InboxPlacementTrackingOption !== null && {\n        InboxPlacementTrackingOption: serializeAws_restJson1InboxPlacementTrackingOption(input.InboxPlacementTrackingOption, context),\n    })), (input.SubscriptionStartDate !== undefined &&\n        input.SubscriptionStartDate !== null && {\n        SubscriptionStartDate: Math.round(input.SubscriptionStartDate.getTime() / 1000),\n    }));\n};\nvar serializeAws_restJson1DomainDeliverabilityTrackingOptions = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_restJson1DomainDeliverabilityTrackingOption(entry, context);\n    });\n};\nvar serializeAws_restJson1EmailAddressList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar serializeAws_restJson1EmailContent = function (input, context) {\n    return __assign(__assign(__assign({}, (input.Raw !== undefined && input.Raw !== null && { Raw: serializeAws_restJson1RawMessage(input.Raw, context) })), (input.Simple !== undefined &&\n        input.Simple !== null && { Simple: serializeAws_restJson1Message(input.Simple, context) })), (input.Template !== undefined &&\n        input.Template !== null && { Template: serializeAws_restJson1Template(input.Template, context) }));\n};\nvar serializeAws_restJson1EmailTemplateContent = function (input, context) {\n    return __assign(__assign(__assign({}, (input.Html !== undefined && input.Html !== null && { Html: input.Html })), (input.Subject !== undefined && input.Subject !== null && { Subject: input.Subject })), (input.Text !== undefined && input.Text !== null && { Text: input.Text }));\n};\nvar serializeAws_restJson1EventDestinationDefinition = function (input, context) {\n    return __assign(__assign(__assign(__assign(__assign(__assign({}, (input.CloudWatchDestination !== undefined &&\n        input.CloudWatchDestination !== null && {\n        CloudWatchDestination: serializeAws_restJson1CloudWatchDestination(input.CloudWatchDestination, context),\n    })), (input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled })), (input.KinesisFirehoseDestination !== undefined &&\n        input.KinesisFirehoseDestination !== null && {\n        KinesisFirehoseDestination: serializeAws_restJson1KinesisFirehoseDestination(input.KinesisFirehoseDestination, context),\n    })), (input.MatchingEventTypes !== undefined &&\n        input.MatchingEventTypes !== null && {\n        MatchingEventTypes: serializeAws_restJson1EventTypes(input.MatchingEventTypes, context),\n    })), (input.PinpointDestination !== undefined &&\n        input.PinpointDestination !== null && {\n        PinpointDestination: serializeAws_restJson1PinpointDestination(input.PinpointDestination, context),\n    })), (input.SnsDestination !== undefined &&\n        input.SnsDestination !== null && {\n        SnsDestination: serializeAws_restJson1SnsDestination(input.SnsDestination, context),\n    }));\n};\nvar serializeAws_restJson1EventTypes = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar serializeAws_restJson1ImportDataSource = function (input, context) {\n    return __assign(__assign({}, (input.DataFormat !== undefined && input.DataFormat !== null && { DataFormat: input.DataFormat })), (input.S3Url !== undefined && input.S3Url !== null && { S3Url: input.S3Url }));\n};\nvar serializeAws_restJson1ImportDestination = function (input, context) {\n    return __assign(__assign({}, (input.ContactListDestination !== undefined &&\n        input.ContactListDestination !== null && {\n        ContactListDestination: serializeAws_restJson1ContactListDestination(input.ContactListDestination, context),\n    })), (input.SuppressionListDestination !== undefined &&\n        input.SuppressionListDestination !== null && {\n        SuppressionListDestination: serializeAws_restJson1SuppressionListDestination(input.SuppressionListDestination, context),\n    }));\n};\nvar serializeAws_restJson1InboxPlacementTrackingOption = function (input, context) {\n    return __assign(__assign({}, (input.Global !== undefined && input.Global !== null && { Global: input.Global })), (input.TrackedIsps !== undefined &&\n        input.TrackedIsps !== null && { TrackedIsps: serializeAws_restJson1IspNameList(input.TrackedIsps, context) }));\n};\nvar serializeAws_restJson1IspNameList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar serializeAws_restJson1KinesisFirehoseDestination = function (input, context) {\n    return __assign(__assign({}, (input.DeliveryStreamArn !== undefined &&\n        input.DeliveryStreamArn !== null && { DeliveryStreamArn: input.DeliveryStreamArn })), (input.IamRoleArn !== undefined && input.IamRoleArn !== null && { IamRoleArn: input.IamRoleArn }));\n};\nvar serializeAws_restJson1ListContactsFilter = function (input, context) {\n    return __assign(__assign({}, (input.FilteredStatus !== undefined &&\n        input.FilteredStatus !== null && { FilteredStatus: input.FilteredStatus })), (input.TopicFilter !== undefined &&\n        input.TopicFilter !== null && { TopicFilter: serializeAws_restJson1TopicFilter(input.TopicFilter, context) }));\n};\nvar serializeAws_restJson1ListManagementOptions = function (input, context) {\n    return __assign(__assign({}, (input.ContactListName !== undefined &&\n        input.ContactListName !== null && { ContactListName: input.ContactListName })), (input.TopicName !== undefined && input.TopicName !== null && { TopicName: input.TopicName }));\n};\nvar serializeAws_restJson1Message = function (input, context) {\n    return __assign(__assign({}, (input.Body !== undefined && input.Body !== null && { Body: serializeAws_restJson1Body(input.Body, context) })), (input.Subject !== undefined &&\n        input.Subject !== null && { Subject: serializeAws_restJson1Content(input.Subject, context) }));\n};\nvar serializeAws_restJson1MessageTag = function (input, context) {\n    return __assign(__assign({}, (input.Name !== undefined && input.Name !== null && { Name: input.Name })), (input.Value !== undefined && input.Value !== null && { Value: input.Value }));\n};\nvar serializeAws_restJson1MessageTagList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_restJson1MessageTag(entry, context);\n    });\n};\nvar serializeAws_restJson1PinpointDestination = function (input, context) {\n    return __assign({}, (input.ApplicationArn !== undefined &&\n        input.ApplicationArn !== null && { ApplicationArn: input.ApplicationArn }));\n};\nvar serializeAws_restJson1RawMessage = function (input, context) {\n    return __assign({}, (input.Data !== undefined && input.Data !== null && { Data: context.base64Encoder(input.Data) }));\n};\nvar serializeAws_restJson1ReplacementEmailContent = function (input, context) {\n    return __assign({}, (input.ReplacementTemplate !== undefined &&\n        input.ReplacementTemplate !== null && {\n        ReplacementTemplate: serializeAws_restJson1ReplacementTemplate(input.ReplacementTemplate, context),\n    }));\n};\nvar serializeAws_restJson1ReplacementTemplate = function (input, context) {\n    return __assign({}, (input.ReplacementTemplateData !== undefined &&\n        input.ReplacementTemplateData !== null && { ReplacementTemplateData: input.ReplacementTemplateData }));\n};\nvar serializeAws_restJson1ReputationOptions = function (input, context) {\n    return __assign(__assign({}, (input.LastFreshStart !== undefined &&\n        input.LastFreshStart !== null && { LastFreshStart: Math.round(input.LastFreshStart.getTime() / 1000) })), (input.ReputationMetricsEnabled !== undefined &&\n        input.ReputationMetricsEnabled !== null && { ReputationMetricsEnabled: input.ReputationMetricsEnabled }));\n};\nvar serializeAws_restJson1SendingOptions = function (input, context) {\n    return __assign({}, (input.SendingEnabled !== undefined &&\n        input.SendingEnabled !== null && { SendingEnabled: input.SendingEnabled }));\n};\nvar serializeAws_restJson1SnsDestination = function (input, context) {\n    return __assign({}, (input.TopicArn !== undefined && input.TopicArn !== null && { TopicArn: input.TopicArn }));\n};\nvar serializeAws_restJson1SuppressionListDestination = function (input, context) {\n    return __assign({}, (input.SuppressionListImportAction !== undefined &&\n        input.SuppressionListImportAction !== null && { SuppressionListImportAction: input.SuppressionListImportAction }));\n};\nvar serializeAws_restJson1SuppressionListReasons = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nvar serializeAws_restJson1SuppressionOptions = function (input, context) {\n    return __assign({}, (input.SuppressedReasons !== undefined &&\n        input.SuppressedReasons !== null && {\n        SuppressedReasons: serializeAws_restJson1SuppressionListReasons(input.SuppressedReasons, context),\n    }));\n};\nvar serializeAws_restJson1Tag = function (input, context) {\n    return __assign(__assign({}, (input.Key !== undefined && input.Key !== null && { Key: input.Key })), (input.Value !== undefined && input.Value !== null && { Value: input.Value }));\n};\nvar serializeAws_restJson1TagList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_restJson1Tag(entry, context);\n    });\n};\nvar serializeAws_restJson1Template = function (input, context) {\n    return __assign(__assign(__assign({}, (input.TemplateArn !== undefined && input.TemplateArn !== null && { TemplateArn: input.TemplateArn })), (input.TemplateData !== undefined && input.TemplateData !== null && { TemplateData: input.TemplateData })), (input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName }));\n};\nvar serializeAws_restJson1Topic = function (input, context) {\n    return __assign(__assign(__assign(__assign({}, (input.DefaultSubscriptionStatus !== undefined &&\n        input.DefaultSubscriptionStatus !== null && { DefaultSubscriptionStatus: input.DefaultSubscriptionStatus })), (input.Description !== undefined && input.Description !== null && { Description: input.Description })), (input.DisplayName !== undefined && input.DisplayName !== null && { DisplayName: input.DisplayName })), (input.TopicName !== undefined && input.TopicName !== null && { TopicName: input.TopicName }));\n};\nvar serializeAws_restJson1TopicFilter = function (input, context) {\n    return __assign(__assign({}, (input.TopicName !== undefined && input.TopicName !== null && { TopicName: input.TopicName })), (input.UseDefaultIfPreferenceUnavailable !== undefined &&\n        input.UseDefaultIfPreferenceUnavailable !== null && {\n        UseDefaultIfPreferenceUnavailable: input.UseDefaultIfPreferenceUnavailable,\n    }));\n};\nvar serializeAws_restJson1TopicPreference = function (input, context) {\n    return __assign(__assign({}, (input.SubscriptionStatus !== undefined &&\n        input.SubscriptionStatus !== null && { SubscriptionStatus: input.SubscriptionStatus })), (input.TopicName !== undefined && input.TopicName !== null && { TopicName: input.TopicName }));\n};\nvar serializeAws_restJson1TopicPreferenceList = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_restJson1TopicPreference(entry, context);\n    });\n};\nvar serializeAws_restJson1Topics = function (input, context) {\n    return input\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_restJson1Topic(entry, context);\n    });\n};\nvar serializeAws_restJson1TrackingOptions = function (input, context) {\n    return __assign({}, (input.CustomRedirectDomain !== undefined &&\n        input.CustomRedirectDomain !== null && { CustomRedirectDomain: input.CustomRedirectDomain }));\n};\nvar deserializeAws_restJson1AccountDetails = function (output, context) {\n    return {\n        AdditionalContactEmailAddresses: output.AdditionalContactEmailAddresses !== undefined && output.AdditionalContactEmailAddresses !== null\n            ? deserializeAws_restJson1AdditionalContactEmailAddresses(output.AdditionalContactEmailAddresses, context)\n            : undefined,\n        ContactLanguage: __expectString(output.ContactLanguage),\n        MailType: __expectString(output.MailType),\n        ReviewDetails: output.ReviewDetails !== undefined && output.ReviewDetails !== null\n            ? deserializeAws_restJson1ReviewDetails(output.ReviewDetails, context)\n            : undefined,\n        UseCaseDescription: __expectString(output.UseCaseDescription),\n        WebsiteURL: __expectString(output.WebsiteURL),\n    };\n};\nvar deserializeAws_restJson1AdditionalContactEmailAddresses = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restJson1BlacklistEntries = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1BlacklistEntry(entry, context);\n    });\n};\nvar deserializeAws_restJson1BlacklistEntry = function (output, context) {\n    return {\n        Description: __expectString(output.Description),\n        ListingTime: output.ListingTime !== undefined && output.ListingTime !== null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ListingTime)))\n            : undefined,\n        RblName: __expectString(output.RblName),\n    };\n};\nvar deserializeAws_restJson1BlacklistReport = function (output, context) {\n    return Object.entries(output).reduce(function (acc, _a) {\n        var _b;\n        var _c = __read(_a, 2), key = _c[0], value = _c[1];\n        if (value === null) {\n            return acc;\n        }\n        return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1BlacklistEntries(value, context), _b));\n    }, {});\n};\nvar deserializeAws_restJson1BulkEmailEntryResult = function (output, context) {\n    return {\n        Error: __expectString(output.Error),\n        MessageId: __expectString(output.MessageId),\n        Status: __expectString(output.Status),\n    };\n};\nvar deserializeAws_restJson1BulkEmailEntryResultList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1BulkEmailEntryResult(entry, context);\n    });\n};\nvar deserializeAws_restJson1CloudWatchDestination = function (output, context) {\n    return {\n        DimensionConfigurations: output.DimensionConfigurations !== undefined && output.DimensionConfigurations !== null\n            ? deserializeAws_restJson1CloudWatchDimensionConfigurations(output.DimensionConfigurations, context)\n            : undefined,\n    };\n};\nvar deserializeAws_restJson1CloudWatchDimensionConfiguration = function (output, context) {\n    return {\n        DefaultDimensionValue: __expectString(output.DefaultDimensionValue),\n        DimensionName: __expectString(output.DimensionName),\n        DimensionValueSource: __expectString(output.DimensionValueSource),\n    };\n};\nvar deserializeAws_restJson1CloudWatchDimensionConfigurations = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1CloudWatchDimensionConfiguration(entry, context);\n    });\n};\nvar deserializeAws_restJson1ConfigurationSetNameList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restJson1Contact = function (output, context) {\n    return {\n        EmailAddress: __expectString(output.EmailAddress),\n        LastUpdatedTimestamp: output.LastUpdatedTimestamp !== undefined && output.LastUpdatedTimestamp !== null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdatedTimestamp)))\n            : undefined,\n        TopicDefaultPreferences: output.TopicDefaultPreferences !== undefined && output.TopicDefaultPreferences !== null\n            ? deserializeAws_restJson1TopicPreferenceList(output.TopicDefaultPreferences, context)\n            : undefined,\n        TopicPreferences: output.TopicPreferences !== undefined && output.TopicPreferences !== null\n            ? deserializeAws_restJson1TopicPreferenceList(output.TopicPreferences, context)\n            : undefined,\n        UnsubscribeAll: __expectBoolean(output.UnsubscribeAll),\n    };\n};\nvar deserializeAws_restJson1ContactList = function (output, context) {\n    return {\n        ContactListName: __expectString(output.ContactListName),\n        LastUpdatedTimestamp: output.LastUpdatedTimestamp !== undefined && output.LastUpdatedTimestamp !== null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdatedTimestamp)))\n            : undefined,\n    };\n};\nvar deserializeAws_restJson1ContactListDestination = function (output, context) {\n    return {\n        ContactListImportAction: __expectString(output.ContactListImportAction),\n        ContactListName: __expectString(output.ContactListName),\n    };\n};\nvar deserializeAws_restJson1CustomVerificationEmailTemplateMetadata = function (output, context) {\n    return {\n        FailureRedirectionURL: __expectString(output.FailureRedirectionURL),\n        FromEmailAddress: __expectString(output.FromEmailAddress),\n        SuccessRedirectionURL: __expectString(output.SuccessRedirectionURL),\n        TemplateName: __expectString(output.TemplateName),\n        TemplateSubject: __expectString(output.TemplateSubject),\n    };\n};\nvar deserializeAws_restJson1CustomVerificationEmailTemplatesList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1CustomVerificationEmailTemplateMetadata(entry, context);\n    });\n};\nvar deserializeAws_restJson1DailyVolume = function (output, context) {\n    return {\n        DomainIspPlacements: output.DomainIspPlacements !== undefined && output.DomainIspPlacements !== null\n            ? deserializeAws_restJson1DomainIspPlacements(output.DomainIspPlacements, context)\n            : undefined,\n        StartDate: output.StartDate !== undefined && output.StartDate !== null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.StartDate)))\n            : undefined,\n        VolumeStatistics: output.VolumeStatistics !== undefined && output.VolumeStatistics !== null\n            ? deserializeAws_restJson1VolumeStatistics(output.VolumeStatistics, context)\n            : undefined,\n    };\n};\nvar deserializeAws_restJson1DailyVolumes = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1DailyVolume(entry, context);\n    });\n};\nvar deserializeAws_restJson1DedicatedIp = function (output, context) {\n    return {\n        Ip: __expectString(output.Ip),\n        PoolName: __expectString(output.PoolName),\n        WarmupPercentage: __expectInt32(output.WarmupPercentage),\n        WarmupStatus: __expectString(output.WarmupStatus),\n    };\n};\nvar deserializeAws_restJson1DedicatedIpList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1DedicatedIp(entry, context);\n    });\n};\nvar deserializeAws_restJson1DeliverabilityTestReport = function (output, context) {\n    return {\n        CreateDate: output.CreateDate !== undefined && output.CreateDate !== null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreateDate)))\n            : undefined,\n        DeliverabilityTestStatus: __expectString(output.DeliverabilityTestStatus),\n        FromEmailAddress: __expectString(output.FromEmailAddress),\n        ReportId: __expectString(output.ReportId),\n        ReportName: __expectString(output.ReportName),\n        Subject: __expectString(output.Subject),\n    };\n};\nvar deserializeAws_restJson1DeliverabilityTestReports = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1DeliverabilityTestReport(entry, context);\n    });\n};\nvar deserializeAws_restJson1DeliveryOptions = function (output, context) {\n    return {\n        SendingPoolName: __expectString(output.SendingPoolName),\n        TlsPolicy: __expectString(output.TlsPolicy),\n    };\n};\nvar deserializeAws_restJson1DkimAttributes = function (output, context) {\n    return {\n        CurrentSigningKeyLength: __expectString(output.CurrentSigningKeyLength),\n        LastKeyGenerationTimestamp: output.LastKeyGenerationTimestamp !== undefined && output.LastKeyGenerationTimestamp !== null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastKeyGenerationTimestamp)))\n            : undefined,\n        NextSigningKeyLength: __expectString(output.NextSigningKeyLength),\n        SigningAttributesOrigin: __expectString(output.SigningAttributesOrigin),\n        SigningEnabled: __expectBoolean(output.SigningEnabled),\n        Status: __expectString(output.Status),\n        Tokens: output.Tokens !== undefined && output.Tokens !== null\n            ? deserializeAws_restJson1DnsTokenList(output.Tokens, context)\n            : undefined,\n    };\n};\nvar deserializeAws_restJson1DnsTokenList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restJson1DomainDeliverabilityCampaign = function (output, context) {\n    return {\n        CampaignId: __expectString(output.CampaignId),\n        DeleteRate: __limitedParseDouble(output.DeleteRate),\n        Esps: output.Esps !== undefined && output.Esps !== null\n            ? deserializeAws_restJson1Esps(output.Esps, context)\n            : undefined,\n        FirstSeenDateTime: output.FirstSeenDateTime !== undefined && output.FirstSeenDateTime !== null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.FirstSeenDateTime)))\n            : undefined,\n        FromAddress: __expectString(output.FromAddress),\n        ImageUrl: __expectString(output.ImageUrl),\n        InboxCount: __expectLong(output.InboxCount),\n        LastSeenDateTime: output.LastSeenDateTime !== undefined && output.LastSeenDateTime !== null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastSeenDateTime)))\n            : undefined,\n        ProjectedVolume: __expectLong(output.ProjectedVolume),\n        ReadDeleteRate: __limitedParseDouble(output.ReadDeleteRate),\n        ReadRate: __limitedParseDouble(output.ReadRate),\n        SendingIps: output.SendingIps !== undefined && output.SendingIps !== null\n            ? deserializeAws_restJson1IpList(output.SendingIps, context)\n            : undefined,\n        SpamCount: __expectLong(output.SpamCount),\n        Subject: __expectString(output.Subject),\n    };\n};\nvar deserializeAws_restJson1DomainDeliverabilityCampaignList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1DomainDeliverabilityCampaign(entry, context);\n    });\n};\nvar deserializeAws_restJson1DomainDeliverabilityTrackingOption = function (output, context) {\n    return {\n        Domain: __expectString(output.Domain),\n        InboxPlacementTrackingOption: output.InboxPlacementTrackingOption !== undefined && output.InboxPlacementTrackingOption !== null\n            ? deserializeAws_restJson1InboxPlacementTrackingOption(output.InboxPlacementTrackingOption, context)\n            : undefined,\n        SubscriptionStartDate: output.SubscriptionStartDate !== undefined && output.SubscriptionStartDate !== null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.SubscriptionStartDate)))\n            : undefined,\n    };\n};\nvar deserializeAws_restJson1DomainDeliverabilityTrackingOptions = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1DomainDeliverabilityTrackingOption(entry, context);\n    });\n};\nvar deserializeAws_restJson1DomainIspPlacement = function (output, context) {\n    return {\n        InboxPercentage: __limitedParseDouble(output.InboxPercentage),\n        InboxRawCount: __expectLong(output.InboxRawCount),\n        IspName: __expectString(output.IspName),\n        SpamPercentage: __limitedParseDouble(output.SpamPercentage),\n        SpamRawCount: __expectLong(output.SpamRawCount),\n    };\n};\nvar deserializeAws_restJson1DomainIspPlacements = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1DomainIspPlacement(entry, context);\n    });\n};\nvar deserializeAws_restJson1EmailTemplateContent = function (output, context) {\n    return {\n        Html: __expectString(output.Html),\n        Subject: __expectString(output.Subject),\n        Text: __expectString(output.Text),\n    };\n};\nvar deserializeAws_restJson1EmailTemplateMetadata = function (output, context) {\n    return {\n        CreatedTimestamp: output.CreatedTimestamp !== undefined && output.CreatedTimestamp !== null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreatedTimestamp)))\n            : undefined,\n        TemplateName: __expectString(output.TemplateName),\n    };\n};\nvar deserializeAws_restJson1EmailTemplateMetadataList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1EmailTemplateMetadata(entry, context);\n    });\n};\nvar deserializeAws_restJson1Esps = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restJson1EventDestination = function (output, context) {\n    return {\n        CloudWatchDestination: output.CloudWatchDestination !== undefined && output.CloudWatchDestination !== null\n            ? deserializeAws_restJson1CloudWatchDestination(output.CloudWatchDestination, context)\n            : undefined,\n        Enabled: __expectBoolean(output.Enabled),\n        KinesisFirehoseDestination: output.KinesisFirehoseDestination !== undefined && output.KinesisFirehoseDestination !== null\n            ? deserializeAws_restJson1KinesisFirehoseDestination(output.KinesisFirehoseDestination, context)\n            : undefined,\n        MatchingEventTypes: output.MatchingEventTypes !== undefined && output.MatchingEventTypes !== null\n            ? deserializeAws_restJson1EventTypes(output.MatchingEventTypes, context)\n            : undefined,\n        Name: __expectString(output.Name),\n        PinpointDestination: output.PinpointDestination !== undefined && output.PinpointDestination !== null\n            ? deserializeAws_restJson1PinpointDestination(output.PinpointDestination, context)\n            : undefined,\n        SnsDestination: output.SnsDestination !== undefined && output.SnsDestination !== null\n            ? deserializeAws_restJson1SnsDestination(output.SnsDestination, context)\n            : undefined,\n    };\n};\nvar deserializeAws_restJson1EventDestinations = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1EventDestination(entry, context);\n    });\n};\nvar deserializeAws_restJson1EventTypes = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restJson1FailureInfo = function (output, context) {\n    return {\n        ErrorMessage: __expectString(output.ErrorMessage),\n        FailedRecordsS3Url: __expectString(output.FailedRecordsS3Url),\n    };\n};\nvar deserializeAws_restJson1IdentityInfo = function (output, context) {\n    return {\n        IdentityName: __expectString(output.IdentityName),\n        IdentityType: __expectString(output.IdentityType),\n        SendingEnabled: __expectBoolean(output.SendingEnabled),\n    };\n};\nvar deserializeAws_restJson1IdentityInfoList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1IdentityInfo(entry, context);\n    });\n};\nvar deserializeAws_restJson1ImportDataSource = function (output, context) {\n    return {\n        DataFormat: __expectString(output.DataFormat),\n        S3Url: __expectString(output.S3Url),\n    };\n};\nvar deserializeAws_restJson1ImportDestination = function (output, context) {\n    return {\n        ContactListDestination: output.ContactListDestination !== undefined && output.ContactListDestination !== null\n            ? deserializeAws_restJson1ContactListDestination(output.ContactListDestination, context)\n            : undefined,\n        SuppressionListDestination: output.SuppressionListDestination !== undefined && output.SuppressionListDestination !== null\n            ? deserializeAws_restJson1SuppressionListDestination(output.SuppressionListDestination, context)\n            : undefined,\n    };\n};\nvar deserializeAws_restJson1ImportJobSummary = function (output, context) {\n    return {\n        CreatedTimestamp: output.CreatedTimestamp !== undefined && output.CreatedTimestamp !== null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreatedTimestamp)))\n            : undefined,\n        ImportDestination: output.ImportDestination !== undefined && output.ImportDestination !== null\n            ? deserializeAws_restJson1ImportDestination(output.ImportDestination, context)\n            : undefined,\n        JobId: __expectString(output.JobId),\n        JobStatus: __expectString(output.JobStatus),\n    };\n};\nvar deserializeAws_restJson1ImportJobSummaryList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1ImportJobSummary(entry, context);\n    });\n};\nvar deserializeAws_restJson1InboxPlacementTrackingOption = function (output, context) {\n    return {\n        Global: __expectBoolean(output.Global),\n        TrackedIsps: output.TrackedIsps !== undefined && output.TrackedIsps !== null\n            ? deserializeAws_restJson1IspNameList(output.TrackedIsps, context)\n            : undefined,\n    };\n};\nvar deserializeAws_restJson1IpList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restJson1IspNameList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restJson1IspPlacement = function (output, context) {\n    return {\n        IspName: __expectString(output.IspName),\n        PlacementStatistics: output.PlacementStatistics !== undefined && output.PlacementStatistics !== null\n            ? deserializeAws_restJson1PlacementStatistics(output.PlacementStatistics, context)\n            : undefined,\n    };\n};\nvar deserializeAws_restJson1IspPlacements = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1IspPlacement(entry, context);\n    });\n};\nvar deserializeAws_restJson1KinesisFirehoseDestination = function (output, context) {\n    return {\n        DeliveryStreamArn: __expectString(output.DeliveryStreamArn),\n        IamRoleArn: __expectString(output.IamRoleArn),\n    };\n};\nvar deserializeAws_restJson1ListOfContactLists = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1ContactList(entry, context);\n    });\n};\nvar deserializeAws_restJson1ListOfContacts = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1Contact(entry, context);\n    });\n};\nvar deserializeAws_restJson1ListOfDedicatedIpPools = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restJson1MailFromAttributes = function (output, context) {\n    return {\n        BehaviorOnMxFailure: __expectString(output.BehaviorOnMxFailure),\n        MailFromDomain: __expectString(output.MailFromDomain),\n        MailFromDomainStatus: __expectString(output.MailFromDomainStatus),\n    };\n};\nvar deserializeAws_restJson1OverallVolume = function (output, context) {\n    return {\n        DomainIspPlacements: output.DomainIspPlacements !== undefined && output.DomainIspPlacements !== null\n            ? deserializeAws_restJson1DomainIspPlacements(output.DomainIspPlacements, context)\n            : undefined,\n        ReadRatePercent: __limitedParseDouble(output.ReadRatePercent),\n        VolumeStatistics: output.VolumeStatistics !== undefined && output.VolumeStatistics !== null\n            ? deserializeAws_restJson1VolumeStatistics(output.VolumeStatistics, context)\n            : undefined,\n    };\n};\nvar deserializeAws_restJson1PinpointDestination = function (output, context) {\n    return {\n        ApplicationArn: __expectString(output.ApplicationArn),\n    };\n};\nvar deserializeAws_restJson1PlacementStatistics = function (output, context) {\n    return {\n        DkimPercentage: __limitedParseDouble(output.DkimPercentage),\n        InboxPercentage: __limitedParseDouble(output.InboxPercentage),\n        MissingPercentage: __limitedParseDouble(output.MissingPercentage),\n        SpamPercentage: __limitedParseDouble(output.SpamPercentage),\n        SpfPercentage: __limitedParseDouble(output.SpfPercentage),\n    };\n};\nvar deserializeAws_restJson1PolicyMap = function (output, context) {\n    return Object.entries(output).reduce(function (acc, _a) {\n        var _b;\n        var _c = __read(_a, 2), key = _c[0], value = _c[1];\n        if (value === null) {\n            return acc;\n        }\n        return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));\n    }, {});\n};\nvar deserializeAws_restJson1ReputationOptions = function (output, context) {\n    return {\n        LastFreshStart: output.LastFreshStart !== undefined && output.LastFreshStart !== null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastFreshStart)))\n            : undefined,\n        ReputationMetricsEnabled: __expectBoolean(output.ReputationMetricsEnabled),\n    };\n};\nvar deserializeAws_restJson1ReviewDetails = function (output, context) {\n    return {\n        CaseId: __expectString(output.CaseId),\n        Status: __expectString(output.Status),\n    };\n};\nvar deserializeAws_restJson1SendingOptions = function (output, context) {\n    return {\n        SendingEnabled: __expectBoolean(output.SendingEnabled),\n    };\n};\nvar deserializeAws_restJson1SendQuota = function (output, context) {\n    return {\n        Max24HourSend: __limitedParseDouble(output.Max24HourSend),\n        MaxSendRate: __limitedParseDouble(output.MaxSendRate),\n        SentLast24Hours: __limitedParseDouble(output.SentLast24Hours),\n    };\n};\nvar deserializeAws_restJson1SnsDestination = function (output, context) {\n    return {\n        TopicArn: __expectString(output.TopicArn),\n    };\n};\nvar deserializeAws_restJson1SuppressedDestination = function (output, context) {\n    return {\n        Attributes: output.Attributes !== undefined && output.Attributes !== null\n            ? deserializeAws_restJson1SuppressedDestinationAttributes(output.Attributes, context)\n            : undefined,\n        EmailAddress: __expectString(output.EmailAddress),\n        LastUpdateTime: output.LastUpdateTime !== undefined && output.LastUpdateTime !== null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdateTime)))\n            : undefined,\n        Reason: __expectString(output.Reason),\n    };\n};\nvar deserializeAws_restJson1SuppressedDestinationAttributes = function (output, context) {\n    return {\n        FeedbackId: __expectString(output.FeedbackId),\n        MessageId: __expectString(output.MessageId),\n    };\n};\nvar deserializeAws_restJson1SuppressedDestinationSummaries = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1SuppressedDestinationSummary(entry, context);\n    });\n};\nvar deserializeAws_restJson1SuppressedDestinationSummary = function (output, context) {\n    return {\n        EmailAddress: __expectString(output.EmailAddress),\n        LastUpdateTime: output.LastUpdateTime !== undefined && output.LastUpdateTime !== null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdateTime)))\n            : undefined,\n        Reason: __expectString(output.Reason),\n    };\n};\nvar deserializeAws_restJson1SuppressionAttributes = function (output, context) {\n    return {\n        SuppressedReasons: output.SuppressedReasons !== undefined && output.SuppressedReasons !== null\n            ? deserializeAws_restJson1SuppressionListReasons(output.SuppressedReasons, context)\n            : undefined,\n    };\n};\nvar deserializeAws_restJson1SuppressionListDestination = function (output, context) {\n    return {\n        SuppressionListImportAction: __expectString(output.SuppressionListImportAction),\n    };\n};\nvar deserializeAws_restJson1SuppressionListReasons = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n};\nvar deserializeAws_restJson1SuppressionOptions = function (output, context) {\n    return {\n        SuppressedReasons: output.SuppressedReasons !== undefined && output.SuppressedReasons !== null\n            ? deserializeAws_restJson1SuppressionListReasons(output.SuppressedReasons, context)\n            : undefined,\n    };\n};\nvar deserializeAws_restJson1Tag = function (output, context) {\n    return {\n        Key: __expectString(output.Key),\n        Value: __expectString(output.Value),\n    };\n};\nvar deserializeAws_restJson1TagList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1Tag(entry, context);\n    });\n};\nvar deserializeAws_restJson1Topic = function (output, context) {\n    return {\n        DefaultSubscriptionStatus: __expectString(output.DefaultSubscriptionStatus),\n        Description: __expectString(output.Description),\n        DisplayName: __expectString(output.DisplayName),\n        TopicName: __expectString(output.TopicName),\n    };\n};\nvar deserializeAws_restJson1TopicPreference = function (output, context) {\n    return {\n        SubscriptionStatus: __expectString(output.SubscriptionStatus),\n        TopicName: __expectString(output.TopicName),\n    };\n};\nvar deserializeAws_restJson1TopicPreferenceList = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1TopicPreference(entry, context);\n    });\n};\nvar deserializeAws_restJson1Topics = function (output, context) {\n    return (output || [])\n        .filter(function (e) { return e != null; })\n        .map(function (entry) {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1Topic(entry, context);\n    });\n};\nvar deserializeAws_restJson1TrackingOptions = function (output, context) {\n    return {\n        CustomRedirectDomain: __expectString(output.CustomRedirectDomain),\n    };\n};\nvar deserializeAws_restJson1VolumeStatistics = function (output, context) {\n    return {\n        InboxRawCount: __expectLong(output.InboxRawCount),\n        ProjectedInbox: __expectLong(output.ProjectedInbox),\n        ProjectedSpam: __expectLong(output.ProjectedSpam),\n        SpamRawCount: __expectLong(output.SpamRawCount),\n    };\n};\nvar deserializeMetadata = function (output) {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\nvar collectBody = function (streamBody, context) {\n    if (streamBody === void 0) { streamBody = new Uint8Array(); }\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nvar collectBodyString = function (streamBody, context) {\n    return collectBody(streamBody, context).then(function (body) { return context.utf8Encoder(body); });\n};\nvar isSerializableHeaderValue = function (value) {\n    return value !== undefined &&\n        value !== null &&\n        value !== \"\" &&\n        (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n        (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\nvar parseBody = function (streamBody, context) {\n    return collectBodyString(streamBody, context).then(function (encoded) {\n        if (encoded.length) {\n            return JSON.parse(encoded);\n        }\n        return {};\n    });\n};\nvar loadRestJsonErrorCode = function (output, data) {\n    var findKey = function (object, key) { return Object.keys(object).find(function (k) { return k.toLowerCase() === key.toLowerCase(); }); };\n    var sanitizeErrorCode = function (rawValue) {\n        var cleanValue = rawValue;\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n    return \"\";\n};\n"]},"metadata":{},"sourceType":"module"}